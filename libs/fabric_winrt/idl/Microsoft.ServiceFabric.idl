//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Windows.Win32.Foundation.idl";

// Forward Declare
namespace Windows
{
    namespace Win32
    {
        namespace Foundation
        {
            typedef struct BOOL BOOL;

            typedef struct BOOLEAN BOOLEAN;

            typedef struct FILETIME FILETIME;

            typedef struct HRESULT HRESULT;

            typedef struct PWSTR PWSTR;
        }
    }
}
namespace Microsoft
{
    namespace ServiceFabric
    {
        typedef enum FABRIC_APPLICATION_DEFINITION_KIND FABRIC_APPLICATION_DEFINITION_KIND;

        typedef enum FABRIC_APPLICATION_DEFINITION_KIND_FILTER FABRIC_APPLICATION_DEFINITION_KIND_FILTER;

        typedef enum FABRIC_APPLICATION_PACKAGE_CLEANUP_POLICY FABRIC_APPLICATION_PACKAGE_CLEANUP_POLICY;

        typedef enum FABRIC_APPLICATION_STATUS FABRIC_APPLICATION_STATUS;

        typedef enum FABRIC_APPLICATION_TYPE_DEFINITION_KIND FABRIC_APPLICATION_TYPE_DEFINITION_KIND;

        typedef enum FABRIC_APPLICATION_TYPE_DEFINITION_KIND_FILTER FABRIC_APPLICATION_TYPE_DEFINITION_KIND_FILTER;

        typedef enum FABRIC_APPLICATION_TYPE_STATUS FABRIC_APPLICATION_TYPE_STATUS;

        typedef enum FABRIC_APPLICATION_UPDATE_DESCRIPTION_FLAGS FABRIC_APPLICATION_UPDATE_DESCRIPTION_FLAGS;

        typedef enum FABRIC_APPLICATION_UPGRADE_KIND FABRIC_APPLICATION_UPGRADE_KIND;

        typedef enum FABRIC_APPLICATION_UPGRADE_STATE FABRIC_APPLICATION_UPGRADE_STATE;

        typedef enum FABRIC_CHAOS_EVENT_KIND FABRIC_CHAOS_EVENT_KIND;

        typedef enum FABRIC_CHAOS_SCHEDULE_STATUS FABRIC_CHAOS_SCHEDULE_STATUS;

        typedef enum FABRIC_CHAOS_STATUS FABRIC_CHAOS_STATUS;

        typedef enum FABRIC_CLAIMS_RETRIEVAL_METADATA_KIND FABRIC_CLAIMS_RETRIEVAL_METADATA_KIND;

        typedef enum FABRIC_CLIENT_ROLE FABRIC_CLIENT_ROLE;

        typedef enum FABRIC_CODE_PACKAGE_ENTRY_POINT_KIND FABRIC_CODE_PACKAGE_ENTRY_POINT_KIND;

        typedef enum FABRIC_CODE_PACKAGE_EVENT_TYPE FABRIC_CODE_PACKAGE_EVENT_TYPE;

        typedef enum FABRIC_DATA_LOSS_MODE FABRIC_DATA_LOSS_MODE;

        typedef enum FABRIC_DEPLOYMENT_STATUS FABRIC_DEPLOYMENT_STATUS;

        typedef enum FABRIC_DIAGNOSTICS_SINKS_KIND FABRIC_DIAGNOSTICS_SINKS_KIND;

        typedef enum FABRIC_DLLHOST_HOSTED_DLL_KIND FABRIC_DLLHOST_HOSTED_DLL_KIND;

        typedef enum FABRIC_DLLHOST_ISOLATION_POLICY FABRIC_DLLHOST_ISOLATION_POLICY;

        typedef enum FABRIC_ENTRY_POINT_STATUS FABRIC_ENTRY_POINT_STATUS;

        typedef enum FABRIC_ENUMERATION_STATUS FABRIC_ENUMERATION_STATUS;

        typedef enum FABRIC_ERROR_CODE FABRIC_ERROR_CODE;

        typedef enum FABRIC_EXEHOST_WORKING_FOLDER FABRIC_EXEHOST_WORKING_FOLDER;

        typedef enum FABRIC_FAULT_TYPE FABRIC_FAULT_TYPE;

        typedef enum FABRIC_HEALTH_ENTITY_KIND FABRIC_HEALTH_ENTITY_KIND;

        typedef enum FABRIC_HEALTH_EVALUATION_KIND FABRIC_HEALTH_EVALUATION_KIND;

        typedef enum FABRIC_HEALTH_REPORT_KIND FABRIC_HEALTH_REPORT_KIND;

        typedef enum FABRIC_HEALTH_STATE FABRIC_HEALTH_STATE;

        typedef enum FABRIC_HEALTH_STATE_FILTER FABRIC_HEALTH_STATE_FILTER;

        typedef enum FABRIC_HOST_ISOLATION_MODE FABRIC_HOST_ISOLATION_MODE;

        typedef enum FABRIC_HOST_TYPE FABRIC_HOST_TYPE;

        typedef enum FABRIC_KEY_VALUE_STORE_FULL_COPY_MODE FABRIC_KEY_VALUE_STORE_FULL_COPY_MODE;

        typedef enum FABRIC_KEY_VALUE_STORE_MIGRATION_PHASE FABRIC_KEY_VALUE_STORE_MIGRATION_PHASE;

        typedef enum FABRIC_KEY_VALUE_STORE_MIGRATION_STATE FABRIC_KEY_VALUE_STORE_MIGRATION_STATE;

        typedef enum FABRIC_KEY_VALUE_STORE_NOTIFICATION_MODE FABRIC_KEY_VALUE_STORE_NOTIFICATION_MODE;

        typedef enum FABRIC_KEY_VALUE_STORE_PROVIDER_KIND FABRIC_KEY_VALUE_STORE_PROVIDER_KIND;

        typedef enum FABRIC_LOCAL_STORE_KIND FABRIC_LOCAL_STORE_KIND;

        typedef enum FABRIC_MONITORED_UPGRADE_FAILURE_ACTION FABRIC_MONITORED_UPGRADE_FAILURE_ACTION;

        typedef enum FABRIC_MOVE_COST FABRIC_MOVE_COST;

        typedef enum FABRIC_MOVE_PRIMARY_DESCRIPTION_KIND FABRIC_MOVE_PRIMARY_DESCRIPTION_KIND;

        typedef enum FABRIC_MOVE_SECONDARY_DESCRIPTION_KIND FABRIC_MOVE_SECONDARY_DESCRIPTION_KIND;

        typedef enum FABRIC_NETWORK_STATUS FABRIC_NETWORK_STATUS;

        typedef enum FABRIC_NETWORK_STATUS_FILTER FABRIC_NETWORK_STATUS_FILTER;

        typedef enum FABRIC_NETWORK_TYPE FABRIC_NETWORK_TYPE;

        typedef enum FABRIC_NODE_DEACTIVATION_INTENT FABRIC_NODE_DEACTIVATION_INTENT;

        typedef enum FABRIC_NODE_DEACTIVATION_STATUS FABRIC_NODE_DEACTIVATION_STATUS;

        typedef enum FABRIC_NODE_DEACTIVATION_TASK_TYPE FABRIC_NODE_DEACTIVATION_TASK_TYPE;

        typedef enum FABRIC_NODE_TRANSITION_TYPE FABRIC_NODE_TRANSITION_TYPE;

        typedef enum FABRIC_NODE_UPGRADE_PHASE FABRIC_NODE_UPGRADE_PHASE;

        typedef enum FABRIC_OPERATION_TYPE FABRIC_OPERATION_TYPE;

        typedef enum FABRIC_PACKAGE_SHARING_POLICY_SCOPE FABRIC_PACKAGE_SHARING_POLICY_SCOPE;

        typedef enum FABRIC_PARTITION_KEY_TYPE FABRIC_PARTITION_KEY_TYPE;

        typedef enum FABRIC_PARTITION_SCHEME FABRIC_PARTITION_SCHEME;

        typedef enum FABRIC_PARTITION_SELECTOR_TYPE FABRIC_PARTITION_SELECTOR_TYPE;

        typedef enum FABRIC_PLACEMENT_POLICY_TYPE FABRIC_PLACEMENT_POLICY_TYPE;

        typedef enum FABRIC_PROPERTY_BATCH_OPERATION_KIND FABRIC_PROPERTY_BATCH_OPERATION_KIND;

        typedef enum FABRIC_PROPERTY_TYPE_ID FABRIC_PROPERTY_TYPE_ID;

        typedef enum FABRIC_PROTECTION_LEVEL FABRIC_PROTECTION_LEVEL;

        typedef enum FABRIC_PROVISION_APPLICATION_TYPE_KIND FABRIC_PROVISION_APPLICATION_TYPE_KIND;

        typedef enum FABRIC_QUERY_NODE_STATUS FABRIC_QUERY_NODE_STATUS;

        typedef enum FABRIC_QUERY_NODE_STATUS_FILTER FABRIC_QUERY_NODE_STATUS_FILTER;

        typedef enum FABRIC_QUERY_REPLICATOR_OPERATION_NAME FABRIC_QUERY_REPLICATOR_OPERATION_NAME;

        typedef enum FABRIC_QUERY_SERVICE_OPERATION_NAME FABRIC_QUERY_SERVICE_OPERATION_NAME;

        typedef enum FABRIC_QUERY_SERVICE_PARTITION_STATUS FABRIC_QUERY_SERVICE_PARTITION_STATUS;

        typedef enum FABRIC_QUERY_SERVICE_REPLICA_STATUS FABRIC_QUERY_SERVICE_REPLICA_STATUS;

        typedef enum FABRIC_QUERY_SERVICE_REPLICA_STATUS_FILTER FABRIC_QUERY_SERVICE_REPLICA_STATUS_FILTER;

        typedef enum FABRIC_QUERY_SERVICE_STATUS FABRIC_QUERY_SERVICE_STATUS;

        typedef enum FABRIC_QUORUM_LOSS_MODE FABRIC_QUORUM_LOSS_MODE;

        typedef enum FABRIC_RECONFIGURATION_PHASE FABRIC_RECONFIGURATION_PHASE;

        typedef enum FABRIC_RECONFIGURATION_TYPE FABRIC_RECONFIGURATION_TYPE;

        typedef enum FABRIC_REPAIR_IMPACT_KIND FABRIC_REPAIR_IMPACT_KIND;

        typedef enum FABRIC_REPAIR_NODE_IMPACT_LEVEL FABRIC_REPAIR_NODE_IMPACT_LEVEL;

        typedef enum FABRIC_REPAIR_SCOPE_IDENTIFIER_KIND FABRIC_REPAIR_SCOPE_IDENTIFIER_KIND;

        typedef enum FABRIC_REPAIR_TARGET_KIND FABRIC_REPAIR_TARGET_KIND;

        typedef enum FABRIC_REPAIR_TASK_FLAGS FABRIC_REPAIR_TASK_FLAGS;

        typedef enum FABRIC_REPAIR_TASK_HEALTH_CHECK_STATE FABRIC_REPAIR_TASK_HEALTH_CHECK_STATE;

        typedef enum FABRIC_REPAIR_TASK_HEALTH_POLICY_UPDATE_SETTINGS_FLAGS FABRIC_REPAIR_TASK_HEALTH_POLICY_UPDATE_SETTINGS_FLAGS;

        typedef enum FABRIC_REPAIR_TASK_RESULT FABRIC_REPAIR_TASK_RESULT;

        typedef enum FABRIC_REPAIR_TASK_STATE FABRIC_REPAIR_TASK_STATE;

        typedef enum FABRIC_REPAIR_TASK_STATE_FILTER FABRIC_REPAIR_TASK_STATE_FILTER;

        typedef enum FABRIC_REPLICATOR_SETTINGS_FLAGS FABRIC_REPLICATOR_SETTINGS_FLAGS;

        typedef enum FABRIC_REPLICA_OPEN_MODE FABRIC_REPLICA_OPEN_MODE;

        typedef enum FABRIC_REPLICA_ROLE FABRIC_REPLICA_ROLE;

        typedef enum FABRIC_REPLICA_SET_QUORUM_MODE FABRIC_REPLICA_SET_QUORUM_MODE;

        typedef enum FABRIC_REPLICA_STATUS FABRIC_REPLICA_STATUS;

        typedef enum FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION_KIND FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION_KIND;

        typedef enum FABRIC_RESTART_NODE_DESCRIPTION_KIND FABRIC_RESTART_NODE_DESCRIPTION_KIND;

        typedef enum FABRIC_RESTART_PARTITION_MODE FABRIC_RESTART_PARTITION_MODE;

        typedef enum FABRIC_ROLLING_UPGRADE_MODE FABRIC_ROLLING_UPGRADE_MODE;

        typedef enum FABRIC_ROLLING_UPGRADE_UPDATE_FLAGS FABRIC_ROLLING_UPGRADE_UPDATE_FLAGS;

        typedef enum FABRIC_SAFETY_CHECK_KIND FABRIC_SAFETY_CHECK_KIND;

        typedef enum FABRIC_SCALING_MECHANISM_KIND FABRIC_SCALING_MECHANISM_KIND;

        typedef enum FABRIC_SCALING_TRIGGER_KIND FABRIC_SCALING_TRIGGER_KIND;

        typedef enum FABRIC_SECURITY_CREDENTIAL_KIND FABRIC_SECURITY_CREDENTIAL_KIND;

        typedef enum FABRIC_SERVICE_CORRELATION_SCHEME FABRIC_SERVICE_CORRELATION_SCHEME;

        typedef enum FABRIC_SERVICE_DESCRIPTION_KIND FABRIC_SERVICE_DESCRIPTION_KIND;

        typedef enum FABRIC_SERVICE_ENDPOINT_ROLE FABRIC_SERVICE_ENDPOINT_ROLE;

        typedef enum FABRIC_SERVICE_KIND FABRIC_SERVICE_KIND;

        typedef enum FABRIC_SERVICE_LOAD_METRIC_WEIGHT FABRIC_SERVICE_LOAD_METRIC_WEIGHT;

        typedef enum FABRIC_SERVICE_NOTIFICATION_FILTER_FLAGS FABRIC_SERVICE_NOTIFICATION_FILTER_FLAGS;

        typedef enum FABRIC_SERVICE_PACKAGE_ACTIVATION_MODE FABRIC_SERVICE_PACKAGE_ACTIVATION_MODE;

        typedef enum FABRIC_SERVICE_PARTITION_ACCESS_STATUS FABRIC_SERVICE_PARTITION_ACCESS_STATUS;

        typedef enum FABRIC_SERVICE_PARTITION_KIND FABRIC_SERVICE_PARTITION_KIND;

        typedef enum FABRIC_SERVICE_REPLICA_KIND FABRIC_SERVICE_REPLICA_KIND;

        typedef enum FABRIC_SERVICE_TYPE_REGISTRATION_STATUS FABRIC_SERVICE_TYPE_REGISTRATION_STATUS;

        typedef enum FABRIC_START_NODE_DESCRIPTION_KIND FABRIC_START_NODE_DESCRIPTION_KIND;

        typedef enum FABRIC_STATEFUL_SERVICE_FAILOVER_SETTINGS_FLAGS FABRIC_STATEFUL_SERVICE_FAILOVER_SETTINGS_FLAGS;

        typedef enum FABRIC_STATEFUL_SERVICE_UPDATE_DESCRIPTION_FLAGS FABRIC_STATEFUL_SERVICE_UPDATE_DESCRIPTION_FLAGS;

        typedef enum FABRIC_STATELESS_SERVICE_UPDATE_DESCRIPTION_FLAGS FABRIC_STATELESS_SERVICE_UPDATE_DESCRIPTION_FLAGS;

        typedef enum FABRIC_STOP_NODE_DESCRIPTION_KIND FABRIC_STOP_NODE_DESCRIPTION_KIND;

        typedef enum FABRIC_STORE_BACKUP_OPTION FABRIC_STORE_BACKUP_OPTION;

        typedef enum FABRIC_TEST_COMMAND_PROGRESS_STATE FABRIC_TEST_COMMAND_PROGRESS_STATE;

        typedef enum FABRIC_TEST_COMMAND_STATE_FILTER FABRIC_TEST_COMMAND_STATE_FILTER;

        typedef enum FABRIC_TEST_COMMAND_TYPE FABRIC_TEST_COMMAND_TYPE;

        typedef enum FABRIC_TEST_COMMAND_TYPE_FILTER FABRIC_TEST_COMMAND_TYPE_FILTER;

        typedef enum FABRIC_TRANSACTION_ISOLATION_LEVEL FABRIC_TRANSACTION_ISOLATION_LEVEL;

        typedef enum FABRIC_UPGRADE_DOMAIN_STATE FABRIC_UPGRADE_DOMAIN_STATE;

        typedef enum FABRIC_UPGRADE_FAILURE_REASON FABRIC_UPGRADE_FAILURE_REASON;

        typedef enum FABRIC_UPGRADE_KIND FABRIC_UPGRADE_KIND;

        typedef enum FABRIC_UPGRADE_SAFETY_CHECK_KIND FABRIC_UPGRADE_SAFETY_CHECK_KIND;

        typedef enum FABRIC_UPGRADE_STATE FABRIC_UPGRADE_STATE;

        typedef enum FABRIC_X509_FIND_TYPE FABRIC_X509_FIND_TYPE;

        typedef enum FABRIC_X509_STORE_LOCATION FABRIC_X509_STORE_LOCATION;

        typedef struct FABRIC_AAD_CLAIMS_RETRIEVAL_METADATA FABRIC_AAD_CLAIMS_RETRIEVAL_METADATA;

        typedef struct FABRIC_AAD_CLAIMS_RETRIEVAL_METADATA_EX1 FABRIC_AAD_CLAIMS_RETRIEVAL_METADATA_EX1;

        typedef struct FABRIC_APPLICATIONS_HEALTH_EVALUATION FABRIC_APPLICATIONS_HEALTH_EVALUATION;

        typedef struct FABRIC_APPLICATION_CAPACITY_DESCRIPTION FABRIC_APPLICATION_CAPACITY_DESCRIPTION;

        typedef struct FABRIC_APPLICATION_DESCRIPTION FABRIC_APPLICATION_DESCRIPTION;

        typedef struct FABRIC_APPLICATION_DESCRIPTION_EX1 FABRIC_APPLICATION_DESCRIPTION_EX1;

        typedef struct FABRIC_APPLICATION_HEALTH FABRIC_APPLICATION_HEALTH;

        typedef struct FABRIC_APPLICATION_HEALTH_EVALUATION FABRIC_APPLICATION_HEALTH_EVALUATION;

        typedef struct FABRIC_APPLICATION_HEALTH_EX1 FABRIC_APPLICATION_HEALTH_EX1;

        typedef struct FABRIC_APPLICATION_HEALTH_EX2 FABRIC_APPLICATION_HEALTH_EX2;

        typedef struct FABRIC_APPLICATION_HEALTH_POLICY FABRIC_APPLICATION_HEALTH_POLICY;

        typedef struct FABRIC_APPLICATION_HEALTH_POLICY_MAP FABRIC_APPLICATION_HEALTH_POLICY_MAP;

        typedef struct FABRIC_APPLICATION_HEALTH_POLICY_MAP_ITEM FABRIC_APPLICATION_HEALTH_POLICY_MAP_ITEM;

        typedef struct FABRIC_APPLICATION_HEALTH_QUERY_DESCRIPTION FABRIC_APPLICATION_HEALTH_QUERY_DESCRIPTION;

        typedef struct FABRIC_APPLICATION_HEALTH_QUERY_DESCRIPTION_EX1 FABRIC_APPLICATION_HEALTH_QUERY_DESCRIPTION_EX1;

        typedef struct FABRIC_APPLICATION_HEALTH_REPORT FABRIC_APPLICATION_HEALTH_REPORT;

        typedef struct FABRIC_APPLICATION_HEALTH_STATE FABRIC_APPLICATION_HEALTH_STATE;

        typedef struct FABRIC_APPLICATION_HEALTH_STATES_FILTER FABRIC_APPLICATION_HEALTH_STATES_FILTER;

        typedef struct FABRIC_APPLICATION_HEALTH_STATE_CHUNK FABRIC_APPLICATION_HEALTH_STATE_CHUNK;

        typedef struct FABRIC_APPLICATION_HEALTH_STATE_CHUNK_EX1 FABRIC_APPLICATION_HEALTH_STATE_CHUNK_EX1;

        typedef struct FABRIC_APPLICATION_HEALTH_STATE_CHUNK_LIST FABRIC_APPLICATION_HEALTH_STATE_CHUNK_LIST;

        typedef struct FABRIC_APPLICATION_HEALTH_STATE_FILTER FABRIC_APPLICATION_HEALTH_STATE_FILTER;

        typedef struct FABRIC_APPLICATION_HEALTH_STATE_FILTER_EX1 FABRIC_APPLICATION_HEALTH_STATE_FILTER_EX1;

        typedef struct FABRIC_APPLICATION_HEALTH_STATE_FILTER_LIST FABRIC_APPLICATION_HEALTH_STATE_FILTER_LIST;

        typedef struct FABRIC_APPLICATION_HEALTH_STATE_LIST FABRIC_APPLICATION_HEALTH_STATE_LIST;

        typedef struct FABRIC_APPLICATION_HEALTH_STATISTICS_FILTER FABRIC_APPLICATION_HEALTH_STATISTICS_FILTER;

        typedef struct FABRIC_APPLICATION_LOAD_INFORMATION FABRIC_APPLICATION_LOAD_INFORMATION;

        typedef struct FABRIC_APPLICATION_LOAD_INFORMATION_QUERY_DESCRIPTION FABRIC_APPLICATION_LOAD_INFORMATION_QUERY_DESCRIPTION;

        typedef struct FABRIC_APPLICATION_LOAD_METRIC_INFORMATION FABRIC_APPLICATION_LOAD_METRIC_INFORMATION;

        typedef struct FABRIC_APPLICATION_LOAD_METRIC_INFORMATION_LIST FABRIC_APPLICATION_LOAD_METRIC_INFORMATION_LIST;

        typedef struct FABRIC_APPLICATION_METRIC_DESCRIPTION FABRIC_APPLICATION_METRIC_DESCRIPTION;

        typedef struct FABRIC_APPLICATION_METRIC_LIST FABRIC_APPLICATION_METRIC_LIST;

        typedef struct FABRIC_APPLICATION_NAME_QUERY_DESCRIPTION FABRIC_APPLICATION_NAME_QUERY_DESCRIPTION;

        typedef struct FABRIC_APPLICATION_NAME_QUERY_RESULT FABRIC_APPLICATION_NAME_QUERY_RESULT;

        typedef struct FABRIC_APPLICATION_NETWORK_QUERY_DESCRIPTION FABRIC_APPLICATION_NETWORK_QUERY_DESCRIPTION;

        typedef struct FABRIC_APPLICATION_NETWORK_QUERY_RESULT_ITEM FABRIC_APPLICATION_NETWORK_QUERY_RESULT_ITEM;

        typedef struct FABRIC_APPLICATION_NETWORK_QUERY_RESULT_LIST FABRIC_APPLICATION_NETWORK_QUERY_RESULT_LIST;

        typedef struct FABRIC_APPLICATION_PARAMETER FABRIC_APPLICATION_PARAMETER;

        typedef struct FABRIC_APPLICATION_PARAMETER_LIST FABRIC_APPLICATION_PARAMETER_LIST;

        typedef struct FABRIC_APPLICATION_PRINCIPALS_DESCRIPTION FABRIC_APPLICATION_PRINCIPALS_DESCRIPTION;

        typedef struct FABRIC_APPLICATION_QUERY_DESCRIPTION FABRIC_APPLICATION_QUERY_DESCRIPTION;

        typedef struct FABRIC_APPLICATION_QUERY_DESCRIPTION_EX1 FABRIC_APPLICATION_QUERY_DESCRIPTION_EX1;

        typedef struct FABRIC_APPLICATION_QUERY_DESCRIPTION_EX2 FABRIC_APPLICATION_QUERY_DESCRIPTION_EX2;

        typedef struct FABRIC_APPLICATION_QUERY_DESCRIPTION_EX3 FABRIC_APPLICATION_QUERY_DESCRIPTION_EX3;

        typedef struct FABRIC_APPLICATION_QUERY_DESCRIPTION_EX4 FABRIC_APPLICATION_QUERY_DESCRIPTION_EX4;

        typedef struct FABRIC_APPLICATION_QUERY_RESULT_ITEM FABRIC_APPLICATION_QUERY_RESULT_ITEM;

        typedef struct FABRIC_APPLICATION_QUERY_RESULT_ITEM_EX1 FABRIC_APPLICATION_QUERY_RESULT_ITEM_EX1;

        typedef struct FABRIC_APPLICATION_QUERY_RESULT_ITEM_EX2 FABRIC_APPLICATION_QUERY_RESULT_ITEM_EX2;

        typedef struct FABRIC_APPLICATION_QUERY_RESULT_LIST FABRIC_APPLICATION_QUERY_RESULT_LIST;

        typedef struct FABRIC_APPLICATION_TYPE_APPLICATIONS_HEALTH_EVALUATION FABRIC_APPLICATION_TYPE_APPLICATIONS_HEALTH_EVALUATION;

        typedef struct FABRIC_APPLICATION_TYPE_HEALTH_POLICY_MAP FABRIC_APPLICATION_TYPE_HEALTH_POLICY_MAP;

        typedef struct FABRIC_APPLICATION_TYPE_HEALTH_POLICY_MAP_ITEM FABRIC_APPLICATION_TYPE_HEALTH_POLICY_MAP_ITEM;

        typedef struct FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION;

        typedef struct FABRIC_APPLICATION_TYPE_QUERY_RESULT_ITEM FABRIC_APPLICATION_TYPE_QUERY_RESULT_ITEM;

        typedef struct FABRIC_APPLICATION_TYPE_QUERY_RESULT_ITEM_EX1 FABRIC_APPLICATION_TYPE_QUERY_RESULT_ITEM_EX1;

        typedef struct FABRIC_APPLICATION_TYPE_QUERY_RESULT_ITEM_EX2 FABRIC_APPLICATION_TYPE_QUERY_RESULT_ITEM_EX2;

        typedef struct FABRIC_APPLICATION_TYPE_QUERY_RESULT_LIST FABRIC_APPLICATION_TYPE_QUERY_RESULT_LIST;

        typedef struct FABRIC_APPLICATION_UPDATE_DESCRIPTION FABRIC_APPLICATION_UPDATE_DESCRIPTION;

        typedef struct FABRIC_APPLICATION_UPGRADE_DESCRIPTION FABRIC_APPLICATION_UPGRADE_DESCRIPTION;

        typedef struct FABRIC_APPLICATION_UPGRADE_PROGRESS FABRIC_APPLICATION_UPGRADE_PROGRESS;

        typedef struct FABRIC_APPLICATION_UPGRADE_PROGRESS_EX1 FABRIC_APPLICATION_UPGRADE_PROGRESS_EX1;

        typedef struct FABRIC_APPLICATION_UPGRADE_PROGRESS_EX2 FABRIC_APPLICATION_UPGRADE_PROGRESS_EX2;

        typedef struct FABRIC_APPLICATION_UPGRADE_UPDATE_DESCRIPTION FABRIC_APPLICATION_UPGRADE_UPDATE_DESCRIPTION;

        typedef struct FABRIC_CANCEL_TEST_COMMAND_DESCRIPTION FABRIC_CANCEL_TEST_COMMAND_DESCRIPTION;

        typedef struct FABRIC_CHAOS_DESCRIPTION FABRIC_CHAOS_DESCRIPTION;

        typedef struct FABRIC_CHAOS_EVENT FABRIC_CHAOS_EVENT;

        typedef struct FABRIC_CHAOS_EVENTS_SEGMENT FABRIC_CHAOS_EVENTS_SEGMENT;

        typedef struct FABRIC_CHAOS_EVENTS_SEGMENT_DESCRIPTION FABRIC_CHAOS_EVENTS_SEGMENT_DESCRIPTION;

        typedef struct FABRIC_CHAOS_EVENTS_SEGMENT_FILTER FABRIC_CHAOS_EVENTS_SEGMENT_FILTER;

        typedef struct FABRIC_CHAOS_EVENT_LIST FABRIC_CHAOS_EVENT_LIST;

        typedef struct FABRIC_CHAOS_PARAMETERS FABRIC_CHAOS_PARAMETERS;

        typedef struct FABRIC_CHAOS_PARAMETERS_EX1 FABRIC_CHAOS_PARAMETERS_EX1;

        typedef struct FABRIC_CHAOS_PARAMETERS_EX2 FABRIC_CHAOS_PARAMETERS_EX2;

        typedef struct FABRIC_CHAOS_REPORT FABRIC_CHAOS_REPORT;

        typedef struct FABRIC_CHAOS_REPORT_FILTER FABRIC_CHAOS_REPORT_FILTER;

        typedef struct FABRIC_CHAOS_SCHEDULE FABRIC_CHAOS_SCHEDULE;

        typedef struct FABRIC_CHAOS_SCHEDULE_CHAOS_PARAMETERS_MAP FABRIC_CHAOS_SCHEDULE_CHAOS_PARAMETERS_MAP;

        typedef struct FABRIC_CHAOS_SCHEDULE_CHAOS_PARAMETERS_MAP_ITEM FABRIC_CHAOS_SCHEDULE_CHAOS_PARAMETERS_MAP_ITEM;

        typedef struct FABRIC_CHAOS_SCHEDULE_DESCRIPTION FABRIC_CHAOS_SCHEDULE_DESCRIPTION;

        typedef struct FABRIC_CHAOS_SCHEDULE_JOB FABRIC_CHAOS_SCHEDULE_JOB;

        typedef struct FABRIC_CHAOS_SCHEDULE_JOB_ACTIVE_DAYS FABRIC_CHAOS_SCHEDULE_JOB_ACTIVE_DAYS;

        typedef struct FABRIC_CHAOS_SCHEDULE_JOB_LIST FABRIC_CHAOS_SCHEDULE_JOB_LIST;

        typedef struct FABRIC_CHAOS_SCHEDULE_TIME_RANGE_UTC FABRIC_CHAOS_SCHEDULE_TIME_RANGE_UTC;

        typedef struct FABRIC_CHAOS_SCHEDULE_TIME_RANGE_UTC_LIST FABRIC_CHAOS_SCHEDULE_TIME_RANGE_UTC_LIST;

        typedef struct FABRIC_CHAOS_SCHEDULE_TIME_UTC FABRIC_CHAOS_SCHEDULE_TIME_UTC;

        typedef struct FABRIC_CHAOS_SERVICE_SCHEDULE_DESCRIPTION FABRIC_CHAOS_SERVICE_SCHEDULE_DESCRIPTION;

        typedef struct FABRIC_CHAOS_TARGET_FILTER FABRIC_CHAOS_TARGET_FILTER;

        typedef struct FABRIC_CHECK_EXISTS_PROPERTY_OPERATION FABRIC_CHECK_EXISTS_PROPERTY_OPERATION;

        typedef struct FABRIC_CHECK_SEQUENCE_PROPERTY_OPERATION FABRIC_CHECK_SEQUENCE_PROPERTY_OPERATION;

        typedef struct FABRIC_CHECK_VALUE_PROPERTY_OPERATION FABRIC_CHECK_VALUE_PROPERTY_OPERATION;

        typedef struct FABRIC_CLAIMS_CREDENTIALS FABRIC_CLAIMS_CREDENTIALS;

        typedef struct FABRIC_CLAIMS_CREDENTIALS_EX1 FABRIC_CLAIMS_CREDENTIALS_EX1;

        typedef struct FABRIC_CLAIMS_RETRIEVAL_METADATA FABRIC_CLAIMS_RETRIEVAL_METADATA;

        typedef struct FABRIC_CLIENT_SETTINGS FABRIC_CLIENT_SETTINGS;

        typedef struct FABRIC_CLIENT_SETTINGS_EX1 FABRIC_CLIENT_SETTINGS_EX1;

        typedef struct FABRIC_CLIENT_SETTINGS_EX2 FABRIC_CLIENT_SETTINGS_EX2;

        typedef struct FABRIC_CLIENT_SETTINGS_EX3 FABRIC_CLIENT_SETTINGS_EX3;

        typedef struct FABRIC_CLIENT_SETTINGS_EX4 FABRIC_CLIENT_SETTINGS_EX4;

        typedef struct FABRIC_CLUSTER_HEALTH FABRIC_CLUSTER_HEALTH;

        typedef struct FABRIC_CLUSTER_HEALTH_CHUNK FABRIC_CLUSTER_HEALTH_CHUNK;

        typedef struct FABRIC_CLUSTER_HEALTH_CHUNK_QUERY_DESCRIPTION FABRIC_CLUSTER_HEALTH_CHUNK_QUERY_DESCRIPTION;

        typedef struct FABRIC_CLUSTER_HEALTH_EX1 FABRIC_CLUSTER_HEALTH_EX1;

        typedef struct FABRIC_CLUSTER_HEALTH_EX2 FABRIC_CLUSTER_HEALTH_EX2;

        typedef struct FABRIC_CLUSTER_HEALTH_EX3 FABRIC_CLUSTER_HEALTH_EX3;

        typedef struct FABRIC_CLUSTER_HEALTH_POLICY FABRIC_CLUSTER_HEALTH_POLICY;

        typedef struct FABRIC_CLUSTER_HEALTH_POLICY_EX1 FABRIC_CLUSTER_HEALTH_POLICY_EX1;

        typedef struct FABRIC_CLUSTER_HEALTH_QUERY_DESCRIPTION FABRIC_CLUSTER_HEALTH_QUERY_DESCRIPTION;

        typedef struct FABRIC_CLUSTER_HEALTH_QUERY_DESCRIPTION_EX1 FABRIC_CLUSTER_HEALTH_QUERY_DESCRIPTION_EX1;

        typedef struct FABRIC_CLUSTER_HEALTH_REPORT FABRIC_CLUSTER_HEALTH_REPORT;

        typedef struct FABRIC_CLUSTER_HEALTH_STATISTICS_FILTER FABRIC_CLUSTER_HEALTH_STATISTICS_FILTER;

        typedef struct FABRIC_CLUSTER_LOAD_INFORMATION FABRIC_CLUSTER_LOAD_INFORMATION;

        typedef struct FABRIC_CLUSTER_MANIFEST_QUERY_DESCRIPTION FABRIC_CLUSTER_MANIFEST_QUERY_DESCRIPTION;

        typedef struct FABRIC_CLUSTER_UPGRADE_HEALTH_POLICY FABRIC_CLUSTER_UPGRADE_HEALTH_POLICY;

        typedef struct FABRIC_CODE_PACKAGE_DESCRIPTION FABRIC_CODE_PACKAGE_DESCRIPTION;

        typedef struct FABRIC_CODE_PACKAGE_DESCRIPTION_LIST FABRIC_CODE_PACKAGE_DESCRIPTION_LIST;

        typedef struct FABRIC_CODE_PACKAGE_ENTRY_POINT FABRIC_CODE_PACKAGE_ENTRY_POINT;

        typedef struct FABRIC_CODE_PACKAGE_ENTRY_POINT_DESCRIPTION FABRIC_CODE_PACKAGE_ENTRY_POINT_DESCRIPTION;

        typedef struct FABRIC_CODE_PACKAGE_ENTRY_POINT_EX1 FABRIC_CODE_PACKAGE_ENTRY_POINT_EX1;

        typedef struct FABRIC_CODE_PACKAGE_ENTRY_POINT_STATISTICS FABRIC_CODE_PACKAGE_ENTRY_POINT_STATISTICS;

        typedef struct FABRIC_CODE_PACKAGE_EVENT_DESCRIPTION FABRIC_CODE_PACKAGE_EVENT_DESCRIPTION;

        typedef struct FABRIC_CONFIGURATION_PACKAGE_DESCRIPTION FABRIC_CONFIGURATION_PACKAGE_DESCRIPTION;

        typedef struct FABRIC_CONFIGURATION_PACKAGE_DESCRIPTION_LIST FABRIC_CONFIGURATION_PACKAGE_DESCRIPTION_LIST;

        typedef struct FABRIC_CONFIGURATION_PARAMETER FABRIC_CONFIGURATION_PARAMETER;

        typedef struct FABRIC_CONFIGURATION_PARAMETER_EX1 FABRIC_CONFIGURATION_PARAMETER_EX1;

        typedef struct FABRIC_CONFIGURATION_PARAMETER_LIST FABRIC_CONFIGURATION_PARAMETER_LIST;

        typedef struct FABRIC_CONFIGURATION_SECTION FABRIC_CONFIGURATION_SECTION;

        typedef struct FABRIC_CONFIGURATION_SECTION_LIST FABRIC_CONFIGURATION_SECTION_LIST;

        typedef struct FABRIC_CONFIGURATION_SETTINGS FABRIC_CONFIGURATION_SETTINGS;

        typedef struct FABRIC_CONTAINERHOST_ENTRY_POINT_DESCRIPTION FABRIC_CONTAINERHOST_ENTRY_POINT_DESCRIPTION;

        typedef struct FABRIC_DATA_PACKAGE_DESCRIPTION FABRIC_DATA_PACKAGE_DESCRIPTION;

        typedef struct FABRIC_DATA_PACKAGE_DESCRIPTION_LIST FABRIC_DATA_PACKAGE_DESCRIPTION_LIST;

        typedef struct FABRIC_DELETE_APPLICATION_DESCRIPTION FABRIC_DELETE_APPLICATION_DESCRIPTION;

        typedef struct FABRIC_DELETE_NETWORK_DESCRIPTION FABRIC_DELETE_NETWORK_DESCRIPTION;

        typedef struct FABRIC_DELETE_PROPERTY_OPERATION FABRIC_DELETE_PROPERTY_OPERATION;

        typedef struct FABRIC_DELETE_SERVICE_DESCRIPTION FABRIC_DELETE_SERVICE_DESCRIPTION;

        typedef struct FABRIC_DELTA_NODES_CHECK_HEALTH_EVALUATION FABRIC_DELTA_NODES_CHECK_HEALTH_EVALUATION;

        typedef struct FABRIC_DEPLOYED_APPLICATIONS_HEALTH_EVALUATION FABRIC_DEPLOYED_APPLICATIONS_HEALTH_EVALUATION;

        typedef struct FABRIC_DEPLOYED_APPLICATION_HEALTH FABRIC_DEPLOYED_APPLICATION_HEALTH;

        typedef struct FABRIC_DEPLOYED_APPLICATION_HEALTH_EVALUATION FABRIC_DEPLOYED_APPLICATION_HEALTH_EVALUATION;

        typedef struct FABRIC_DEPLOYED_APPLICATION_HEALTH_EX1 FABRIC_DEPLOYED_APPLICATION_HEALTH_EX1;

        typedef struct FABRIC_DEPLOYED_APPLICATION_HEALTH_EX2 FABRIC_DEPLOYED_APPLICATION_HEALTH_EX2;

        typedef struct FABRIC_DEPLOYED_APPLICATION_HEALTH_QUERY_DESCRIPTION FABRIC_DEPLOYED_APPLICATION_HEALTH_QUERY_DESCRIPTION;

        typedef struct FABRIC_DEPLOYED_APPLICATION_HEALTH_QUERY_DESCRIPTION_EX1 FABRIC_DEPLOYED_APPLICATION_HEALTH_QUERY_DESCRIPTION_EX1;

        typedef struct FABRIC_DEPLOYED_APPLICATION_HEALTH_REPORT FABRIC_DEPLOYED_APPLICATION_HEALTH_REPORT;

        typedef struct FABRIC_DEPLOYED_APPLICATION_HEALTH_STATE FABRIC_DEPLOYED_APPLICATION_HEALTH_STATE;

        typedef struct FABRIC_DEPLOYED_APPLICATION_HEALTH_STATES_FILTER FABRIC_DEPLOYED_APPLICATION_HEALTH_STATES_FILTER;

        typedef struct FABRIC_DEPLOYED_APPLICATION_HEALTH_STATE_CHUNK FABRIC_DEPLOYED_APPLICATION_HEALTH_STATE_CHUNK;

        typedef struct FABRIC_DEPLOYED_APPLICATION_HEALTH_STATE_CHUNK_LIST FABRIC_DEPLOYED_APPLICATION_HEALTH_STATE_CHUNK_LIST;

        typedef struct FABRIC_DEPLOYED_APPLICATION_HEALTH_STATE_FILTER FABRIC_DEPLOYED_APPLICATION_HEALTH_STATE_FILTER;

        typedef struct FABRIC_DEPLOYED_APPLICATION_HEALTH_STATE_FILTER_LIST FABRIC_DEPLOYED_APPLICATION_HEALTH_STATE_FILTER_LIST;

        typedef struct FABRIC_DEPLOYED_APPLICATION_HEALTH_STATE_LIST FABRIC_DEPLOYED_APPLICATION_HEALTH_STATE_LIST;

        typedef struct FABRIC_DEPLOYED_APPLICATION_HEALTH_STATISTICS_FILTER FABRIC_DEPLOYED_APPLICATION_HEALTH_STATISTICS_FILTER;

        typedef struct FABRIC_DEPLOYED_APPLICATION_QUERY_DESCRIPTION FABRIC_DEPLOYED_APPLICATION_QUERY_DESCRIPTION;

        typedef struct FABRIC_DEPLOYED_APPLICATION_QUERY_RESULT_ITEM FABRIC_DEPLOYED_APPLICATION_QUERY_RESULT_ITEM;

        typedef struct FABRIC_DEPLOYED_APPLICATION_QUERY_RESULT_ITEM_EX FABRIC_DEPLOYED_APPLICATION_QUERY_RESULT_ITEM_EX;

        typedef struct FABRIC_DEPLOYED_APPLICATION_QUERY_RESULT_ITEM_EX2 FABRIC_DEPLOYED_APPLICATION_QUERY_RESULT_ITEM_EX2;

        typedef struct FABRIC_DEPLOYED_APPLICATION_QUERY_RESULT_LIST FABRIC_DEPLOYED_APPLICATION_QUERY_RESULT_LIST;

        typedef struct FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_DESCRIPTION FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_DESCRIPTION;

        typedef struct FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_RESULT_ITEM FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_RESULT_ITEM;

        typedef struct FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_RESULT_ITEM_EX1 FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_RESULT_ITEM_EX1;

        typedef struct FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_RESULT_LIST FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_RESULT_LIST;

        typedef struct FABRIC_DEPLOYED_CODE_PACKAGE_RESULT FABRIC_DEPLOYED_CODE_PACKAGE_RESULT;

        typedef struct FABRIC_DEPLOYED_CODE_PACKAGE_RESULT_EX1 FABRIC_DEPLOYED_CODE_PACKAGE_RESULT_EX1;

        typedef struct FABRIC_DEPLOYED_NETWORK_CODE_PACKAGE_QUERY_DESCRIPTION FABRIC_DEPLOYED_NETWORK_CODE_PACKAGE_QUERY_DESCRIPTION;

        typedef struct FABRIC_DEPLOYED_NETWORK_CODE_PACKAGE_QUERY_RESULT_ITEM FABRIC_DEPLOYED_NETWORK_CODE_PACKAGE_QUERY_RESULT_ITEM;

        typedef struct FABRIC_DEPLOYED_NETWORK_CODE_PACKAGE_QUERY_RESULT_LIST FABRIC_DEPLOYED_NETWORK_CODE_PACKAGE_QUERY_RESULT_LIST;

        typedef struct FABRIC_DEPLOYED_NETWORK_QUERY_DESCRIPTION FABRIC_DEPLOYED_NETWORK_QUERY_DESCRIPTION;

        typedef struct FABRIC_DEPLOYED_NETWORK_QUERY_RESULT_ITEM FABRIC_DEPLOYED_NETWORK_QUERY_RESULT_ITEM;

        typedef struct FABRIC_DEPLOYED_NETWORK_QUERY_RESULT_LIST FABRIC_DEPLOYED_NETWORK_QUERY_RESULT_LIST;

        typedef struct FABRIC_DEPLOYED_SERVICE_PACKAGES_HEALTH_EVALUATION FABRIC_DEPLOYED_SERVICE_PACKAGES_HEALTH_EVALUATION;

        typedef struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH;

        typedef struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_EVALUATION FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_EVALUATION;

        typedef struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_EVALUATION_EX1 FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_EVALUATION_EX1;

        typedef struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_EX1 FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_EX1;

        typedef struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_EX2 FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_EX2;

        typedef struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_QUERY_DESCRIPTION FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_QUERY_DESCRIPTION;

        typedef struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_QUERY_DESCRIPTION_EX1 FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_QUERY_DESCRIPTION_EX1;

        typedef struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_REPORT FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_REPORT;

        typedef struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_REPORT_EX1 FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_REPORT_EX1;

        typedef struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE;

        typedef struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATES_FILTER FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATES_FILTER;

        typedef struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_CHUNK FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_CHUNK;

        typedef struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_CHUNK_EX1 FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_CHUNK_EX1;

        typedef struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_CHUNK_LIST FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_CHUNK_LIST;

        typedef struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_EX1 FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_EX1;

        typedef struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_FILTER FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_FILTER;

        typedef struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_FILTER_EX1 FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_FILTER_EX1;

        typedef struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_FILTER_LIST FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_FILTER_LIST;

        typedef struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_LIST FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_LIST;

        typedef struct FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_DESCRIPTION FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_DESCRIPTION;

        typedef struct FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_RESULT_ITEM FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_RESULT_ITEM;

        typedef struct FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_RESULT_ITEM_EX1 FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_RESULT_ITEM_EX1;

        typedef struct FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_RESULT_LIST FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_RESULT_LIST;

        typedef struct FABRIC_DEPLOYED_SERVICE_REPLICA_DETAIL_QUERY_DESCRIPTION FABRIC_DEPLOYED_SERVICE_REPLICA_DETAIL_QUERY_DESCRIPTION;

        typedef struct FABRIC_DEPLOYED_SERVICE_REPLICA_DETAIL_QUERY_RESULT_ITEM FABRIC_DEPLOYED_SERVICE_REPLICA_DETAIL_QUERY_RESULT_ITEM;

        typedef struct FABRIC_DEPLOYED_SERVICE_REPLICA_QUERY_DESCRIPTION FABRIC_DEPLOYED_SERVICE_REPLICA_QUERY_DESCRIPTION;

        typedef struct FABRIC_DEPLOYED_SERVICE_REPLICA_QUERY_RESULT_ITEM FABRIC_DEPLOYED_SERVICE_REPLICA_QUERY_RESULT_ITEM;

        typedef struct FABRIC_DEPLOYED_SERVICE_REPLICA_QUERY_RESULT_LIST FABRIC_DEPLOYED_SERVICE_REPLICA_QUERY_RESULT_LIST;

        typedef struct FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_DESCRIPTION FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_DESCRIPTION;

        typedef struct FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_RESULT_ITEM FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_RESULT_ITEM;

        typedef struct FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_RESULT_ITEM_EX1 FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_RESULT_ITEM_EX1;

        typedef struct FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_RESULT_LIST FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_RESULT_LIST;

        typedef struct FABRIC_DEPLOYED_STATEFUL_SERVICE_REPLICA_DETAIL_QUERY_RESULT_ITEM FABRIC_DEPLOYED_STATEFUL_SERVICE_REPLICA_DETAIL_QUERY_RESULT_ITEM;

        typedef struct FABRIC_DEPLOYED_STATEFUL_SERVICE_REPLICA_DETAIL_QUERY_RESULT_ITEM_EX1 FABRIC_DEPLOYED_STATEFUL_SERVICE_REPLICA_DETAIL_QUERY_RESULT_ITEM_EX1;

        typedef struct FABRIC_DEPLOYED_STATEFUL_SERVICE_REPLICA_DETAIL_QUERY_RESULT_ITEM_EX2 FABRIC_DEPLOYED_STATEFUL_SERVICE_REPLICA_DETAIL_QUERY_RESULT_ITEM_EX2;

        typedef struct FABRIC_DEPLOYED_STATEFUL_SERVICE_REPLICA_QUERY_RESULT_ITEM FABRIC_DEPLOYED_STATEFUL_SERVICE_REPLICA_QUERY_RESULT_ITEM;

        typedef struct FABRIC_DEPLOYED_STATEFUL_SERVICE_REPLICA_QUERY_RESULT_ITEM_EX1 FABRIC_DEPLOYED_STATEFUL_SERVICE_REPLICA_QUERY_RESULT_ITEM_EX1;

        typedef struct FABRIC_DEPLOYED_STATEFUL_SERVICE_REPLICA_QUERY_RESULT_ITEM_EX2 FABRIC_DEPLOYED_STATEFUL_SERVICE_REPLICA_QUERY_RESULT_ITEM_EX2;

        typedef struct FABRIC_DEPLOYED_STATEFUL_SERVICE_REPLICA_QUERY_RESULT_ITEM_EX3 FABRIC_DEPLOYED_STATEFUL_SERVICE_REPLICA_QUERY_RESULT_ITEM_EX3;

        typedef struct FABRIC_DEPLOYED_STATELESS_SERVICE_INSTANCE_DETAIL_QUERY_RESULT_ITEM FABRIC_DEPLOYED_STATELESS_SERVICE_INSTANCE_DETAIL_QUERY_RESULT_ITEM;

        typedef struct FABRIC_DEPLOYED_STATELESS_SERVICE_INSTANCE_DETAIL_QUERY_RESULT_ITEM_EX1 FABRIC_DEPLOYED_STATELESS_SERVICE_INSTANCE_DETAIL_QUERY_RESULT_ITEM_EX1;

        typedef struct FABRIC_DEPLOYED_STATELESS_SERVICE_INSTANCE_QUERY_RESULT_ITEM FABRIC_DEPLOYED_STATELESS_SERVICE_INSTANCE_QUERY_RESULT_ITEM;

        typedef struct FABRIC_DEPLOYED_STATELESS_SERVICE_INSTANCE_QUERY_RESULT_ITEM_EX1 FABRIC_DEPLOYED_STATELESS_SERVICE_INSTANCE_QUERY_RESULT_ITEM_EX1;

        typedef struct FABRIC_DEPLOYED_STATELESS_SERVICE_INSTANCE_QUERY_RESULT_ITEM_EX2 FABRIC_DEPLOYED_STATELESS_SERVICE_INSTANCE_QUERY_RESULT_ITEM_EX2;

        typedef struct FABRIC_DEPLOYED_STATELESS_SERVICE_INSTANCE_QUERY_RESULT_ITEM_EX3 FABRIC_DEPLOYED_STATELESS_SERVICE_INSTANCE_QUERY_RESULT_ITEM_EX3;

        typedef struct FABRIC_DLLHOST_ENTRY_POINT_DESCRIPTION FABRIC_DLLHOST_ENTRY_POINT_DESCRIPTION;

        typedef struct FABRIC_DLLHOST_HOSTED_DLL_DESCRIPTION FABRIC_DLLHOST_HOSTED_DLL_DESCRIPTION;

        typedef struct FABRIC_DLLHOST_HOSTED_DLL_DESCRIPTION_LIST FABRIC_DLLHOST_HOSTED_DLL_DESCRIPTION_LIST;

        typedef struct FABRIC_DLLHOST_HOSTED_MANAGED_DLL_DESCRIPTION FABRIC_DLLHOST_HOSTED_MANAGED_DLL_DESCRIPTION;

        typedef struct FABRIC_DLLHOST_HOSTED_UNMANAGED_DLL_DESCRIPTION FABRIC_DLLHOST_HOSTED_UNMANAGED_DLL_DESCRIPTION;

        typedef struct FABRIC_ENDPOINT_RESOURCE_DESCRIPTION FABRIC_ENDPOINT_RESOURCE_DESCRIPTION;

        typedef struct FABRIC_ENDPOINT_RESOURCE_DESCRIPTION_EX1 FABRIC_ENDPOINT_RESOURCE_DESCRIPTION_EX1;

        typedef struct FABRIC_ENDPOINT_RESOURCE_DESCRIPTION_EX2 FABRIC_ENDPOINT_RESOURCE_DESCRIPTION_EX2;

        typedef struct FABRIC_ENDPOINT_RESOURCE_DESCRIPTION_LIST FABRIC_ENDPOINT_RESOURCE_DESCRIPTION_LIST;

        typedef struct FABRIC_ENTITY_KIND_HEALTH_STATE_COUNT FABRIC_ENTITY_KIND_HEALTH_STATE_COUNT;

        typedef struct FABRIC_EPOCH FABRIC_EPOCH;

        typedef struct FABRIC_ESE_LOCAL_STORE_SETTINGS FABRIC_ESE_LOCAL_STORE_SETTINGS;

        typedef struct FABRIC_ESE_LOCAL_STORE_SETTINGS_EX1 FABRIC_ESE_LOCAL_STORE_SETTINGS_EX1;

        typedef struct FABRIC_ESE_LOCAL_STORE_SETTINGS_EX2 FABRIC_ESE_LOCAL_STORE_SETTINGS_EX2;

        typedef struct FABRIC_ESE_LOCAL_STORE_SETTINGS_EX3 FABRIC_ESE_LOCAL_STORE_SETTINGS_EX3;

        typedef struct FABRIC_ESE_LOCAL_STORE_SETTINGS_EX4 FABRIC_ESE_LOCAL_STORE_SETTINGS_EX4;

        typedef struct FABRIC_ESE_LOCAL_STORE_SETTINGS_EX5 FABRIC_ESE_LOCAL_STORE_SETTINGS_EX5;

        typedef struct FABRIC_ESE_LOCAL_STORE_SETTINGS_EX6 FABRIC_ESE_LOCAL_STORE_SETTINGS_EX6;

        typedef struct FABRIC_EVENT_CONTEXT_MAP FABRIC_EVENT_CONTEXT_MAP;

        typedef struct FABRIC_EVENT_CONTEXT_MAP_ITEM FABRIC_EVENT_CONTEXT_MAP_ITEM;

        typedef struct FABRIC_EVENT_HEALTH_EVALUATION FABRIC_EVENT_HEALTH_EVALUATION;

        typedef struct FABRIC_EXECUTING_FAULTS_EVENT FABRIC_EXECUTING_FAULTS_EVENT;

        typedef struct FABRIC_EXEHOST_ENTRY_POINT_DESCRIPTION FABRIC_EXEHOST_ENTRY_POINT_DESCRIPTION;

        typedef struct FABRIC_EXEHOST_ENTRY_POINT_DESCRIPTION_EX1 FABRIC_EXEHOST_ENTRY_POINT_DESCRIPTION_EX1;

        typedef struct FABRIC_EXEHOST_ENTRY_POINT_DESCRIPTION_EX2 FABRIC_EXEHOST_ENTRY_POINT_DESCRIPTION_EX2;

        typedef struct FABRIC_EXTERNAL_STORE_PROVISION_APPLICATION_TYPE_DESCRIPTION FABRIC_EXTERNAL_STORE_PROVISION_APPLICATION_TYPE_DESCRIPTION;

        typedef struct FABRIC_GATEWAY_INFORMATION FABRIC_GATEWAY_INFORMATION;

        typedef struct FABRIC_GET_CHAOS_REPORT_DESCRIPTION FABRIC_GET_CHAOS_REPORT_DESCRIPTION;

        typedef struct FABRIC_GET_PROPERTY_OPERATION FABRIC_GET_PROPERTY_OPERATION;

        typedef struct FABRIC_HEALTH_EVALUATION FABRIC_HEALTH_EVALUATION;

        typedef struct FABRIC_HEALTH_EVALUATION_LIST FABRIC_HEALTH_EVALUATION_LIST;

        typedef struct FABRIC_HEALTH_EVENT FABRIC_HEALTH_EVENT;

        typedef struct FABRIC_HEALTH_EVENTS_FILTER FABRIC_HEALTH_EVENTS_FILTER;

        typedef struct FABRIC_HEALTH_EVENT_EX1 FABRIC_HEALTH_EVENT_EX1;

        typedef struct FABRIC_HEALTH_EVENT_LIST FABRIC_HEALTH_EVENT_LIST;

        typedef struct FABRIC_HEALTH_INFORMATION FABRIC_HEALTH_INFORMATION;

        typedef struct FABRIC_HEALTH_REPORT FABRIC_HEALTH_REPORT;

        typedef struct FABRIC_HEALTH_REPORT_SEND_OPTIONS FABRIC_HEALTH_REPORT_SEND_OPTIONS;

        typedef struct FABRIC_HEALTH_STATE_COUNT FABRIC_HEALTH_STATE_COUNT;

        typedef struct FABRIC_HEALTH_STATISTICS FABRIC_HEALTH_STATISTICS;

        typedef struct FABRIC_INT64_RANGE_PARTITION_INFORMATION FABRIC_INT64_RANGE_PARTITION_INFORMATION;

        typedef struct FABRIC_KEY_VALUE_STORE_ITEM FABRIC_KEY_VALUE_STORE_ITEM;

        typedef struct FABRIC_KEY_VALUE_STORE_ITEM_METADATA FABRIC_KEY_VALUE_STORE_ITEM_METADATA;

        typedef struct FABRIC_KEY_VALUE_STORE_ITEM_METADATA_EX1 FABRIC_KEY_VALUE_STORE_ITEM_METADATA_EX1;

        typedef struct FABRIC_KEY_VALUE_STORE_MIGRATION_QUERY_RESULT FABRIC_KEY_VALUE_STORE_MIGRATION_QUERY_RESULT;

        typedef struct FABRIC_KEY_VALUE_STORE_REPLICA_SETTINGS FABRIC_KEY_VALUE_STORE_REPLICA_SETTINGS;

        typedef struct FABRIC_KEY_VALUE_STORE_REPLICA_SETTINGS_EX1 FABRIC_KEY_VALUE_STORE_REPLICA_SETTINGS_EX1;

        typedef struct FABRIC_KEY_VALUE_STORE_REPLICA_SETTINGS_EX2 FABRIC_KEY_VALUE_STORE_REPLICA_SETTINGS_EX2;

        typedef struct FABRIC_KEY_VALUE_STORE_REPLICA_SETTINGS_EX3 FABRIC_KEY_VALUE_STORE_REPLICA_SETTINGS_EX3;

        typedef struct FABRIC_KEY_VALUE_STORE_RESTORE_SETTINGS FABRIC_KEY_VALUE_STORE_RESTORE_SETTINGS;

        typedef struct FABRIC_KEY_VALUE_STORE_RESTORE_SETTINGS_EX1 FABRIC_KEY_VALUE_STORE_RESTORE_SETTINGS_EX1;

        typedef struct FABRIC_KEY_VALUE_STORE_STATUS_QUERY_RESULT FABRIC_KEY_VALUE_STORE_STATUS_QUERY_RESULT;

        typedef struct FABRIC_KEY_VALUE_STORE_STATUS_QUERY_RESULT_EX1 FABRIC_KEY_VALUE_STORE_STATUS_QUERY_RESULT_EX1;

        typedef struct FABRIC_KEY_VALUE_STORE_TRANSACTION_SETTINGS FABRIC_KEY_VALUE_STORE_TRANSACTION_SETTINGS;

        typedef struct FABRIC_LOAD_METRIC FABRIC_LOAD_METRIC;

        typedef struct FABRIC_LOAD_METRIC_INFORMATION FABRIC_LOAD_METRIC_INFORMATION;

        typedef struct FABRIC_LOAD_METRIC_INFORMATION_EX1 FABRIC_LOAD_METRIC_INFORMATION_EX1;

        typedef struct FABRIC_LOAD_METRIC_INFORMATION_EX2 FABRIC_LOAD_METRIC_INFORMATION_EX2;

        typedef struct FABRIC_LOAD_METRIC_INFORMATION_EX3 FABRIC_LOAD_METRIC_INFORMATION_EX3;

        typedef struct FABRIC_LOAD_METRIC_INFORMATION_LIST FABRIC_LOAD_METRIC_INFORMATION_LIST;

        typedef struct FABRIC_LOAD_METRIC_REPORT FABRIC_LOAD_METRIC_REPORT;

        typedef struct FABRIC_LOAD_METRIC_REPORT_EX1 FABRIC_LOAD_METRIC_REPORT_EX1;

        typedef struct FABRIC_LOAD_METRIC_REPORT_LIST FABRIC_LOAD_METRIC_REPORT_LIST;

        typedef struct FABRIC_LOCAL_NETWORK_CONFIGURATION_DESCRIPTION FABRIC_LOCAL_NETWORK_CONFIGURATION_DESCRIPTION;

        typedef struct FABRIC_LOCAL_NETWORK_DESCRIPTION FABRIC_LOCAL_NETWORK_DESCRIPTION;

        typedef struct FABRIC_LOCAL_NETWORK_INFORMATION FABRIC_LOCAL_NETWORK_INFORMATION;

        typedef struct FABRIC_MOVE_PRIMARY_DESCRIPTION2 FABRIC_MOVE_PRIMARY_DESCRIPTION2;

        typedef struct FABRIC_MOVE_PRIMARY_DESCRIPTION_USING_NODE_NAME FABRIC_MOVE_PRIMARY_DESCRIPTION_USING_NODE_NAME;

        typedef struct FABRIC_MOVE_PRIMARY_RESULT FABRIC_MOVE_PRIMARY_RESULT;

        typedef struct FABRIC_MOVE_SECONDARY_DESCRIPTION2 FABRIC_MOVE_SECONDARY_DESCRIPTION2;

        typedef struct FABRIC_MOVE_SECONDARY_DESCRIPTION_USING_NODE_NAME FABRIC_MOVE_SECONDARY_DESCRIPTION_USING_NODE_NAME;

        typedef struct FABRIC_MOVE_SECONDARY_RESULT FABRIC_MOVE_SECONDARY_RESULT;

        typedef struct FABRIC_NAMED_PARTITION_INFORMATION FABRIC_NAMED_PARTITION_INFORMATION;

        typedef struct FABRIC_NAMED_PARTITION_SCHEME_DESCRIPTION FABRIC_NAMED_PARTITION_SCHEME_DESCRIPTION;

        typedef struct FABRIC_NAMED_PROPERTY FABRIC_NAMED_PROPERTY;

        typedef struct FABRIC_NAMED_PROPERTY_METADATA FABRIC_NAMED_PROPERTY_METADATA;

        typedef struct FABRIC_NAMED_PROPERTY_METADATA_EX1 FABRIC_NAMED_PROPERTY_METADATA_EX1;

        typedef struct FABRIC_NAMED_REPARTITION_DESCRIPTION FABRIC_NAMED_REPARTITION_DESCRIPTION;

        typedef struct FABRIC_NETWORK_APPLICATION_QUERY_DESCRIPTION FABRIC_NETWORK_APPLICATION_QUERY_DESCRIPTION;

        typedef struct FABRIC_NETWORK_APPLICATION_QUERY_RESULT_ITEM FABRIC_NETWORK_APPLICATION_QUERY_RESULT_ITEM;

        typedef struct FABRIC_NETWORK_APPLICATION_QUERY_RESULT_LIST FABRIC_NETWORK_APPLICATION_QUERY_RESULT_LIST;

        typedef struct FABRIC_NETWORK_DESCRIPTION FABRIC_NETWORK_DESCRIPTION;

        typedef struct FABRIC_NETWORK_INFORMATION FABRIC_NETWORK_INFORMATION;

        typedef struct FABRIC_NETWORK_NODE_QUERY_DESCRIPTION FABRIC_NETWORK_NODE_QUERY_DESCRIPTION;

        typedef struct FABRIC_NETWORK_NODE_QUERY_RESULT_ITEM FABRIC_NETWORK_NODE_QUERY_RESULT_ITEM;

        typedef struct FABRIC_NETWORK_NODE_QUERY_RESULT_LIST FABRIC_NETWORK_NODE_QUERY_RESULT_LIST;

        typedef struct FABRIC_NETWORK_QUERY_DESCRIPTION FABRIC_NETWORK_QUERY_DESCRIPTION;

        typedef struct FABRIC_NETWORK_QUERY_RESULT_LIST FABRIC_NETWORK_QUERY_RESULT_LIST;

        typedef struct FABRIC_NODES_HEALTH_EVALUATION FABRIC_NODES_HEALTH_EVALUATION;

        typedef struct FABRIC_NODE_CONTEXT FABRIC_NODE_CONTEXT;

        typedef struct FABRIC_NODE_DEACTIVATION_QUERY_RESULT_ITEM FABRIC_NODE_DEACTIVATION_QUERY_RESULT_ITEM;

        typedef struct FABRIC_NODE_DEACTIVATION_QUERY_RESULT_ITEM_EX1 FABRIC_NODE_DEACTIVATION_QUERY_RESULT_ITEM_EX1;

        typedef struct FABRIC_NODE_DEACTIVATION_TASK FABRIC_NODE_DEACTIVATION_TASK;

        typedef struct FABRIC_NODE_DEACTIVATION_TASK_ID FABRIC_NODE_DEACTIVATION_TASK_ID;

        typedef struct FABRIC_NODE_DEACTIVATION_TASK_LIST FABRIC_NODE_DEACTIVATION_TASK_LIST;

        typedef struct FABRIC_NODE_HEALTH FABRIC_NODE_HEALTH;

        typedef struct FABRIC_NODE_HEALTH_EVALUATION FABRIC_NODE_HEALTH_EVALUATION;

        typedef struct FABRIC_NODE_HEALTH_EX1 FABRIC_NODE_HEALTH_EX1;

        typedef struct FABRIC_NODE_HEALTH_QUERY_DESCRIPTION FABRIC_NODE_HEALTH_QUERY_DESCRIPTION;

        typedef struct FABRIC_NODE_HEALTH_REPORT FABRIC_NODE_HEALTH_REPORT;

        typedef struct FABRIC_NODE_HEALTH_STATE FABRIC_NODE_HEALTH_STATE;

        typedef struct FABRIC_NODE_HEALTH_STATES_FILTER FABRIC_NODE_HEALTH_STATES_FILTER;

        typedef struct FABRIC_NODE_HEALTH_STATE_CHUNK FABRIC_NODE_HEALTH_STATE_CHUNK;

        typedef struct FABRIC_NODE_HEALTH_STATE_CHUNK_LIST FABRIC_NODE_HEALTH_STATE_CHUNK_LIST;

        typedef struct FABRIC_NODE_HEALTH_STATE_FILTER FABRIC_NODE_HEALTH_STATE_FILTER;

        typedef struct FABRIC_NODE_HEALTH_STATE_FILTER_LIST FABRIC_NODE_HEALTH_STATE_FILTER_LIST;

        typedef struct FABRIC_NODE_HEALTH_STATE_LIST FABRIC_NODE_HEALTH_STATE_LIST;

        typedef struct FABRIC_NODE_ID FABRIC_NODE_ID;

        typedef struct FABRIC_NODE_LOAD_INFORMATION FABRIC_NODE_LOAD_INFORMATION;

        typedef struct FABRIC_NODE_LOAD_INFORMATION_QUERY_DESCRIPTION FABRIC_NODE_LOAD_INFORMATION_QUERY_DESCRIPTION;

        typedef struct FABRIC_NODE_LOAD_METRIC_INFORMATION FABRIC_NODE_LOAD_METRIC_INFORMATION;

        typedef struct FABRIC_NODE_LOAD_METRIC_INFORMATION_EX1 FABRIC_NODE_LOAD_METRIC_INFORMATION_EX1;

        typedef struct FABRIC_NODE_LOAD_METRIC_INFORMATION_EX2 FABRIC_NODE_LOAD_METRIC_INFORMATION_EX2;

        typedef struct FABRIC_NODE_LOAD_METRIC_INFORMATION_LIST FABRIC_NODE_LOAD_METRIC_INFORMATION_LIST;

        typedef struct FABRIC_NODE_QUERY_DESCRIPTION FABRIC_NODE_QUERY_DESCRIPTION;

        typedef struct FABRIC_NODE_QUERY_DESCRIPTION_EX1 FABRIC_NODE_QUERY_DESCRIPTION_EX1;

        typedef struct FABRIC_NODE_QUERY_DESCRIPTION_EX2 FABRIC_NODE_QUERY_DESCRIPTION_EX2;

        typedef struct FABRIC_NODE_QUERY_DESCRIPTION_EX3 FABRIC_NODE_QUERY_DESCRIPTION_EX3;

        typedef struct FABRIC_NODE_QUERY_RESULT_ITEM FABRIC_NODE_QUERY_RESULT_ITEM;

        typedef struct FABRIC_NODE_QUERY_RESULT_ITEM_EX1 FABRIC_NODE_QUERY_RESULT_ITEM_EX1;

        typedef struct FABRIC_NODE_QUERY_RESULT_ITEM_EX2 FABRIC_NODE_QUERY_RESULT_ITEM_EX2;

        typedef struct FABRIC_NODE_QUERY_RESULT_ITEM_EX3 FABRIC_NODE_QUERY_RESULT_ITEM_EX3;

        typedef struct FABRIC_NODE_QUERY_RESULT_ITEM_EX4 FABRIC_NODE_QUERY_RESULT_ITEM_EX4;

        typedef struct FABRIC_NODE_QUERY_RESULT_ITEM_EX5 FABRIC_NODE_QUERY_RESULT_ITEM_EX5;

        typedef struct FABRIC_NODE_QUERY_RESULT_ITEM_EX6 FABRIC_NODE_QUERY_RESULT_ITEM_EX6;

        typedef struct FABRIC_NODE_QUERY_RESULT_LIST FABRIC_NODE_QUERY_RESULT_LIST;

        typedef struct FABRIC_NODE_RESULT FABRIC_NODE_RESULT;

        typedef struct FABRIC_NODE_START_DESCRIPTION FABRIC_NODE_START_DESCRIPTION;

        typedef struct FABRIC_NODE_STOP_DESCRIPTION FABRIC_NODE_STOP_DESCRIPTION;

        typedef struct FABRIC_NODE_TRANSITION_DESCRIPTION FABRIC_NODE_TRANSITION_DESCRIPTION;

        typedef struct FABRIC_NODE_TRANSITION_PROGRESS FABRIC_NODE_TRANSITION_PROGRESS;

        typedef struct FABRIC_NODE_TRANSITION_RESULT FABRIC_NODE_TRANSITION_RESULT;

        typedef struct FABRIC_NODE_UPGRADE_PROGRESS FABRIC_NODE_UPGRADE_PROGRESS;

        typedef struct FABRIC_NODE_UPGRADE_PROGRESS_LIST FABRIC_NODE_UPGRADE_PROGRESS_LIST;

        typedef struct FABRIC_OPERATION_DATA_BUFFER FABRIC_OPERATION_DATA_BUFFER;

        typedef struct FABRIC_OPERATION_ID FABRIC_OPERATION_ID;

        typedef struct FABRIC_OPERATION_METADATA FABRIC_OPERATION_METADATA;

        typedef struct FABRIC_ORCHESTRATION_UPGRADE_PROGRESS FABRIC_ORCHESTRATION_UPGRADE_PROGRESS;

        typedef struct FABRIC_ORCHESTRATION_UPGRADE_PROGRESS_EX1 FABRIC_ORCHESTRATION_UPGRADE_PROGRESS_EX1;

        typedef struct FABRIC_ORCHESTRATION_UPGRADE_PROGRESS_EX2 FABRIC_ORCHESTRATION_UPGRADE_PROGRESS_EX2;

        typedef struct FABRIC_PACKAGE_SHARING_POLICY FABRIC_PACKAGE_SHARING_POLICY;

        typedef struct FABRIC_PACKAGE_SHARING_POLICY_LIST FABRIC_PACKAGE_SHARING_POLICY_LIST;

        typedef struct FABRIC_PAGED_DEPLOYED_APPLICATION_QUERY_DESCRIPTION FABRIC_PAGED_DEPLOYED_APPLICATION_QUERY_DESCRIPTION;

        typedef struct FABRIC_PAGING_STATUS FABRIC_PAGING_STATUS;

        typedef struct FABRIC_PARTITIONS_HEALTH_EVALUATION FABRIC_PARTITIONS_HEALTH_EVALUATION;

        typedef struct FABRIC_PARTITION_DATA_LOSS_PROGRESS FABRIC_PARTITION_DATA_LOSS_PROGRESS;

        typedef struct FABRIC_PARTITION_DATA_LOSS_RESULT FABRIC_PARTITION_DATA_LOSS_RESULT;

        typedef struct FABRIC_PARTITION_HEALTH FABRIC_PARTITION_HEALTH;

        typedef struct FABRIC_PARTITION_HEALTH_EVALUATION FABRIC_PARTITION_HEALTH_EVALUATION;

        typedef struct FABRIC_PARTITION_HEALTH_EX1 FABRIC_PARTITION_HEALTH_EX1;

        typedef struct FABRIC_PARTITION_HEALTH_EX2 FABRIC_PARTITION_HEALTH_EX2;

        typedef struct FABRIC_PARTITION_HEALTH_QUERY_DESCRIPTION FABRIC_PARTITION_HEALTH_QUERY_DESCRIPTION;

        typedef struct FABRIC_PARTITION_HEALTH_QUERY_DESCRIPTION_EX1 FABRIC_PARTITION_HEALTH_QUERY_DESCRIPTION_EX1;

        typedef struct FABRIC_PARTITION_HEALTH_REPORT FABRIC_PARTITION_HEALTH_REPORT;

        typedef struct FABRIC_PARTITION_HEALTH_STATE FABRIC_PARTITION_HEALTH_STATE;

        typedef struct FABRIC_PARTITION_HEALTH_STATES_FILTER FABRIC_PARTITION_HEALTH_STATES_FILTER;

        typedef struct FABRIC_PARTITION_HEALTH_STATE_CHUNK FABRIC_PARTITION_HEALTH_STATE_CHUNK;

        typedef struct FABRIC_PARTITION_HEALTH_STATE_CHUNK_LIST FABRIC_PARTITION_HEALTH_STATE_CHUNK_LIST;

        typedef struct FABRIC_PARTITION_HEALTH_STATE_FILTER FABRIC_PARTITION_HEALTH_STATE_FILTER;

        typedef struct FABRIC_PARTITION_HEALTH_STATE_FILTER_LIST FABRIC_PARTITION_HEALTH_STATE_FILTER_LIST;

        typedef struct FABRIC_PARTITION_HEALTH_STATE_LIST FABRIC_PARTITION_HEALTH_STATE_LIST;

        typedef struct FABRIC_PARTITION_HEALTH_STATISTICS_FILTER FABRIC_PARTITION_HEALTH_STATISTICS_FILTER;

        typedef struct FABRIC_PARTITION_LOAD_INFORMATION FABRIC_PARTITION_LOAD_INFORMATION;

        typedef struct FABRIC_PARTITION_LOAD_INFORMATION_QUERY_DESCRIPTION FABRIC_PARTITION_LOAD_INFORMATION_QUERY_DESCRIPTION;

        typedef struct FABRIC_PARTITION_QUORUM_LOSS_PROGRESS FABRIC_PARTITION_QUORUM_LOSS_PROGRESS;

        typedef struct FABRIC_PARTITION_QUORUM_LOSS_RESULT FABRIC_PARTITION_QUORUM_LOSS_RESULT;

        typedef struct FABRIC_PARTITION_RESTART_PROGRESS FABRIC_PARTITION_RESTART_PROGRESS;

        typedef struct FABRIC_PARTITION_RESTART_RESULT FABRIC_PARTITION_RESTART_RESULT;

        typedef struct FABRIC_PARTITION_SAFETY_CHECK FABRIC_PARTITION_SAFETY_CHECK;

        typedef struct FABRIC_PARTITION_SELECTOR FABRIC_PARTITION_SELECTOR;

        typedef struct FABRIC_PLACEMENT_POLICY_INVALID_DOMAIN_DESCRIPTION FABRIC_PLACEMENT_POLICY_INVALID_DOMAIN_DESCRIPTION;

        typedef struct FABRIC_PLACEMENT_POLICY_NONPARTIALLY_PLACE_SERVICE_DESCRIPTION FABRIC_PLACEMENT_POLICY_NONPARTIALLY_PLACE_SERVICE_DESCRIPTION;

        typedef struct FABRIC_PLACEMENT_POLICY_PREFERRED_PRIMARY_DOMAIN_DESCRIPTION FABRIC_PLACEMENT_POLICY_PREFERRED_PRIMARY_DOMAIN_DESCRIPTION;

        typedef struct FABRIC_PLACEMENT_POLICY_REQUIRED_DOMAIN_DESCRIPTION FABRIC_PLACEMENT_POLICY_REQUIRED_DOMAIN_DESCRIPTION;

        typedef struct FABRIC_PLACEMENT_POLICY_REQUIRED_DOMAIN_DISTRIBUTION_DESCRIPTION FABRIC_PLACEMENT_POLICY_REQUIRED_DOMAIN_DISTRIBUTION_DESCRIPTION;

        typedef struct FABRIC_PRIMARY_REPLICATOR_STATUS_QUERY_RESULT FABRIC_PRIMARY_REPLICATOR_STATUS_QUERY_RESULT;

        typedef struct FABRIC_PROPERTY_BATCH_OPERATION FABRIC_PROPERTY_BATCH_OPERATION;

        typedef struct FABRIC_PROVISIONED_CODE_VERSION_QUERY_DESCRIPTION FABRIC_PROVISIONED_CODE_VERSION_QUERY_DESCRIPTION;

        typedef struct FABRIC_PROVISIONED_CODE_VERSION_QUERY_RESULT_ITEM FABRIC_PROVISIONED_CODE_VERSION_QUERY_RESULT_ITEM;

        typedef struct FABRIC_PROVISIONED_CODE_VERSION_QUERY_RESULT_LIST FABRIC_PROVISIONED_CODE_VERSION_QUERY_RESULT_LIST;

        typedef struct FABRIC_PROVISIONED_CONFIG_VERSION_QUERY_DESCRIPTION FABRIC_PROVISIONED_CONFIG_VERSION_QUERY_DESCRIPTION;

        typedef struct FABRIC_PROVISIONED_CONFIG_VERSION_QUERY_RESULT_ITEM FABRIC_PROVISIONED_CONFIG_VERSION_QUERY_RESULT_ITEM;

        typedef struct FABRIC_PROVISIONED_CONFIG_VERSION_QUERY_RESULT_LIST FABRIC_PROVISIONED_CONFIG_VERSION_QUERY_RESULT_LIST;

        typedef struct FABRIC_PROVISION_APPLICATION_TYPE_DESCRIPTION FABRIC_PROVISION_APPLICATION_TYPE_DESCRIPTION;

        typedef struct FABRIC_PROVISION_APPLICATION_TYPE_DESCRIPTION_BASE FABRIC_PROVISION_APPLICATION_TYPE_DESCRIPTION_BASE;

        typedef struct FABRIC_PROVISION_APPLICATION_TYPE_DESCRIPTION_EX1 FABRIC_PROVISION_APPLICATION_TYPE_DESCRIPTION_EX1;

        typedef struct FABRIC_PUT_CUSTOM_PROPERTY_OPERATION FABRIC_PUT_CUSTOM_PROPERTY_OPERATION;

        typedef struct FABRIC_PUT_PROPERTY_OPERATION FABRIC_PUT_PROPERTY_OPERATION;

        typedef struct FABRIC_QUERY_PAGING_DESCRIPTION FABRIC_QUERY_PAGING_DESCRIPTION;

        typedef struct FABRIC_RECONFIGURATION_INFORMATION_QUERY_RESULT FABRIC_RECONFIGURATION_INFORMATION_QUERY_RESULT;

        typedef struct FABRIC_REMOTE_REPLICATOR_ACKNOWLEDGEMENT_DETAIL FABRIC_REMOTE_REPLICATOR_ACKNOWLEDGEMENT_DETAIL;

        typedef struct FABRIC_REMOTE_REPLICATOR_ACKNOWLEDGEMENT_STATUS FABRIC_REMOTE_REPLICATOR_ACKNOWLEDGEMENT_STATUS;

        typedef struct FABRIC_REMOTE_REPLICATOR_STATUS FABRIC_REMOTE_REPLICATOR_STATUS;

        typedef struct FABRIC_REMOTE_REPLICATOR_STATUS_LIST FABRIC_REMOTE_REPLICATOR_STATUS_LIST;

        typedef struct FABRIC_REMOVE_REPLICA_DESCRIPTION FABRIC_REMOVE_REPLICA_DESCRIPTION;

        typedef struct FABRIC_REMOVE_REPLICA_DESCRIPTION_EX1 FABRIC_REMOVE_REPLICA_DESCRIPTION_EX1;

        typedef struct FABRIC_REPAIR_APPROVE_DESCRIPTION FABRIC_REPAIR_APPROVE_DESCRIPTION;

        typedef struct FABRIC_REPAIR_CANCEL_DESCRIPTION FABRIC_REPAIR_CANCEL_DESCRIPTION;

        typedef struct FABRIC_REPAIR_DELETE_DESCRIPTION FABRIC_REPAIR_DELETE_DESCRIPTION;

        typedef struct FABRIC_REPAIR_EXECUTOR_STATE FABRIC_REPAIR_EXECUTOR_STATE;

        typedef struct FABRIC_REPAIR_IMPACT_DESCRIPTION FABRIC_REPAIR_IMPACT_DESCRIPTION;

        typedef struct FABRIC_REPAIR_NODE_IMPACT FABRIC_REPAIR_NODE_IMPACT;

        typedef struct FABRIC_REPAIR_NODE_IMPACT_LIST FABRIC_REPAIR_NODE_IMPACT_LIST;

        typedef struct FABRIC_REPAIR_RESULT_DESCRIPTION FABRIC_REPAIR_RESULT_DESCRIPTION;

        typedef struct FABRIC_REPAIR_SCOPE_IDENTIFIER FABRIC_REPAIR_SCOPE_IDENTIFIER;

        typedef struct FABRIC_REPAIR_TARGET_DESCRIPTION FABRIC_REPAIR_TARGET_DESCRIPTION;

        typedef struct FABRIC_REPAIR_TASK FABRIC_REPAIR_TASK;

        typedef struct FABRIC_REPAIR_TASK_EX1 FABRIC_REPAIR_TASK_EX1;

        typedef struct FABRIC_REPAIR_TASK_HEALTH_POLICY_UPDATE_DESCRIPTION FABRIC_REPAIR_TASK_HEALTH_POLICY_UPDATE_DESCRIPTION;

        typedef struct FABRIC_REPAIR_TASK_HISTORY FABRIC_REPAIR_TASK_HISTORY;

        typedef struct FABRIC_REPAIR_TASK_HISTORY_EX1 FABRIC_REPAIR_TASK_HISTORY_EX1;

        typedef struct FABRIC_REPAIR_TASK_LIST FABRIC_REPAIR_TASK_LIST;

        typedef struct FABRIC_REPAIR_TASK_QUERY_DESCRIPTION FABRIC_REPAIR_TASK_QUERY_DESCRIPTION;

        typedef struct FABRIC_REPLICAS_HEALTH_EVALUATION FABRIC_REPLICAS_HEALTH_EVALUATION;

        typedef struct FABRIC_REPLICATOR_QUEUE_STATUS FABRIC_REPLICATOR_QUEUE_STATUS;

        typedef struct FABRIC_REPLICATOR_SETTINGS FABRIC_REPLICATOR_SETTINGS;

        typedef struct FABRIC_REPLICATOR_SETTINGS_EX1 FABRIC_REPLICATOR_SETTINGS_EX1;

        typedef struct FABRIC_REPLICATOR_SETTINGS_EX2 FABRIC_REPLICATOR_SETTINGS_EX2;

        typedef struct FABRIC_REPLICATOR_SETTINGS_EX3 FABRIC_REPLICATOR_SETTINGS_EX3;

        typedef struct FABRIC_REPLICATOR_SETTINGS_EX4 FABRIC_REPLICATOR_SETTINGS_EX4;

        typedef struct FABRIC_REPLICATOR_STATUS_QUERY_RESULT FABRIC_REPLICATOR_STATUS_QUERY_RESULT;

        typedef struct FABRIC_REPLICA_HEALTH FABRIC_REPLICA_HEALTH;

        typedef struct FABRIC_REPLICA_HEALTH_EVALUATION FABRIC_REPLICA_HEALTH_EVALUATION;

        typedef struct FABRIC_REPLICA_HEALTH_QUERY_DESCRIPTION FABRIC_REPLICA_HEALTH_QUERY_DESCRIPTION;

        typedef struct FABRIC_REPLICA_HEALTH_STATE FABRIC_REPLICA_HEALTH_STATE;

        typedef struct FABRIC_REPLICA_HEALTH_STATES_FILTER FABRIC_REPLICA_HEALTH_STATES_FILTER;

        typedef struct FABRIC_REPLICA_HEALTH_STATE_CHUNK FABRIC_REPLICA_HEALTH_STATE_CHUNK;

        typedef struct FABRIC_REPLICA_HEALTH_STATE_CHUNK_LIST FABRIC_REPLICA_HEALTH_STATE_CHUNK_LIST;

        typedef struct FABRIC_REPLICA_HEALTH_STATE_FILTER FABRIC_REPLICA_HEALTH_STATE_FILTER;

        typedef struct FABRIC_REPLICA_HEALTH_STATE_FILTER_LIST FABRIC_REPLICA_HEALTH_STATE_FILTER_LIST;

        typedef struct FABRIC_REPLICA_HEALTH_STATE_LIST FABRIC_REPLICA_HEALTH_STATE_LIST;

        typedef struct FABRIC_REPLICA_INFORMATION FABRIC_REPLICA_INFORMATION;

        typedef struct FABRIC_REPLICA_INFORMATION_EX1 FABRIC_REPLICA_INFORMATION_EX1;

        typedef struct FABRIC_REPLICA_LOAD_INFORMATION FABRIC_REPLICA_LOAD_INFORMATION;

        typedef struct FABRIC_REPLICA_LOAD_INFORMATION_QUERY_DESCRIPTION FABRIC_REPLICA_LOAD_INFORMATION_QUERY_DESCRIPTION;

        typedef struct FABRIC_REPLICA_SET_CONFIGURATION FABRIC_REPLICA_SET_CONFIGURATION;

        typedef struct FABRIC_REPLICA_STATUS_QUERY_RESULT FABRIC_REPLICA_STATUS_QUERY_RESULT;

        typedef struct FABRIC_RESOLVED_SERVICE_ENDPOINT FABRIC_RESOLVED_SERVICE_ENDPOINT;

        typedef struct FABRIC_RESOLVED_SERVICE_PARTITION FABRIC_RESOLVED_SERVICE_PARTITION;

        typedef struct FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION;

        typedef struct FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION2 FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION2;

        typedef struct FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION_USING_NODE_NAME FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION_USING_NODE_NAME;

        typedef struct FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION_USING_NODE_NAME_EX1 FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION_USING_NODE_NAME_EX1;

        typedef struct FABRIC_RESTART_NODE_DESCRIPTION FABRIC_RESTART_NODE_DESCRIPTION;

        typedef struct FABRIC_RESTART_NODE_DESCRIPTION2 FABRIC_RESTART_NODE_DESCRIPTION2;

        typedef struct FABRIC_RESTART_NODE_DESCRIPTION_EX1 FABRIC_RESTART_NODE_DESCRIPTION_EX1;

        typedef struct FABRIC_RESTART_NODE_DESCRIPTION_USING_NODE_NAME FABRIC_RESTART_NODE_DESCRIPTION_USING_NODE_NAME;

        typedef struct FABRIC_RESTART_NODE_STATUS FABRIC_RESTART_NODE_STATUS;

        typedef struct FABRIC_RESTART_REPLICA_DESCRIPTION FABRIC_RESTART_REPLICA_DESCRIPTION;

        typedef struct FABRIC_ROLLING_UPGRADE_MONITORING_POLICY FABRIC_ROLLING_UPGRADE_MONITORING_POLICY;

        typedef struct FABRIC_ROLLING_UPGRADE_MONITORING_POLICY_EX1 FABRIC_ROLLING_UPGRADE_MONITORING_POLICY_EX1;

        typedef struct FABRIC_ROLLING_UPGRADE_POLICY_DESCRIPTION FABRIC_ROLLING_UPGRADE_POLICY_DESCRIPTION;

        typedef struct FABRIC_ROLLING_UPGRADE_POLICY_DESCRIPTION_EX1 FABRIC_ROLLING_UPGRADE_POLICY_DESCRIPTION_EX1;

        typedef struct FABRIC_ROLLING_UPGRADE_POLICY_DESCRIPTION_EX2 FABRIC_ROLLING_UPGRADE_POLICY_DESCRIPTION_EX2;

        typedef struct FABRIC_ROLLING_UPGRADE_POLICY_DESCRIPTION_EX3 FABRIC_ROLLING_UPGRADE_POLICY_DESCRIPTION_EX3;

        typedef struct FABRIC_RUNAS_POLICY_DESCRIPTION FABRIC_RUNAS_POLICY_DESCRIPTION;

        typedef struct FABRIC_SAFETY_CHECK FABRIC_SAFETY_CHECK;

        typedef struct FABRIC_SAFETY_CHECK_LIST FABRIC_SAFETY_CHECK_LIST;

        typedef struct FABRIC_SCALING_MECHANISM FABRIC_SCALING_MECHANISM;

        typedef struct FABRIC_SCALING_MECHANISM_ADD_REMOVE_INCREMENTAL_NAMED_PARTITION FABRIC_SCALING_MECHANISM_ADD_REMOVE_INCREMENTAL_NAMED_PARTITION;

        typedef struct FABRIC_SCALING_MECHANISM_PARTITION_INSTANCE_COUNT FABRIC_SCALING_MECHANISM_PARTITION_INSTANCE_COUNT;

        typedef struct FABRIC_SCALING_TRIGGER FABRIC_SCALING_TRIGGER;

        typedef struct FABRIC_SCALING_TRIGGER_AVERAGE_PARTITION_LOAD FABRIC_SCALING_TRIGGER_AVERAGE_PARTITION_LOAD;

        typedef struct FABRIC_SCALING_TRIGGER_AVERAGE_SERVICE_LOAD FABRIC_SCALING_TRIGGER_AVERAGE_SERVICE_LOAD;

        typedef struct FABRIC_SCALING_TRIGGER_AVERAGE_SERVICE_LOAD_EX1 FABRIC_SCALING_TRIGGER_AVERAGE_SERVICE_LOAD_EX1;

        typedef struct FABRIC_SECONDARY_REPLICATOR_STATUS_QUERY_RESULT FABRIC_SECONDARY_REPLICATOR_STATUS_QUERY_RESULT;

        typedef struct FABRIC_SECRET FABRIC_SECRET;

        typedef struct FABRIC_SECRET_LIST FABRIC_SECRET_LIST;

        typedef struct FABRIC_SECRET_REFERENCE FABRIC_SECRET_REFERENCE;

        typedef struct FABRIC_SECRET_REFERENCE_LIST FABRIC_SECRET_REFERENCE_LIST;

        typedef struct FABRIC_SECURITY_CREDENTIALS FABRIC_SECURITY_CREDENTIALS;

        typedef struct FABRIC_SECURITY_GROUP_DESCRIPTION FABRIC_SECURITY_GROUP_DESCRIPTION;

        typedef struct FABRIC_SECURITY_GROUP_DESCRIPTION_LIST FABRIC_SECURITY_GROUP_DESCRIPTION_LIST;

        typedef struct FABRIC_SECURITY_USER_DESCRIPTION FABRIC_SECURITY_USER_DESCRIPTION;

        typedef struct FABRIC_SECURITY_USER_DESCRIPTION_LIST FABRIC_SECURITY_USER_DESCRIPTION_LIST;

        typedef struct FABRIC_SEED_NODE_SAFETY_CHECK FABRIC_SEED_NODE_SAFETY_CHECK;

        typedef struct FABRIC_SELECTED_PARTITION FABRIC_SELECTED_PARTITION;

        typedef struct FABRIC_SERVICES_HEALTH_EVALUATION FABRIC_SERVICES_HEALTH_EVALUATION;

        typedef struct FABRIC_SERVICE_CORRELATION_DESCRIPTION FABRIC_SERVICE_CORRELATION_DESCRIPTION;

        typedef struct FABRIC_SERVICE_DESCRIPTION FABRIC_SERVICE_DESCRIPTION;

        typedef struct FABRIC_SERVICE_FROM_TEMPLATE_DESCRIPTION FABRIC_SERVICE_FROM_TEMPLATE_DESCRIPTION;

        typedef struct FABRIC_SERVICE_GROUP_DESCRIPTION FABRIC_SERVICE_GROUP_DESCRIPTION;

        typedef struct FABRIC_SERVICE_GROUP_FROM_TEMPLATE_DESCRIPTION FABRIC_SERVICE_GROUP_FROM_TEMPLATE_DESCRIPTION;

        typedef struct FABRIC_SERVICE_GROUP_MEMBER_DESCRIPTION FABRIC_SERVICE_GROUP_MEMBER_DESCRIPTION;

        typedef struct FABRIC_SERVICE_GROUP_MEMBER_MEMBER_QUERY_RESULT_ITEM FABRIC_SERVICE_GROUP_MEMBER_MEMBER_QUERY_RESULT_ITEM;

        typedef struct FABRIC_SERVICE_GROUP_MEMBER_MEMBER_QUERY_RESULT_LIST FABRIC_SERVICE_GROUP_MEMBER_MEMBER_QUERY_RESULT_LIST;

        typedef struct FABRIC_SERVICE_GROUP_MEMBER_QUERY_DESCRIPTION FABRIC_SERVICE_GROUP_MEMBER_QUERY_DESCRIPTION;

        typedef struct FABRIC_SERVICE_GROUP_MEMBER_QUERY_RESULT_ITEM FABRIC_SERVICE_GROUP_MEMBER_QUERY_RESULT_ITEM;

        typedef struct FABRIC_SERVICE_GROUP_MEMBER_QUERY_RESULT_LIST FABRIC_SERVICE_GROUP_MEMBER_QUERY_RESULT_LIST;

        typedef struct FABRIC_SERVICE_GROUP_MEMBER_TYPE_QUERY_DESCRIPTION FABRIC_SERVICE_GROUP_MEMBER_TYPE_QUERY_DESCRIPTION;

        typedef struct FABRIC_SERVICE_GROUP_MEMBER_TYPE_QUERY_RESULT_ITEM FABRIC_SERVICE_GROUP_MEMBER_TYPE_QUERY_RESULT_ITEM;

        typedef struct FABRIC_SERVICE_GROUP_MEMBER_TYPE_QUERY_RESULT_LIST FABRIC_SERVICE_GROUP_MEMBER_TYPE_QUERY_RESULT_LIST;

        typedef struct FABRIC_SERVICE_GROUP_TYPE_DESCRIPTION FABRIC_SERVICE_GROUP_TYPE_DESCRIPTION;

        typedef struct FABRIC_SERVICE_GROUP_TYPE_DESCRIPTION_LIST FABRIC_SERVICE_GROUP_TYPE_DESCRIPTION_LIST;

        typedef struct FABRIC_SERVICE_GROUP_TYPE_MEMBER_DESCRIPTION FABRIC_SERVICE_GROUP_TYPE_MEMBER_DESCRIPTION;

        typedef struct FABRIC_SERVICE_GROUP_TYPE_MEMBER_DESCRIPTION_LIST FABRIC_SERVICE_GROUP_TYPE_MEMBER_DESCRIPTION_LIST;

        typedef struct FABRIC_SERVICE_GROUP_UPDATE_DESCRIPTION FABRIC_SERVICE_GROUP_UPDATE_DESCRIPTION;

        typedef struct FABRIC_SERVICE_HEALTH FABRIC_SERVICE_HEALTH;

        typedef struct FABRIC_SERVICE_HEALTH_EVALUATION FABRIC_SERVICE_HEALTH_EVALUATION;

        typedef struct FABRIC_SERVICE_HEALTH_EX1 FABRIC_SERVICE_HEALTH_EX1;

        typedef struct FABRIC_SERVICE_HEALTH_EX2 FABRIC_SERVICE_HEALTH_EX2;

        typedef struct FABRIC_SERVICE_HEALTH_QUERY_DESCRIPTION FABRIC_SERVICE_HEALTH_QUERY_DESCRIPTION;

        typedef struct FABRIC_SERVICE_HEALTH_QUERY_DESCRIPTION_EX1 FABRIC_SERVICE_HEALTH_QUERY_DESCRIPTION_EX1;

        typedef struct FABRIC_SERVICE_HEALTH_REPORT FABRIC_SERVICE_HEALTH_REPORT;

        typedef struct FABRIC_SERVICE_HEALTH_STATE FABRIC_SERVICE_HEALTH_STATE;

        typedef struct FABRIC_SERVICE_HEALTH_STATES_FILTER FABRIC_SERVICE_HEALTH_STATES_FILTER;

        typedef struct FABRIC_SERVICE_HEALTH_STATE_CHUNK FABRIC_SERVICE_HEALTH_STATE_CHUNK;

        typedef struct FABRIC_SERVICE_HEALTH_STATE_CHUNK_LIST FABRIC_SERVICE_HEALTH_STATE_CHUNK_LIST;

        typedef struct FABRIC_SERVICE_HEALTH_STATE_FILTER FABRIC_SERVICE_HEALTH_STATE_FILTER;

        typedef struct FABRIC_SERVICE_HEALTH_STATE_FILTER_LIST FABRIC_SERVICE_HEALTH_STATE_FILTER_LIST;

        typedef struct FABRIC_SERVICE_HEALTH_STATE_LIST FABRIC_SERVICE_HEALTH_STATE_LIST;

        typedef struct FABRIC_SERVICE_HEALTH_STATISTICS_FILTER FABRIC_SERVICE_HEALTH_STATISTICS_FILTER;

        typedef struct FABRIC_SERVICE_LOAD_METRIC_DESCRIPTION FABRIC_SERVICE_LOAD_METRIC_DESCRIPTION;

        typedef struct FABRIC_SERVICE_LOAD_METRIC_DESCRIPTION_LIST FABRIC_SERVICE_LOAD_METRIC_DESCRIPTION_LIST;

        typedef struct FABRIC_SERVICE_NAME_QUERY_DESCRIPTION FABRIC_SERVICE_NAME_QUERY_DESCRIPTION;

        typedef struct FABRIC_SERVICE_NAME_QUERY_RESULT FABRIC_SERVICE_NAME_QUERY_RESULT;

        typedef struct FABRIC_SERVICE_NOTIFICATION FABRIC_SERVICE_NOTIFICATION;

        typedef struct FABRIC_SERVICE_NOTIFICATION_FILTER_DESCRIPTION FABRIC_SERVICE_NOTIFICATION_FILTER_DESCRIPTION;

        typedef struct FABRIC_SERVICE_PARTITION_INFORMATION FABRIC_SERVICE_PARTITION_INFORMATION;

        typedef struct FABRIC_SERVICE_PARTITION_QUERY_DESCRIPTION FABRIC_SERVICE_PARTITION_QUERY_DESCRIPTION;

        typedef struct FABRIC_SERVICE_PARTITION_QUERY_DESCRIPTION_EX1 FABRIC_SERVICE_PARTITION_QUERY_DESCRIPTION_EX1;

        typedef struct FABRIC_SERVICE_PARTITION_QUERY_RESULT_ITEM FABRIC_SERVICE_PARTITION_QUERY_RESULT_ITEM;

        typedef struct FABRIC_SERVICE_PARTITION_QUERY_RESULT_LIST FABRIC_SERVICE_PARTITION_QUERY_RESULT_LIST;

        typedef struct FABRIC_SERVICE_PLACEMENT_POLICY_DESCRIPTION FABRIC_SERVICE_PLACEMENT_POLICY_DESCRIPTION;

        typedef struct FABRIC_SERVICE_PLACEMENT_POLICY_LIST FABRIC_SERVICE_PLACEMENT_POLICY_LIST;

        typedef struct FABRIC_SERVICE_QUERY_DESCRIPTION FABRIC_SERVICE_QUERY_DESCRIPTION;

        typedef struct FABRIC_SERVICE_QUERY_DESCRIPTION_EX1 FABRIC_SERVICE_QUERY_DESCRIPTION_EX1;

        typedef struct FABRIC_SERVICE_QUERY_DESCRIPTION_EX2 FABRIC_SERVICE_QUERY_DESCRIPTION_EX2;

        typedef struct FABRIC_SERVICE_QUERY_DESCRIPTION_EX3 FABRIC_SERVICE_QUERY_DESCRIPTION_EX3;

        typedef struct FABRIC_SERVICE_QUERY_RESULT_ITEM FABRIC_SERVICE_QUERY_RESULT_ITEM;

        typedef struct FABRIC_SERVICE_QUERY_RESULT_LIST FABRIC_SERVICE_QUERY_RESULT_LIST;

        typedef struct FABRIC_SERVICE_REPLICA_QUERY_DESCRIPTION FABRIC_SERVICE_REPLICA_QUERY_DESCRIPTION;

        typedef struct FABRIC_SERVICE_REPLICA_QUERY_DESCRIPTION_EX1 FABRIC_SERVICE_REPLICA_QUERY_DESCRIPTION_EX1;

        typedef struct FABRIC_SERVICE_REPLICA_QUERY_DESCRIPTION_EX2 FABRIC_SERVICE_REPLICA_QUERY_DESCRIPTION_EX2;

        typedef struct FABRIC_SERVICE_REPLICA_QUERY_RESULT_ITEM FABRIC_SERVICE_REPLICA_QUERY_RESULT_ITEM;

        typedef struct FABRIC_SERVICE_REPLICA_QUERY_RESULT_LIST FABRIC_SERVICE_REPLICA_QUERY_RESULT_LIST;

        typedef struct FABRIC_SERVICE_SCALING_POLICY FABRIC_SERVICE_SCALING_POLICY;

        typedef struct FABRIC_SERVICE_TYPE_DESCRIPTION FABRIC_SERVICE_TYPE_DESCRIPTION;

        typedef struct FABRIC_SERVICE_TYPE_DESCRIPTION_EXTENSION FABRIC_SERVICE_TYPE_DESCRIPTION_EXTENSION;

        typedef struct FABRIC_SERVICE_TYPE_DESCRIPTION_EXTENSION_LIST FABRIC_SERVICE_TYPE_DESCRIPTION_EXTENSION_LIST;

        typedef struct FABRIC_SERVICE_TYPE_DESCRIPTION_LIST FABRIC_SERVICE_TYPE_DESCRIPTION_LIST;

        typedef struct FABRIC_SERVICE_TYPE_HEALTH_POLICY FABRIC_SERVICE_TYPE_HEALTH_POLICY;

        typedef struct FABRIC_SERVICE_TYPE_HEALTH_POLICY_MAP FABRIC_SERVICE_TYPE_HEALTH_POLICY_MAP;

        typedef struct FABRIC_SERVICE_TYPE_HEALTH_POLICY_MAP_ITEM FABRIC_SERVICE_TYPE_HEALTH_POLICY_MAP_ITEM;

        typedef struct FABRIC_SERVICE_TYPE_QUERY_DESCRIPTION FABRIC_SERVICE_TYPE_QUERY_DESCRIPTION;

        typedef struct FABRIC_SERVICE_TYPE_QUERY_RESULT_ITEM FABRIC_SERVICE_TYPE_QUERY_RESULT_ITEM;

        typedef struct FABRIC_SERVICE_TYPE_QUERY_RESULT_ITEM_EX1 FABRIC_SERVICE_TYPE_QUERY_RESULT_ITEM_EX1;

        typedef struct FABRIC_SERVICE_TYPE_QUERY_RESULT_ITEM_EX2 FABRIC_SERVICE_TYPE_QUERY_RESULT_ITEM_EX2;

        typedef struct FABRIC_SERVICE_TYPE_QUERY_RESULT_LIST FABRIC_SERVICE_TYPE_QUERY_RESULT_LIST;

        typedef struct FABRIC_SERVICE_UPDATE_DESCRIPTION FABRIC_SERVICE_UPDATE_DESCRIPTION;

        typedef struct FABRIC_SINGLETON_PARTITION_INFORMATION FABRIC_SINGLETON_PARTITION_INFORMATION;

        typedef struct FABRIC_STARTED_EVENT FABRIC_STARTED_EVENT;

        typedef struct FABRIC_START_APPROVED_UPGRADES_DESCRIPTION FABRIC_START_APPROVED_UPGRADES_DESCRIPTION;

        typedef struct FABRIC_START_CHAOS_DESCRIPTION FABRIC_START_CHAOS_DESCRIPTION;

        typedef struct FABRIC_START_NODE_DESCRIPTION FABRIC_START_NODE_DESCRIPTION;

        typedef struct FABRIC_START_NODE_DESCRIPTION2 FABRIC_START_NODE_DESCRIPTION2;

        typedef struct FABRIC_START_NODE_DESCRIPTION_USING_NODE_NAME FABRIC_START_NODE_DESCRIPTION_USING_NODE_NAME;

        typedef struct FABRIC_START_NODE_STATUS FABRIC_START_NODE_STATUS;

        typedef struct FABRIC_START_PARTITION_DATA_LOSS_DESCRIPTION FABRIC_START_PARTITION_DATA_LOSS_DESCRIPTION;

        typedef struct FABRIC_START_PARTITION_QUORUM_LOSS_DESCRIPTION FABRIC_START_PARTITION_QUORUM_LOSS_DESCRIPTION;

        typedef struct FABRIC_START_PARTITION_RESTART_DESCRIPTION FABRIC_START_PARTITION_RESTART_DESCRIPTION;

        typedef struct FABRIC_START_UPGRADE_DESCRIPTION FABRIC_START_UPGRADE_DESCRIPTION;

        typedef struct FABRIC_START_UPGRADE_DESCRIPTION_EX1 FABRIC_START_UPGRADE_DESCRIPTION_EX1;

        typedef struct FABRIC_STATEFUL_SERVICE_DESCRIPTION FABRIC_STATEFUL_SERVICE_DESCRIPTION;

        typedef struct FABRIC_STATEFUL_SERVICE_DESCRIPTION_EX1 FABRIC_STATEFUL_SERVICE_DESCRIPTION_EX1;

        typedef struct FABRIC_STATEFUL_SERVICE_DESCRIPTION_EX2 FABRIC_STATEFUL_SERVICE_DESCRIPTION_EX2;

        typedef struct FABRIC_STATEFUL_SERVICE_DESCRIPTION_EX3 FABRIC_STATEFUL_SERVICE_DESCRIPTION_EX3;

        typedef struct FABRIC_STATEFUL_SERVICE_DESCRIPTION_EX4 FABRIC_STATEFUL_SERVICE_DESCRIPTION_EX4;

        typedef struct FABRIC_STATEFUL_SERVICE_FAILOVER_SETTINGS FABRIC_STATEFUL_SERVICE_FAILOVER_SETTINGS;

        typedef struct FABRIC_STATEFUL_SERVICE_FAILOVER_SETTINGS_EX1 FABRIC_STATEFUL_SERVICE_FAILOVER_SETTINGS_EX1;

        typedef struct FABRIC_STATEFUL_SERVICE_PARTITION_QUERY_RESULT_ITEM FABRIC_STATEFUL_SERVICE_PARTITION_QUERY_RESULT_ITEM;

        typedef struct FABRIC_STATEFUL_SERVICE_PARTITION_QUERY_RESULT_ITEM_EX1 FABRIC_STATEFUL_SERVICE_PARTITION_QUERY_RESULT_ITEM_EX1;

        typedef struct FABRIC_STATEFUL_SERVICE_QUERY_RESULT_ITEM FABRIC_STATEFUL_SERVICE_QUERY_RESULT_ITEM;

        typedef struct FABRIC_STATEFUL_SERVICE_QUERY_RESULT_ITEM_EX1 FABRIC_STATEFUL_SERVICE_QUERY_RESULT_ITEM_EX1;

        typedef struct FABRIC_STATEFUL_SERVICE_QUERY_RESULT_ITEM_EX2 FABRIC_STATEFUL_SERVICE_QUERY_RESULT_ITEM_EX2;

        typedef struct FABRIC_STATEFUL_SERVICE_REPLICA_HEALTH FABRIC_STATEFUL_SERVICE_REPLICA_HEALTH;

        typedef struct FABRIC_STATEFUL_SERVICE_REPLICA_HEALTH_EX1 FABRIC_STATEFUL_SERVICE_REPLICA_HEALTH_EX1;

        typedef struct FABRIC_STATEFUL_SERVICE_REPLICA_HEALTH_REPORT FABRIC_STATEFUL_SERVICE_REPLICA_HEALTH_REPORT;

        typedef struct FABRIC_STATEFUL_SERVICE_REPLICA_HEALTH_STATE FABRIC_STATEFUL_SERVICE_REPLICA_HEALTH_STATE;

        typedef struct FABRIC_STATEFUL_SERVICE_REPLICA_HEALTH_STATE_EX1 FABRIC_STATEFUL_SERVICE_REPLICA_HEALTH_STATE_EX1;

        typedef struct FABRIC_STATEFUL_SERVICE_REPLICA_QUERY_RESULT_ITEM FABRIC_STATEFUL_SERVICE_REPLICA_QUERY_RESULT_ITEM;

        typedef struct FABRIC_STATEFUL_SERVICE_TYPE_DESCRIPTION FABRIC_STATEFUL_SERVICE_TYPE_DESCRIPTION;

        typedef struct FABRIC_STATEFUL_SERVICE_TYPE_DESCRIPTION_EX1 FABRIC_STATEFUL_SERVICE_TYPE_DESCRIPTION_EX1;

        typedef struct FABRIC_STATEFUL_SERVICE_UPDATE_DESCRIPTION FABRIC_STATEFUL_SERVICE_UPDATE_DESCRIPTION;

        typedef struct FABRIC_STATEFUL_SERVICE_UPDATE_DESCRIPTION_EX1 FABRIC_STATEFUL_SERVICE_UPDATE_DESCRIPTION_EX1;

        typedef struct FABRIC_STATEFUL_SERVICE_UPDATE_DESCRIPTION_EX2 FABRIC_STATEFUL_SERVICE_UPDATE_DESCRIPTION_EX2;

        typedef struct FABRIC_STATEFUL_SERVICE_UPDATE_DESCRIPTION_EX3 FABRIC_STATEFUL_SERVICE_UPDATE_DESCRIPTION_EX3;

        typedef struct FABRIC_STATEFUL_SERVICE_UPDATE_DESCRIPTION_EX4 FABRIC_STATEFUL_SERVICE_UPDATE_DESCRIPTION_EX4;

        typedef struct FABRIC_STATEFUL_SERVICE_UPDATE_DESCRIPTION_EX5 FABRIC_STATEFUL_SERVICE_UPDATE_DESCRIPTION_EX5;

        typedef struct FABRIC_STATELESS_SERVICE_DESCRIPTION FABRIC_STATELESS_SERVICE_DESCRIPTION;

        typedef struct FABRIC_STATELESS_SERVICE_DESCRIPTION_EX1 FABRIC_STATELESS_SERVICE_DESCRIPTION_EX1;

        typedef struct FABRIC_STATELESS_SERVICE_DESCRIPTION_EX2 FABRIC_STATELESS_SERVICE_DESCRIPTION_EX2;

        typedef struct FABRIC_STATELESS_SERVICE_DESCRIPTION_EX3 FABRIC_STATELESS_SERVICE_DESCRIPTION_EX3;

        typedef struct FABRIC_STATELESS_SERVICE_DESCRIPTION_EX4 FABRIC_STATELESS_SERVICE_DESCRIPTION_EX4;

        typedef struct FABRIC_STATELESS_SERVICE_INSTANCE_HEALTH FABRIC_STATELESS_SERVICE_INSTANCE_HEALTH;

        typedef struct FABRIC_STATELESS_SERVICE_INSTANCE_HEALTH_EX1 FABRIC_STATELESS_SERVICE_INSTANCE_HEALTH_EX1;

        typedef struct FABRIC_STATELESS_SERVICE_INSTANCE_HEALTH_REPORT FABRIC_STATELESS_SERVICE_INSTANCE_HEALTH_REPORT;

        typedef struct FABRIC_STATELESS_SERVICE_INSTANCE_HEALTH_STATE FABRIC_STATELESS_SERVICE_INSTANCE_HEALTH_STATE;

        typedef struct FABRIC_STATELESS_SERVICE_INSTANCE_HEALTH_STATE_EX1 FABRIC_STATELESS_SERVICE_INSTANCE_HEALTH_STATE_EX1;

        typedef struct FABRIC_STATELESS_SERVICE_INSTANCE_QUERY_RESULT_ITEM FABRIC_STATELESS_SERVICE_INSTANCE_QUERY_RESULT_ITEM;

        typedef struct FABRIC_STATELESS_SERVICE_PARTITION_QUERY_RESULT_ITEM FABRIC_STATELESS_SERVICE_PARTITION_QUERY_RESULT_ITEM;

        typedef struct FABRIC_STATELESS_SERVICE_QUERY_RESULT_ITEM FABRIC_STATELESS_SERVICE_QUERY_RESULT_ITEM;

        typedef struct FABRIC_STATELESS_SERVICE_QUERY_RESULT_ITEM_EX1 FABRIC_STATELESS_SERVICE_QUERY_RESULT_ITEM_EX1;

        typedef struct FABRIC_STATELESS_SERVICE_QUERY_RESULT_ITEM_EX2 FABRIC_STATELESS_SERVICE_QUERY_RESULT_ITEM_EX2;

        typedef struct FABRIC_STATELESS_SERVICE_TYPE_DESCRIPTION FABRIC_STATELESS_SERVICE_TYPE_DESCRIPTION;

        typedef struct FABRIC_STATELESS_SERVICE_TYPE_DESCRIPTION_EX1 FABRIC_STATELESS_SERVICE_TYPE_DESCRIPTION_EX1;

        typedef struct FABRIC_STATELESS_SERVICE_UPDATE_DESCRIPTION FABRIC_STATELESS_SERVICE_UPDATE_DESCRIPTION;

        typedef struct FABRIC_STATELESS_SERVICE_UPDATE_DESCRIPTION_EX1 FABRIC_STATELESS_SERVICE_UPDATE_DESCRIPTION_EX1;

        typedef struct FABRIC_STATELESS_SERVICE_UPDATE_DESCRIPTION_EX2 FABRIC_STATELESS_SERVICE_UPDATE_DESCRIPTION_EX2;

        typedef struct FABRIC_STATELESS_SERVICE_UPDATE_DESCRIPTION_EX3 FABRIC_STATELESS_SERVICE_UPDATE_DESCRIPTION_EX3;

        typedef struct FABRIC_STOPPED_EVENT FABRIC_STOPPED_EVENT;

        typedef struct FABRIC_STOP_NODE_DESCRIPTION FABRIC_STOP_NODE_DESCRIPTION;

        typedef struct FABRIC_STOP_NODE_DESCRIPTION2 FABRIC_STOP_NODE_DESCRIPTION2;

        typedef struct FABRIC_STOP_NODE_DESCRIPTION_USING_NODE_NAME FABRIC_STOP_NODE_DESCRIPTION_USING_NODE_NAME;

        typedef struct FABRIC_STOP_NODE_STATUS FABRIC_STOP_NODE_STATUS;

        typedef struct FABRIC_STORE_BACKUP_INFO FABRIC_STORE_BACKUP_INFO;

        typedef struct FABRIC_STORE_BACKUP_INFO_EX1 FABRIC_STORE_BACKUP_INFO_EX1;

        typedef struct FABRIC_STRING_LIST FABRIC_STRING_LIST;

        typedef struct FABRIC_STRING_MAP FABRIC_STRING_MAP;

        typedef struct FABRIC_SYSTEM_APPLICATION_HEALTH_EVALUATION FABRIC_SYSTEM_APPLICATION_HEALTH_EVALUATION;

        typedef struct FABRIC_SYSTEM_SERVICE_QUERY_DESCRIPTION FABRIC_SYSTEM_SERVICE_QUERY_DESCRIPTION;

        typedef struct FABRIC_TEST_COMMAND_LIST_DESCRIPTION FABRIC_TEST_COMMAND_LIST_DESCRIPTION;

        typedef struct FABRIC_TEST_ERROR_EVENT FABRIC_TEST_ERROR_EVENT;

        typedef struct FABRIC_UNIFORM_INT64_RANGE_PARTITION_SCHEME_DESCRIPTION FABRIC_UNIFORM_INT64_RANGE_PARTITION_SCHEME_DESCRIPTION;

        typedef struct FABRIC_UNPLACED_REPLICA_INFORMATION FABRIC_UNPLACED_REPLICA_INFORMATION;

        typedef struct FABRIC_UNPLACED_REPLICA_INFORMATION_LIST FABRIC_UNPLACED_REPLICA_INFORMATION_LIST;

        typedef struct FABRIC_UNPLACED_REPLICA_INFORMATION_QUERY_DESCRIPTION FABRIC_UNPLACED_REPLICA_INFORMATION_QUERY_DESCRIPTION;

        typedef struct FABRIC_UNPROVISION_APPLICATION_TYPE_DESCRIPTION FABRIC_UNPROVISION_APPLICATION_TYPE_DESCRIPTION;

        typedef struct FABRIC_UPGRADE_DESCRIPTION FABRIC_UPGRADE_DESCRIPTION;

        typedef struct FABRIC_UPGRADE_DOMAIN_DELTA_NODES_CHECK_HEALTH_EVALUATION FABRIC_UPGRADE_DOMAIN_DELTA_NODES_CHECK_HEALTH_EVALUATION;

        typedef struct FABRIC_UPGRADE_DOMAIN_DEPLOYED_APPLICATIONS_HEALTH_EVALUATION FABRIC_UPGRADE_DOMAIN_DEPLOYED_APPLICATIONS_HEALTH_EVALUATION;

        typedef struct FABRIC_UPGRADE_DOMAIN_NODES_HEALTH_EVALUATION FABRIC_UPGRADE_DOMAIN_NODES_HEALTH_EVALUATION;

        typedef struct FABRIC_UPGRADE_DOMAIN_PROGRESS FABRIC_UPGRADE_DOMAIN_PROGRESS;

        typedef struct FABRIC_UPGRADE_DOMAIN_STATUS_DESCRIPTION FABRIC_UPGRADE_DOMAIN_STATUS_DESCRIPTION;

        typedef struct FABRIC_UPGRADE_DOMAIN_STATUS_DESCRIPTION_LIST FABRIC_UPGRADE_DOMAIN_STATUS_DESCRIPTION_LIST;

        typedef struct FABRIC_UPGRADE_ORCHESTRATION_SERVICE_STATE FABRIC_UPGRADE_ORCHESTRATION_SERVICE_STATE;

        typedef struct FABRIC_UPGRADE_PARTITION_SAFETY_CHECK FABRIC_UPGRADE_PARTITION_SAFETY_CHECK;

        typedef struct FABRIC_UPGRADE_PROGRESS FABRIC_UPGRADE_PROGRESS;

        typedef struct FABRIC_UPGRADE_PROGRESS_EX1 FABRIC_UPGRADE_PROGRESS_EX1;

        typedef struct FABRIC_UPGRADE_SAFETY_CHECK FABRIC_UPGRADE_SAFETY_CHECK;

        typedef struct FABRIC_UPGRADE_SAFETY_CHECK_LIST FABRIC_UPGRADE_SAFETY_CHECK_LIST;

        typedef struct FABRIC_UPGRADE_SEED_NODE_SAFETY_CHECK FABRIC_UPGRADE_SEED_NODE_SAFETY_CHECK;

        typedef struct FABRIC_UPGRADE_UPDATE_DESCRIPTION FABRIC_UPGRADE_UPDATE_DESCRIPTION;

        typedef struct FABRIC_VALIDATION_FAILED_EVENT FABRIC_VALIDATION_FAILED_EVENT;

        typedef struct FABRIC_WAITING_EVENT FABRIC_WAITING_EVENT;

        typedef struct FABRIC_WINDOWS_CREDENTIALS FABRIC_WINDOWS_CREDENTIALS;

        typedef struct FABRIC_X509_CREDENTIALS FABRIC_X509_CREDENTIALS;

        typedef struct FABRIC_X509_CREDENTIALS2 FABRIC_X509_CREDENTIALS2;

        typedef struct FABRIC_X509_CREDENTIALS_EX1 FABRIC_X509_CREDENTIALS_EX1;

        typedef struct FABRIC_X509_CREDENTIALS_EX2 FABRIC_X509_CREDENTIALS_EX2;

        typedef struct FABRIC_X509_CREDENTIALS_EX3 FABRIC_X509_CREDENTIALS_EX3;

        typedef struct FABRIC_X509_ISSUER_NAME FABRIC_X509_ISSUER_NAME;

        typedef struct FABRIC_X509_NAME FABRIC_X509_NAME;

        typedef struct PAGED_FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION PAGED_FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION;

        typedef struct PAGED_FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION_EX1 PAGED_FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION_EX1;

        typedef struct PAGED_FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION_EX2 PAGED_FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION_EX2;

        typedef struct TEST_COMMAND_QUERY_RESULT_ITEM TEST_COMMAND_QUERY_RESULT_ITEM;

        typedef struct TEST_COMMAND_QUERY_RESULT_LIST TEST_COMMAND_QUERY_RESULT_LIST;

        runtimeclass Apis;
    }
}

// Generic instantiations

// Type definition
namespace Microsoft
{
    namespace ServiceFabric
    {
        enum FABRIC_APPLICATION_DEFINITION_KIND
        {
            FABRIC_APPLICATION_DEFINITION_KIND_INVALID                                = 65535,
            FABRIC_APPLICATION_DEFINITION_KIND_SERVICE_FABRIC_APPLICATION_DESCRIPTION = 0,
            FABRIC_APPLICATION_DEFINITION_KIND_COMPOSE                                = 1,
            FABRIC_APPLICATION_DEFINITION_KIND_MESH_APPLICATION_DESCRIPTION           = 2
        };

        enum FABRIC_APPLICATION_DEFINITION_KIND_FILTER
        {
            FABRIC_APPLICATION_DEFINITION_KIND_FILTER_DEFAULT                                = 0,
            FABRIC_APPLICATION_DEFINITION_KIND_FILTER_ALL                                    = 65535,
            FABRIC_APPLICATION_DEFINITION_KIND_FILTER_SERVICE_FABRIC_APPLICATION_DESCRIPTION = 1,
            FABRIC_APPLICATION_DEFINITION_KIND_FILTER_COMPOSE                                = 2,
            FABRIC_APPLICATION_DEFINITION_KIND_FILTER_MESH_APPLICATION_DESCRIPTION           = 4
        };

        enum FABRIC_APPLICATION_PACKAGE_CLEANUP_POLICY
        {
            FABRIC_APPLICATION_PACKAGE_CLEANUP_POLICY_INVALID   = 0,
            FABRIC_APPLICATION_PACKAGE_CLEANUP_POLICY_DEFAULT   = 1,
            FABRIC_APPLICATION_PACKAGE_CLEANUP_POLICY_AUTOMATIC = 2,
            FABRIC_APPLICATION_PACKAGE_CLEANUP_POLICY_MANUAL    = 3
        };

        enum FABRIC_APPLICATION_STATUS
        {
            FABRIC_APPLICATION_STATUS_INVALID   = 0,
            FABRIC_APPLICATION_STATUS_READY     = 1,
            FABRIC_APPLICATION_STATUS_UPGRADING = 2,
            FABRIC_APPLICATION_STATUS_CREATING  = 3,
            FABRIC_APPLICATION_STATUS_DELETING  = 4,
            FABRIC_APPLICATION_STATUS_FAILED    = 5
        };

        enum FABRIC_APPLICATION_TYPE_DEFINITION_KIND
        {
            FABRIC_APPLICATION_TYPE_DEFINITION_KIND_INVALID                            = 0,
            FABRIC_APPLICATION_TYPE_DEFINITION_KIND_SERVICE_FABRIC_APPLICATION_PACKAGE = 1,
            FABRIC_APPLICATION_TYPE_DEFINITION_KIND_COMPOSE                            = 2,
            FABRIC_APPLICATION_TYPE_DEFINITION_KIND_MESH_APPLICATION_DESCRIPTION       = 3
        };

        enum FABRIC_APPLICATION_TYPE_DEFINITION_KIND_FILTER
        {
            FABRIC_APPLICATION_TYPE_DEFINITION_KIND_FILTER_DEFAULT                            = 0,
            FABRIC_APPLICATION_TYPE_DEFINITION_KIND_FILTER_ALL                                = 65535,
            FABRIC_APPLICATION_TYPE_DEFINITION_KIND_FILTER_SERVICE_FABRIC_APPLICATION_PACKAGE = 1,
            FABRIC_APPLICATION_TYPE_DEFINITION_KIND_FILTER_COMPOSE                            = 2,
            FABRIC_APPLICATION_TYPE_DEFINITION_KIND_FILTER_MESH_APPLICATION_DESCRIPTION       = 4
        };

        enum FABRIC_APPLICATION_TYPE_STATUS
        {
            FABRIC_APPLICATION_TYPE_STATUS_INVALID        = 0,
            FABRIC_APPLICATION_TYPE_STATUS_PROVISIONING   = 1,
            FABRIC_APPLICATION_TYPE_STATUS_AVAILABLE      = 2,
            FABRIC_APPLICATION_TYPE_STATUS_UNPROVISIONING = 3,
            FABRIC_APPLICATION_TYPE_STATUS_FAILED         = 4
        };

        enum FABRIC_APPLICATION_UPDATE_DESCRIPTION_FLAGS
        {
            FABRIC_APPLICATION_UPDATE_DESCRIPTION_FLAGS_NONE     = 0,
            FABRIC_APPLICATION_UPDATE_DESCRIPTION_FLAGS_MINNODES = 1,
            FABRIC_APPLICATION_UPDATE_DESCRIPTION_FLAGS_MAXNODES = 2,
            FABRIC_APPLICATION_UPDATE_DESCRIPTION_FLAGS_METRICS  = 4
        };

        enum FABRIC_APPLICATION_UPGRADE_KIND
        {
            FABRIC_APPLICATION_UPGRADE_KIND_INVALID = 0,
            FABRIC_APPLICATION_UPGRADE_KIND_ROLLING = 1
        };

        enum FABRIC_APPLICATION_UPGRADE_STATE
        {
            FABRIC_APPLICATION_UPGRADE_STATE_INVALID                     = 0,
            FABRIC_APPLICATION_UPGRADE_STATE_ROLLING_BACK_IN_PROGRESS    = 1,
            FABRIC_APPLICATION_UPGRADE_STATE_ROLLING_BACK_COMPLETED      = 2,
            FABRIC_APPLICATION_UPGRADE_STATE_ROLLING_FORWARD_PENDING     = 3,
            FABRIC_APPLICATION_UPGRADE_STATE_ROLLING_FORWARD_IN_PROGRESS = 4,
            FABRIC_APPLICATION_UPGRADE_STATE_ROLLING_FORWARD_COMPLETED   = 5,
            FABRIC_APPLICATION_UPGRADE_STATE_FAILED                      = 6,
            FABRIC_APPLICATION_UPGRADE_STATE_ROLLING_BACK_PENDING        = 7
        };

        enum FABRIC_CHAOS_EVENT_KIND
        {
            FABRIC_CHAOS_EVENT_KIND_INVALID           = 0,
            FABRIC_CHAOS_EVENT_KIND_STARTED           = 1,
            FABRIC_CHAOS_EVENT_KIND_EXECUTING_FAULTS  = 2,
            FABRIC_CHAOS_EVENT_KIND_WAITING           = 3,
            FABRIC_CHAOS_EVENT_KIND_VALIDATION_FAILED = 4,
            FABRIC_CHAOS_EVENT_KIND_TEST_ERROR        = 5,
            FABRIC_CHAOS_EVENT_KIND_STOPPED           = 6
        };

        enum FABRIC_CHAOS_SCHEDULE_STATUS
        {
            FABRIC_CHAOS_SCHEDULE_STATUS_INVALID = 0,
            FABRIC_CHAOS_SCHEDULE_STATUS_ACTIVE  = 1,
            FABRIC_CHAOS_SCHEDULE_STATUS_EXPIRED = 2,
            FABRIC_CHAOS_SCHEDULE_STATUS_PENDING = 3,
            FABRIC_CHAOS_SCHEDULE_STATUS_STOPPED = 4
        };

        enum FABRIC_CHAOS_STATUS
        {
            FABRIC_CHAOS_STATUS_INVALID = 0,
            FABRIC_CHAOS_STATUS_RUNNING = 1,
            FABRIC_CHAOS_STATUS_STOPPED = 2
        };

        enum FABRIC_CLAIMS_RETRIEVAL_METADATA_KIND
        {
            FABRIC_CLAIMS_RETRIEVAL_METADATA_KIND_NONE = 0,
            FABRIC_CLAIMS_RETRIEVAL_METADATA_KIND_AAD  = 1
        };

        enum FABRIC_CLIENT_ROLE
        {
            FABRIC_CLIENT_ROLE_UNKNOWN = 0,
            FABRIC_CLIENT_ROLE_USER    = 1,
            FABRIC_CLIENT_ROLE_ADMIN   = 2
        };

        enum FABRIC_CODE_PACKAGE_ENTRY_POINT_KIND
        {
            FABRIC_CODE_PACKAGE_ENTRY_POINT_KIND_INVALID       = 0,
            FABRIC_CODE_PACKAGE_ENTRY_POINT_KIND_NONE          = 1,
            FABRIC_CODE_PACKAGE_ENTRY_POINT_KIND_EXEHOST       = 2,
            FABRIC_CODE_PACKAGE_ENTRY_POINT_KIND_DLLHOST       = 3,
            FABRIC_CODE_PACKAGE_ENTRY_POINT_KIND_CONTAINERHOST = 4
        };

        enum FABRIC_CODE_PACKAGE_EVENT_TYPE
        {
            FABRIC_CODE_PACKAGE_EVENT_TYPE_INVALID      = 0,
            FABRIC_CODE_PACKAGE_EVENT_TYPE_START_FAILED = 1,
            FABRIC_CODE_PACKAGE_EVENT_TYPE_STARTED      = 2,
            FABRIC_CODE_PACKAGE_EVENT_TYPE_READY        = 3,
            FABRIC_CODE_PACKAGE_EVENT_TYPE_HEALTH       = 4,
            FABRIC_CODE_PACKAGE_EVENT_TYPE_STOPPED      = 5,
            FABRIC_CODE_PACKAGE_EVENT_TYPE_TERMINATED   = 6
        };

        enum FABRIC_DATA_LOSS_MODE
        {
            FABRIC_DATA_LOSS_MODE_INVALID = 0,
            FABRIC_DATA_LOSS_MODE_PARTIAL = 1,
            FABRIC_DATA_LOSS_MODE_FULL    = 2
        };

        enum FABRIC_DEPLOYMENT_STATUS
        {
            FABRIC_DEPLOYMENT_STATUS_INVALID      = 0,
            FABRIC_DEPLOYMENT_STATUS_DOWNLOADING  = 1,
            FABRIC_DEPLOYMENT_STATUS_ACTIVATING   = 2,
            FABRIC_DEPLOYMENT_STATUS_ACTIVE       = 3,
            FABRIC_DEPLOYMENT_STATUS_UPGRADING    = 4,
            FABRIC_DEPLOYMENT_STATUS_DEACTIVATING = 5
        };

        enum FABRIC_DIAGNOSTICS_SINKS_KIND
        {
            FABRIC_DIAGNOSTICS_SINKS_KIND_INVALID       = 0,
            FABRIC_DIAGNOSTICS_SINKS_KIND_AZUREINTERNAL = 1
        };

        enum FABRIC_DLLHOST_HOSTED_DLL_KIND
        {
            FABRIC_DLLHOST_HOSTED_DLL_KIND_INVALID   = 0,
            FABRIC_DLLHOST_HOSTED_DLL_KIND_UNMANAGED = 1,
            FABRIC_DLLHOST_HOSTED_DLL_KIND_MANAGED   = 2
        };

        enum FABRIC_DLLHOST_ISOLATION_POLICY
        {
            FABRIC_DLLHOST_ISOLATION_POLICY_INVALID           = 0,
            FABRIC_DLLHOST_ISOLATION_POLICY_SHARED_DOMAIN     = 1,
            FABRIC_DLLHOST_ISOLATION_POLICY_DEDICATED_DOMAIN  = 2,
            FABRIC_DLLHOST_ISOLATION_POLICY_DEDICATED_PROCESS = 3
        };

        enum FABRIC_ENTRY_POINT_STATUS
        {
            FABRIC_ENTRY_POINT_STATUS_INVALID  = 0,
            FABRIC_ENTRY_POINT_STATUS_PENDING  = 1,
            FABRIC_ENTRY_POINT_STATUS_STARTING = 2,
            FABRIC_ENTRY_POINT_STATUS_STARTED  = 3,
            FABRIC_ENTRY_POINT_STATUS_STOPPING = 4,
            FABRIC_ENTRY_POINT_STATUS_STOPPED  = 5
        };

        enum FABRIC_ENUMERATION_STATUS
        {
            FABRIC_ENUMERATION_INVALID               = 0,
            FABRIC_ENUMERATION_BEST_EFFORT_MORE_DATA = 1,
            FABRIC_ENUMERATION_CONSISTENT_MORE_DATA  = 2,
            FABRIC_ENUMERATION_BEST_EFFORT_FINISHED  = 4,
            FABRIC_ENUMERATION_CONSISTENT_FINISHED   = 8,
            FABRIC_ENUMERATION_VALID_MASK            = 15,
            FABRIC_ENUMERATION_BEST_EFFORT_MASK      = 5,
            FABRIC_ENUMERATION_CONSISTENT_MASK       = 10,
            FABRIC_ENUMERATION_MORE_DATA_MASK        = 3,
            FABRIC_ENUMERATION_FINISHED_MASK         = 12
        };

        enum FABRIC_ERROR_CODE
        {
            FABRIC_E_FIRST_RESERVED_HRESULT                          = -2147017796,
            FABRIC_E_LAST_RESERVED_HRESULT                           = -2147017397,
            FABRIC_E_COMMUNICATION_ERROR                             = -2147017796,
            FABRIC_E_INVALID_ADDRESS                                 = -2147017795,
            FABRIC_E_INVALID_NAME_URI                                = -2147017794,
            FABRIC_E_INVALID_PARTITION_KEY                           = -2147017793,
            FABRIC_E_NAME_ALREADY_EXISTS                             = -2147017792,
            FABRIC_E_NAME_DOES_NOT_EXIST                             = -2147017791,
            FABRIC_E_NAME_NOT_EMPTY                                  = -2147017790,
            FABRIC_E_NODE_NOT_FOUND                                  = -2147017789,
            FABRIC_E_NODE_IS_UP                                      = -2147017788,
            FABRIC_E_NO_WRITE_QUORUM                                 = -2147017787,
            FABRIC_E_NOT_PRIMARY                                     = -2147017786,
            FABRIC_E_NOT_READY                                       = -2147017785,
            FABRIC_E_OPERATION_NOT_COMPLETE                          = -2147017784,
            FABRIC_E_PROPERTY_DOES_NOT_EXIST                         = -2147017783,
            FABRIC_E_RECONFIGURATION_PENDING                         = -2147017782,
            FABRIC_E_REPLICATION_QUEUE_FULL                          = -2147017781,
            FABRIC_E_SERVICE_ALREADY_EXISTS                          = -2147017780,
            FABRIC_E_SERVICE_DOES_NOT_EXIST                          = -2147017779,
            FABRIC_E_SERVICE_OFFLINE                                 = -2147017778,
            FABRIC_E_SERVICE_METADATA_MISMATCH                       = -2147017777,
            FABRIC_E_SERVICE_AFFINITY_CHAIN_NOT_SUPPORTED            = -2147017776,
            FABRIC_E_SERVICE_TYPE_ALREADY_REGISTERED                 = -2147017775,
            FABRIC_E_SERVICE_TYPE_NOT_REGISTERED                     = -2147017774,
            FABRIC_E_VALUE_TOO_LARGE                                 = -2147017773,
            FABRIC_E_VALUE_EMPTY                                     = -2147017772,
            FABRIC_E_PROPERTY_CHECK_FAILED                           = -2147017771,
            FABRIC_E_WRITE_CONFLICT                                  = -2147017770,
            FABRIC_E_ENUMERATION_COMPLETED                           = -2147017769,
            FABRIC_E_APPLICATION_TYPE_PROVISION_IN_PROGRESS          = -2147017768,
            FABRIC_E_APPLICATION_TYPE_ALREADY_EXISTS                 = -2147017767,
            FABRIC_E_APPLICATION_TYPE_NOT_FOUND                      = -2147017766,
            FABRIC_E_APPLICATION_TYPE_IN_USE                         = -2147017765,
            FABRIC_E_APPLICATION_ALREADY_EXISTS                      = -2147017764,
            FABRIC_E_APPLICATION_NOT_FOUND                           = -2147017763,
            FABRIC_E_APPLICATION_UPGRADE_IN_PROGRESS                 = -2147017762,
            FABRIC_E_APPLICATION_UPGRADE_VALIDATION_ERROR            = -2147017761,
            FABRIC_E_SERVICE_TYPE_NOT_FOUND                          = -2147017760,
            FABRIC_E_SERVICE_TYPE_MISMATCH                           = -2147017759,
            FABRIC_E_SERVICE_TYPE_TEMPLATE_NOT_FOUND                 = -2147017758,
            FABRIC_E_CONFIGURATION_SECTION_NOT_FOUND                 = -2147017757,
            FABRIC_E_CONFIGURATION_PARAMETER_NOT_FOUND               = -2147017756,
            FABRIC_E_INVALID_CONFIGURATION                           = -2147017755,
            FABRIC_E_IMAGEBUILDER_VALIDATION_ERROR                   = -2147017754,
            FABRIC_E_PARTITION_NOT_FOUND                             = -2147017753,
            FABRIC_E_REPLICA_DOES_NOT_EXIST                          = -2147017752,
            FABRIC_E_SERVICE_GROUP_ALREADY_EXISTS                    = -2147017751,
            FABRIC_E_SERVICE_GROUP_DOES_NOT_EXIST                    = -2147017750,
            FABRIC_E_PROCESS_DEACTIVATED                             = -2147017749,
            FABRIC_E_PROCESS_ABORTED                                 = -2147017748,
            FABRIC_E_UPGRADE_FAILED                                  = -2147017747,
            FABRIC_E_INVALID_CREDENTIAL_TYPE                         = -2147017746,
            FABRIC_E_INVALID_X509_FIND_TYPE                          = -2147017745,
            FABRIC_E_INVALID_X509_STORE_LOCATION                     = -2147017744,
            FABRIC_E_INVALID_X509_STORE_NAME                         = -2147017743,
            FABRIC_E_INVALID_X509_THUMBPRINT                         = -2147017742,
            FABRIC_E_INVALID_PROTECTION_LEVEL                        = -2147017741,
            FABRIC_E_INVALID_X509_STORE                              = -2147017740,
            FABRIC_E_INVALID_SUBJECT_NAME                            = -2147017739,
            FABRIC_E_INVALID_ALLOWED_COMMON_NAME_LIST                = -2147017738,
            FABRIC_E_INVALID_CREDENTIALS                             = -2147017737,
            FABRIC_E_DECRYPTION_FAILED                               = -2147017736,
            FABRIC_E_CONFIGURATION_PACKAGE_NOT_FOUND                 = -2147017735,
            FABRIC_E_DATA_PACKAGE_NOT_FOUND                          = -2147017734,
            FABRIC_E_CODE_PACKAGE_NOT_FOUND                          = -2147017733,
            FABRIC_E_SERVICE_ENDPOINT_RESOURCE_NOT_FOUND             = -2147017732,
            FABRIC_E_INVALID_OPERATION                               = -2147017731,
            FABRIC_E_OBJECT_CLOSED                                   = -2147017730,
            FABRIC_E_TIMEOUT                                         = -2147017729,
            FABRIC_E_FILE_NOT_FOUND                                  = -2147017728,
            FABRIC_E_DIRECTORY_NOT_FOUND                             = -2147017727,
            FABRIC_E_INVALID_DIRECTORY                               = -2147017726,
            FABRIC_E_PATH_TOO_LONG                                   = -2147017725,
            FABRIC_E_IMAGESTORE_IOERROR                              = -2147017724,
            FABRIC_E_CORRUPTED_IMAGE_STORE_OBJECT_FOUND              = -2147017723,
            FABRIC_E_APPLICATION_NOT_UPGRADING                       = -2147017722,
            FABRIC_E_APPLICATION_ALREADY_IN_TARGET_VERSION           = -2147017721,
            FABRIC_E_IMAGEBUILDER_UNEXPECTED_ERROR                   = -2147017720,
            FABRIC_E_FABRIC_VERSION_NOT_FOUND                        = -2147017719,
            FABRIC_E_FABRIC_VERSION_IN_USE                           = -2147017718,
            FABRIC_E_FABRIC_VERSION_ALREADY_EXISTS                   = -2147017717,
            FABRIC_E_FABRIC_ALREADY_IN_TARGET_VERSION                = -2147017716,
            FABRIC_E_FABRIC_NOT_UPGRADING                            = -2147017715,
            FABRIC_E_FABRIC_UPGRADE_IN_PROGRESS                      = -2147017714,
            FABRIC_E_FABRIC_UPGRADE_VALIDATION_ERROR                 = -2147017713,
            FABRIC_E_HEALTH_MAX_REPORTS_REACHED                      = -2147017712,
            FABRIC_E_HEALTH_STALE_REPORT                             = -2147017711,
            FABRIC_E_KEY_TOO_LARGE                                   = -2147017710,
            FABRIC_E_KEY_NOT_FOUND                                   = -2147017709,
            FABRIC_E_SEQUENCE_NUMBER_CHECK_FAILED                    = -2147017708,
            FABRIC_E_ENCRYPTION_FAILED                               = -2147017707,
            FABRIC_E_INVALID_ATOMIC_GROUP                            = -2147017706,
            FABRIC_E_HEALTH_ENTITY_NOT_FOUND                         = -2147017705,
            FABRIC_E_SERVICE_MANIFEST_NOT_FOUND                      = -2147017704,
            FABRIC_E_RELIABLE_SESSION_TRANSPORT_STARTUP_FAILURE      = -2147017703,
            FABRIC_E_RELIABLE_SESSION_ALREADY_EXISTS                 = -2147017702,
            FABRIC_E_RELIABLE_SESSION_CANNOT_CONNECT                 = -2147017701,
            FABRIC_E_RELIABLE_SESSION_MANAGER_EXISTS                 = -2147017700,
            FABRIC_E_RELIABLE_SESSION_REJECTED                       = -2147017699,
            FABRIC_E_RELIABLE_SESSION_MANAGER_ALREADY_LISTENING      = -2147017698,
            FABRIC_E_RELIABLE_SESSION_MANAGER_NOT_FOUND              = -2147017697,
            FABRIC_E_RELIABLE_SESSION_MANAGER_NOT_LISTENING          = -2147017696,
            FABRIC_E_INVALID_SERVICE_TYPE                            = -2147017695,
            FABRIC_E_IMAGEBUILDER_TIMEOUT                            = -2147017694,
            FABRIC_E_IMAGEBUILDER_ACCESS_DENIED                      = -2147017693,
            FABRIC_E_IMAGEBUILDER_INVALID_MSI_FILE                   = -2147017692,
            FABRIC_E_SERVICE_TOO_BUSY                                = -2147017691,
            FABRIC_E_TRANSACTION_NOT_ACTIVE                          = -2147017690,
            FABRIC_E_REPAIR_TASK_ALREADY_EXISTS                      = -2147017689,
            FABRIC_E_REPAIR_TASK_NOT_FOUND                           = -2147017688,
            FABRIC_E_RELIABLE_SESSION_NOT_FOUND                      = -2147017687,
            FABRIC_E_RELIABLE_SESSION_QUEUE_EMPTY                    = -2147017686,
            FABRIC_E_RELIABLE_SESSION_QUOTA_EXCEEDED                 = -2147017685,
            FABRIC_E_RELIABLE_SESSION_SERVICE_FAULTED                = -2147017684,
            FABRIC_E_RELIABLE_SESSION_INVALID_TARGET_PARTITION       = -2147017683,
            FABRIC_E_TRANSACTION_TOO_LARGE                           = -2147017682,
            FABRIC_E_REPLICATION_OPERATION_TOO_LARGE                 = -2147017681,
            FABRIC_E_INSTANCE_ID_MISMATCH                            = -2147017680,
            FABRIC_E_UPGRADE_DOMAIN_ALREADY_COMPLETED                = -2147017679,
            FABRIC_E_NODE_HAS_NOT_STOPPED_YET                        = -2147017678,
            FABRIC_E_INSUFFICIENT_CLUSTER_CAPACITY                   = -2147017677,
            FABRIC_E_INVALID_PACKAGE_SHARING_POLICY                  = -2147017676,
            FABRIC_E_PREDEPLOYMENT_NOT_ALLOWED                       = -2147017675,
            FABRIC_E_INVALID_BACKUP_SETTING                          = -2147017674,
            FABRIC_E_MISSING_FULL_BACKUP                             = -2147017673,
            FABRIC_E_BACKUP_IN_PROGRESS                              = -2147017672,
            FABRIC_E_DUPLICATE_SERVICE_NOTIFICATION_FILTER_NAME      = -2147017671,
            FABRIC_E_INVALID_REPLICA_OPERATION                       = -2147017670,
            FABRIC_E_INVALID_REPLICA_STATE                           = -2147017669,
            FABRIC_E_LOADBALANCER_NOT_READY                          = -2147017668,
            FABRIC_E_INVALID_PARTITION_OPERATION                     = -2147017667,
            FABRIC_E_PRIMARY_ALREADY_EXISTS                          = -2147017666,
            FABRIC_E_SECONDARY_ALREADY_EXISTS                        = -2147017665,
            FABRIC_E_BACKUP_DIRECTORY_NOT_EMPTY                      = -2147017664,
            FABRIC_E_FORCE_NOT_SUPPORTED_FOR_REPLICA_OPERATION       = -2147017663,
            FABRIC_E_ACQUIRE_FILE_LOCK_FAILED                        = -2147017662,
            FABRIC_E_CONNECTION_DENIED                               = -2147017661,
            FABRIC_E_SERVER_AUTHENTICATION_FAILED                    = -2147017660,
            FABRIC_E_CONSTRAINT_KEY_UNDEFINED                        = -2147017659,
            FABRIC_E_MULTITHREADED_TRANSACTIONS_NOT_ALLOWED          = -2147017658,
            FABRIC_E_INVALID_X509_NAME_LIST                          = -2147017657,
            FABRIC_E_VERBOSE_FM_PLACEMENT_HEALTH_REPORTING_REQUIRED  = -2147017656,
            FABRIC_E_GATEWAY_NOT_REACHABLE                           = -2147017655,
            FABRIC_E_USER_ROLE_CLIENT_CERTIFICATE_NOT_CONFIGURED     = -2147017654,
            FABRIC_E_TRANSACTION_ABORTED                             = -2147017653,
            FABRIC_E_CANNOT_CONNECT                                  = -2147017652,
            FABRIC_E_MESSAGE_TOO_LARGE                               = -2147017651,
            FABRIC_E_CONSTRAINT_NOT_SATISFIED                        = -2147017650,
            FABRIC_E_ENDPOINT_NOT_FOUND                              = -2147017649,
            FABRIC_E_APPLICATION_UPDATE_IN_PROGRESS                  = -2147017648,
            FABRIC_E_DELETE_BACKUP_FILE_FAILED                       = -2147017647,
            FABRIC_E_CONNECTION_CLOSED_BY_REMOTE_END                 = -2147017646,
            FABRIC_E_INVALID_TEST_COMMAND_STATE                      = -2147017645,
            FABRIC_E_TEST_COMMAND_OPERATION_ID_ALREADY_EXISTS        = -2147017644,
            FABRIC_E_CM_OPERATION_FAILED                             = -2147017643,
            FABRIC_E_IMAGEBUILDER_RESERVED_DIRECTORY_ERROR           = -2147017642,
            FABRIC_E_CERTIFICATE_NOT_FOUND                           = -2147017641,
            FABRIC_E_CHAOS_ALREADY_RUNNING                           = -2147017640,
            FABRIC_E_FABRIC_DATA_ROOT_NOT_FOUND                      = -2147017639,
            FABRIC_E_INVALID_RESTORE_DATA                            = -2147017638,
            FABRIC_E_DUPLICATE_BACKUPS                               = -2147017637,
            FABRIC_E_INVALID_BACKUP_CHAIN                            = -2147017636,
            FABRIC_E_STOP_IN_PROGRESS                                = -2147017635,
            FABRIC_E_ALREADY_STOPPED                                 = -2147017634,
            FABRIC_E_NODE_IS_DOWN                                    = -2147017633,
            FABRIC_E_NODE_TRANSITION_IN_PROGRESS                     = -2147017632,
            FABRIC_E_INVALID_BACKUP                                  = -2147017631,
            FABRIC_E_INVALID_INSTANCE_ID                             = -2147017630,
            FABRIC_E_INVALID_DURATION                                = -2147017629,
            FABRIC_E_RESTORE_SAFE_CHECK_FAILED                       = -2147017628,
            FABRIC_E_CONFIG_UPGRADE_FAILED                           = -2147017627,
            FABRIC_E_UPLOAD_SESSION_RANGE_NOT_SATISFIABLE            = -2147017626,
            FABRIC_E_UPLOAD_SESSION_ID_CONFLICT                      = -2147017625,
            FABRIC_E_INVALID_PARTITION_SELECTOR                      = -2147017624,
            FABRIC_E_INVALID_REPLICA_SELECTOR                        = -2147017623,
            FABRIC_E_DNS_SERVICE_NOT_FOUND                           = -2147017622,
            FABRIC_E_INVALID_DNS_NAME                                = -2147017621,
            FABRIC_E_DNS_NAME_IN_USE                                 = -2147017620,
            FABRIC_E_COMPOSE_DEPLOYMENT_ALREADY_EXISTS               = -2147017619,
            FABRIC_E_COMPOSE_DEPLOYMENT_NOT_FOUND                    = -2147017618,
            FABRIC_E_INVALID_FOR_STATEFUL_SERVICES                   = -2147017617,
            FABRIC_E_INVALID_FOR_STATELESS_SERVICES                  = -2147017616,
            FABRIC_E_ONLY_VALID_FOR_STATEFUL_PERSISTENT_SERVICES     = -2147017615,
            FABRIC_E_INVALID_UPLOAD_SESSION_ID                       = -2147017614,
            FABRIC_E_BACKUP_NOT_ENABLED                              = -2147017613,
            FABRIC_E_BACKUP_IS_ENABLED                               = -2147017612,
            FABRIC_E_BACKUP_POLICY_DOES_NOT_EXIST                    = -2147017611,
            FABRIC_E_BACKUP_POLICY_ALREADY_EXISTS                    = -2147017610,
            FABRIC_E_RESTORE_IN_PROGRESS                             = -2147017609,
            FABRIC_E_RESTORE_SOURCE_TARGET_PARTITION_MISMATCH        = -2147017608,
            FABRIC_E_FAULT_ANALYSIS_SERVICE_NOT_ENABLED              = -2147017607,
            FABRIC_E_CONTAINER_NOT_FOUND                             = -2147017606,
            FABRIC_E_OBJECT_DISPOSED                                 = -2147017605,
            FABRIC_E_NOT_READABLE                                    = -2147017604,
            FABRIC_E_BACKUPCOPIER_UNEXPECTED_ERROR                   = -2147017603,
            FABRIC_E_BACKUPCOPIER_TIMEOUT                            = -2147017602,
            FABRIC_E_BACKUPCOPIER_ACCESS_DENIED                      = -2147017601,
            FABRIC_E_INVALID_SERVICE_SCALING_POLICY                  = -2147017600,
            FABRIC_E_SINGLE_INSTANCE_APPLICATION_ALREADY_EXISTS      = -2147017599,
            FABRIC_E_SINGLE_INSTANCE_APPLICATION_NOT_FOUND           = -2147017598,
            FABRIC_E_VOLUME_ALREADY_EXISTS                           = -2147017597,
            FABRIC_E_VOLUME_NOT_FOUND                                = -2147017596,
            FABRIC_E_DATABASE_MIGRATION_IN_PROGRESS                  = -2147017595,
            FABRIC_E_CENTRAL_SECRET_SERVICE_GENERIC                  = -2147017594,
            FABRIC_E_SECRET_INVALID                                  = -2147017593,
            FABRIC_E_SECRET_VERSION_ALREADY_EXISTS                   = -2147017592,
            FABRIC_E_SINGLE_INSTANCE_APPLICATION_UPGRADE_IN_PROGRESS = -2147017591,
            FABRIC_E_OPERATION_NOT_SUPPORTED                         = -2147017590,
            FABRIC_E_COMPOSE_DEPLOYMENT_NOT_UPGRADING                = -2147017589,
            FABRIC_E_SECRET_TYPE_CANNOT_BE_CHANGED                   = -2147017588,
            FABRIC_E_NETWORK_NOT_FOUND                               = -2147017587,
            FABRIC_E_NETWORK_IN_USE                                  = -2147017586,
            FABRIC_E_ENDPOINT_NOT_REFERENCED                         = -2147017585,
            FABRIC_E_LAST_USED_HRESULT                               = -2147017585
        };

        enum FABRIC_EXEHOST_WORKING_FOLDER
        {
            FABRIC_EXEHOST_WORKING_FOLDER_INVALID      = 0,
            FABRIC_EXEHOST_WORKING_FOLDER_WORK         = 1,
            FABRIC_EXEHOST_WORKING_FOLDER_CODE_PACKAGE = 2,
            FABRIC_EXEHOST_WORKING_FOLDER_CODE_BASE    = 3
        };

        enum FABRIC_FAULT_TYPE
        {
            FABRIC_FAULT_TYPE_INVALID   = 0,
            FABRIC_FAULT_TYPE_PERMANENT = 1,
            FABRIC_FAULT_TYPE_TRANSIENT = 2
        };

        enum FABRIC_HEALTH_ENTITY_KIND
        {
            FABRIC_HEALTH_ENTITY_KIND_INVALID                  = 0,
            FABRIC_HEALTH_ENTITY_KIND_NODE                     = 1,
            FABRIC_HEALTH_ENTITY_KIND_PARTITION                = 2,
            FABRIC_HEALTH_ENTITY_KIND_SERVICE                  = 3,
            FABRIC_HEALTH_ENTITY_KIND_APPLICATION              = 4,
            FABRIC_HEALTH_ENTITY_KIND_REPLICA                  = 5,
            FABRIC_HEALTH_ENTITY_KIND_DEPLOYED_APPLICATION     = 6,
            FABRIC_HEALTH_ENTITY_KIND_DEPLOYED_SERVICE_PACKAGE = 7,
            FABRIC_HEALTH_ENTITY_KIND_CLUSTER                  = 8
        };

        enum FABRIC_HEALTH_EVALUATION_KIND
        {
            FABRIC_HEALTH_EVALUATION_KIND_INVALID                              = 0,
            FABRIC_HEALTH_EVALUATION_KIND_EVENT                                = 1,
            FABRIC_HEALTH_EVALUATION_KIND_REPLICAS                             = 2,
            FABRIC_HEALTH_EVALUATION_KIND_PARTITIONS                           = 3,
            FABRIC_HEALTH_EVALUATION_KIND_DEPLOYED_SERVICE_PACKAGES            = 4,
            FABRIC_HEALTH_EVALUATION_KIND_DEPLOYED_APPLICATIONS                = 5,
            FABRIC_HEALTH_EVALUATION_KIND_SERVICES                             = 6,
            FABRIC_HEALTH_EVALUATION_KIND_NODES                                = 7,
            FABRIC_HEALTH_EVALUATION_KIND_APPLICATIONS                         = 8,
            FABRIC_HEALTH_EVALUATION_KIND_SYSTEM_APPLICATION                   = 9,
            FABRIC_HEALTH_EVALUATION_KIND_UPGRADE_DOMAIN_DEPLOYED_APPLICATIONS = 10,
            FABRIC_HEALTH_EVALUATION_KIND_UPGRADE_DOMAIN_NODES                 = 11,
            FABRIC_HEALTH_EVALUATION_KIND_NODE                                 = 12,
            FABRIC_HEALTH_EVALUATION_KIND_REPLICA                              = 13,
            FABRIC_HEALTH_EVALUATION_KIND_PARTITION                            = 14,
            FABRIC_HEALTH_EVALUATION_KIND_SERVICE                              = 15,
            FABRIC_HEALTH_EVALUATION_KIND_DEPLOYED_SERVICE_PACKAGE             = 16,
            FABRIC_HEALTH_EVALUATION_KIND_DEPLOYED_APPLICATION                 = 17,
            FABRIC_HEALTH_EVALUATION_KIND_APPLICATION                          = 18,
            FABRIC_HEALTH_EVALUATION_KIND_DELTA_NODES_CHECK                    = 19,
            FABRIC_HEALTH_EVALUATION_KIND_UPGRADE_DOMAIN_DELTA_NODES_CHECK     = 20,
            FABRIC_HEALTH_EVALUATION_KIND_APPLICATION_TYPE_APPLICATIONS        = 21
        };

        enum FABRIC_HEALTH_REPORT_KIND
        {
            FABRIC_HEALTH_REPORT_KIND_INVALID                    = 0,
            FABRIC_HEALTH_REPORT_KIND_STATEFUL_SERVICE_REPLICA   = 1,
            FABRIC_HEALTH_REPORT_KIND_STATELESS_SERVICE_INSTANCE = 2,
            FABRIC_HEALTH_REPORT_KIND_PARTITION                  = 3,
            FABRIC_HEALTH_REPORT_KIND_NODE                       = 4,
            FABRIC_HEALTH_REPORT_KIND_SERVICE                    = 5,
            FABRIC_HEALTH_REPORT_KIND_APPLICATION                = 6,
            FABRIC_HEALTH_REPORT_KIND_DEPLOYED_APPLICATION       = 7,
            FABRIC_HEALTH_REPORT_KIND_DEPLOYED_SERVICE_PACKAGE   = 8,
            FABRIC_HEALTH_REPORT_KIND_CLUSTER                    = 9
        };

        enum FABRIC_HEALTH_STATE
        {
            FABRIC_HEALTH_STATE_INVALID = 0,
            FABRIC_HEALTH_STATE_OK      = 1,
            FABRIC_HEALTH_STATE_WARNING = 2,
            FABRIC_HEALTH_STATE_ERROR   = 3,
            FABRIC_HEALTH_STATE_UNKNOWN = 65535
        };

        enum FABRIC_HEALTH_STATE_FILTER
        {
            FABRIC_HEALTH_STATE_FILTER_DEFAULT = 0,
            FABRIC_HEALTH_STATE_FILTER_NONE    = 1,
            FABRIC_HEALTH_STATE_FILTER_OK      = 2,
            FABRIC_HEALTH_STATE_FILTER_WARNING = 4,
            FABRIC_HEALTH_STATE_FILTER_ERROR   = 8,
            FABRIC_HEALTH_STATE_FILTER_ALL     = 65535
        };

        enum FABRIC_HOST_ISOLATION_MODE
        {
            FABRIC_HOST_ISOLATION_MODE_NONE    = 0,
            FABRIC_HOST_ISOLATION_MODE_PROCESS = 1,
            FABRIC_HOST_ISOLATION_MODE_HYPER_V = 2
        };

        enum FABRIC_HOST_TYPE
        {
            FABRIC_HOST_TYPE_INVALID        = 0,
            FABRIC_HOST_TYPE_EXE_HOST       = 1,
            FABRIC_HOST_TYPE_CONTAINER_HOST = 2
        };

        enum FABRIC_KEY_VALUE_STORE_FULL_COPY_MODE
        {
            FABRIC_KEY_VALUE_STORE_FULL_COPY_MODE_DEFAULT  = 0,
            FABRIC_KEY_VALUE_STORE_FULL_COPY_MODE_PHYSICAL = 1,
            FABRIC_KEY_VALUE_STORE_FULL_COPY_MODE_LOGICAL  = 2,
            FABRIC_KEY_VALUE_STORE_FULL_COPY_MODE_REBUILD  = 3
        };

        enum FABRIC_KEY_VALUE_STORE_MIGRATION_PHASE
        {
            FABRIC_KEY_VALUE_STORE_MIGRATION_PHASE_INACTIVE                = 0,
            FABRIC_KEY_VALUE_STORE_MIGRATION_PHASE_MIGRATION               = 1,
            FABRIC_KEY_VALUE_STORE_MIGRATION_PHASE_TARGET_DATABASE_SWAP    = 2,
            FABRIC_KEY_VALUE_STORE_MIGRATION_PHASE_TARGET_DATABASE_CLEANUP = 3,
            FABRIC_KEY_VALUE_STORE_MIGRATION_PHASE_SOURCE_DATABASE_CLEANUP = 4,
            FABRIC_KEY_VALUE_STORE_MIGRATION_PHASE_TARGET_DATABASE_ACTIVE  = 5,
            FABRIC_KEY_VALUE_STORE_MIGRATION_PHASE_RESTORE_SOURCE_BACKUP   = 6
        };

        enum FABRIC_KEY_VALUE_STORE_MIGRATION_STATE
        {
            FABRIC_KEY_VALUE_STORE_MIGRATION_STATE_INACTIVE   = 0,
            FABRIC_KEY_VALUE_STORE_MIGRATION_STATE_PROCESSING = 1,
            FABRIC_KEY_VALUE_STORE_MIGRATION_STATE_COMPLETED  = 2,
            FABRIC_KEY_VALUE_STORE_MIGRATION_STATE_CANCELED   = 3,
            FABRIC_KEY_VALUE_STORE_MIGRATION_STATE_FAILED     = 4
        };

        enum FABRIC_KEY_VALUE_STORE_NOTIFICATION_MODE
        {
            FABRIC_KEY_VALUE_STORE_NOTIFICATION_MODE_INVALID                   = 0,
            FABRIC_KEY_VALUE_STORE_NOTIFICATION_MODE_NONE                      = 1,
            FABRIC_KEY_VALUE_STORE_NOTIFICATION_MODE_NON_BLOCKING_QUORUM_ACKED = 2,
            FABRIC_KEY_VALUE_STORE_NOTIFICATION_MODE_BLOCK_SECONDARY_ACK       = 3
        };

        enum FABRIC_KEY_VALUE_STORE_PROVIDER_KIND
        {
            FABRIC_KEY_VALUE_STORE_PROVIDER_KIND_UNKNOWN = 0,
            FABRIC_KEY_VALUE_STORE_PROVIDER_KIND_ESE     = 1,
            FABRIC_KEY_VALUE_STORE_PROVIDER_KIND_TSTORE  = 2
        };

        enum FABRIC_LOCAL_STORE_KIND
        {
            FABRIC_LOCAL_STORE_KIND_INVALID = 0,
            FABRIC_LOCAL_STORE_KIND_ESE     = 1
        };

        enum FABRIC_MONITORED_UPGRADE_FAILURE_ACTION
        {
            FABRIC_MONITORED_UPGRADE_FAILURE_ACTION_INVALID  = 0,
            FABRIC_MONITORED_UPGRADE_FAILURE_ACTION_ROLLBACK = 1,
            FABRIC_MONITORED_UPGRADE_FAILURE_ACTION_MANUAL   = 2
        };

        enum FABRIC_MOVE_COST
        {
            FABRIC_MOVE_COST_ZERO   = 0,
            FABRIC_MOVE_COST_LOW    = 1,
            FABRIC_MOVE_COST_MEDIUM = 2,
            FABRIC_MOVE_COST_HIGH   = 3
        };

        enum FABRIC_MOVE_PRIMARY_DESCRIPTION_KIND
        {
            FABRIC_MOVE_PRIMARY_DESCRIPTION_KIND_INVALID                = 0,
            FABRIC_MOVE_PRIMARY_DESCRIPTION_KIND_USING_NODE_NAME        = 1,
            FABRIC_MOVE_PRIMARY_DESCRIPTION_KIND_USING_REPLICA_SELECTOR = 2
        };

        enum FABRIC_MOVE_SECONDARY_DESCRIPTION_KIND
        {
            FABRIC_MOVE_SECONDARY_DESCRIPTION_KIND_INVALID                = 0,
            FABRIC_MOVE_SECONDARY_DESCRIPTION_KIND_USING_NODE_NAME        = 1,
            FABRIC_MOVE_SECONDARY_DESCRIPTION_KIND_USING_REPLICA_SELECTOR = 2
        };

        enum FABRIC_NETWORK_STATUS
        {
            FABRIC_NETWORK_STATUS_INVALID  = 0,
            FABRIC_NETWORK_STATUS_READY    = 1,
            FABRIC_NETWORK_STATUS_CREATING = 2,
            FABRIC_NETWORK_STATUS_DELETING = 3,
            FABRIC_NETWORK_STATUS_UPDATING = 4,
            FABRIC_NETWORK_STATUS_FAILED   = 5
        };

        enum FABRIC_NETWORK_STATUS_FILTER
        {
            FABRIC_NETWORK_STATUS_FILTER_DEFAULT  = 0,
            FABRIC_NETWORK_STATUS_FILTER_ALL      = 65535,
            FABRIC_NETWORK_STATUS_FILTER_READY    = 1,
            FABRIC_NETWORK_STATUS_FILTER_CREATING = 2,
            FABRIC_NETWORK_STATUS_FILTER_DELETING = 4,
            FABRIC_NETWORK_STATUS_FILTER_UPDATING = 8,
            FABRIC_NETWORK_STATUS_FILTER_FAILED   = 16
        };

        enum FABRIC_NETWORK_TYPE
        {
            FABRIC_NETWORK_TYPE_INVALID   = 0,
            FABRIC_NETWORK_TYPE_LOCAL     = 1,
            FABRIC_NETWORK_TYPE_FEDERATED = 2
        };

        enum FABRIC_NODE_DEACTIVATION_INTENT
        {
            FABRIC_NODE_DEACTIVATION_INTENT_INVALID     = 0,
            FABRIC_NODE_DEACTIVATION_INTENT_PAUSE       = 1,
            FABRIC_NODE_DEACTIVATION_INTENT_RESTART     = 2,
            FABRIC_NODE_DEACTIVATION_INTENT_REMOVE_DATA = 3,
            FABRIC_NODE_DEACTIVATION_INTENT_REMOVE_NODE = 4
        };

        enum FABRIC_NODE_DEACTIVATION_STATUS
        {
            FABRIC_NODE_DEACTIVATION_STATUS_NONE                     = 0,
            FABRIC_NODE_DEACTIVATION_STATUS_SAFETY_CHECK_IN_PROGRESS = 1,
            FABRIC_NODE_DEACTIVATION_STATUS_SAFETY_CHECK_COMPLETE    = 2,
            FABRIC_NODE_DEACTIVATION_STATUS_COMPLETED                = 3
        };

        enum FABRIC_NODE_DEACTIVATION_TASK_TYPE
        {
            FABRIC_NODE_DEACTIVATION_TASK_TYPE_INVALID        = 0,
            FABRIC_NODE_DEACTIVATION_TASK_TYPE_INFRASTRUCTURE = 1,
            FABRIC_NODE_DEACTIVATION_TASK_TYPE_REPAIR         = 2,
            FABRIC_NODE_DEACTIVATION_TASK_TYPE_CLIENT         = 3
        };

        enum FABRIC_NODE_TRANSITION_TYPE
        {
            FABRIC_NODE_TRANSITION_TYPE_INVALID = 0,
            FABRIC_NODE_TRANSITION_TYPE_START   = 1,
            FABRIC_NODE_TRANSITION_TYPE_STOP    = 2
        };

        enum FABRIC_NODE_UPGRADE_PHASE
        {
            FABRIC_NODE_UPGRADE_PHASE_INVALID                   = 0,
            FABRIC_NODE_UPGRADE_PHASE_PRE_UPGRADE_SAFETY_CHECK  = 1,
            FABRIC_NODE_UPGRADE_PHASE_UPGRADING                 = 2,
            FABRIC_NODE_UPGRADE_PHASE_POST_UPGRADE_SAFETY_CHECK = 3
        };

        enum FABRIC_OPERATION_TYPE
        {
            FABRIC_OPERATION_TYPE_INVALID                = 0,
            FABRIC_OPERATION_TYPE_NORMAL                 = 1,
            FABRIC_OPERATION_TYPE_END_OF_STREAM          = 2,
            FABRIC_OPERATION_TYPE_CREATE_ATOMIC_GROUP    = 16,
            FABRIC_OPERATION_TYPE_ATOMIC_GROUP_OPERATION = 32,
            FABRIC_OPERATION_TYPE_COMMIT_ATOMIC_GROUP    = 64,
            FABRIC_OPERATION_TYPE_ROLLBACK_ATOMIC_GROUP  = 128,
            FABRIC_OPERATION_TYPE_HAS_ATOMIC_GROUP_MASK  = 240
        };

        enum FABRIC_PACKAGE_SHARING_POLICY_SCOPE
        {
            FABRIC_PACKAGE_SHARING_POLICY_SCOPE_NONE   = 0,
            FABRIC_PACKAGE_SHARING_POLICY_SCOPE_ALL    = 1,
            FABRIC_PACKAGE_SHARING_POLICY_SCOPE_CODE   = 2,
            FABRIC_PACKAGE_SHARING_POLICY_SCOPE_CONFIG = 3,
            FABRIC_PACKAGE_SHARING_POLICY_SCOPE_DATA   = 4
        };

        enum FABRIC_PARTITION_KEY_TYPE
        {
            FABRIC_PARTITION_KEY_TYPE_INVALID = 0,
            FABRIC_PARTITION_KEY_TYPE_NONE    = 1,
            FABRIC_PARTITION_KEY_TYPE_INT64   = 2,
            FABRIC_PARTITION_KEY_TYPE_STRING  = 3
        };

        enum FABRIC_PARTITION_SCHEME
        {
            FABRIC_PARTITION_SCHEME_INVALID             = 0,
            FABRIC_PARTITION_SCHEME_SINGLETON           = 1,
            FABRIC_PARTITION_SCHEME_UNIFORM_INT64_RANGE = 2,
            FABRIC_PARTITION_SCHEME_NAMED               = 3
        };

        enum FABRIC_PARTITION_SELECTOR_TYPE
        {
            FABRIC_PARTITION_SELECTOR_TYPE_NONE          = 0,
            FABRIC_PARTITION_SELECTOR_TYPE_SINGLETON     = 1,
            FABRIC_PARTITION_SELECTOR_TYPE_NAMED         = 2,
            FABRIC_PARTITION_SELECTOR_TYPE_UNIFORM_INT64 = 3,
            FABRIC_PARTITION_SELECTOR_TYPE_PARTITION_ID  = 4,
            FABRIC_PARTITION_SELECTOR_TYPE_RANDOM        = 5
        };

        enum FABRIC_PLACEMENT_POLICY_TYPE
        {
            FABRIC_PLACEMENT_POLICY_INVALID                      = 0,
            FABRIC_PLACEMENT_POLICY_INVALID_DOMAIN               = 1,
            FABRIC_PLACEMENT_POLICY_REQUIRED_DOMAIN              = 2,
            FABRIC_PLACEMENT_POLICY_PREFERRED_PRIMARY_DOMAIN     = 3,
            FABRIC_PLACEMENT_POLICY_REQUIRED_DOMAIN_DISTRIBUTION = 4,
            FABRIC_PLACEMENT_POLICY_NONPARTIALLY_PLACE_SERVICE   = 5
        };

        enum FABRIC_PROPERTY_BATCH_OPERATION_KIND
        {
            FABRIC_PROPERTY_BATCH_OPERATION_KIND_INVALID        = 0,
            FABRIC_PROPERTY_BATCH_OPERATION_KIND_PUT            = 1,
            FABRIC_PROPERTY_BATCH_OPERATION_KIND_GET            = 2,
            FABRIC_PROPERTY_BATCH_OPERATION_KIND_CHECK_EXISTS   = 3,
            FABRIC_PROPERTY_BATCH_OPERATION_KIND_CHECK_SEQUENCE = 4,
            FABRIC_PROPERTY_BATCH_OPERATION_KIND_DELETE         = 5,
            FABRIC_PROPERTY_BATCH_OPERATION_KIND_PUT_CUSTOM     = 6,
            FABRIC_PROPERTY_BATCH_OPERATION_KIND_CHECK_VALUE    = 7
        };

        enum FABRIC_PROPERTY_TYPE_ID
        {
            FABRIC_PROPERTY_TYPE_INVALID = 0,
            FABRIC_PROPERTY_TYPE_BINARY  = 1,
            FABRIC_PROPERTY_TYPE_INT64   = 2,
            FABRIC_PROPERTY_TYPE_DOUBLE  = 3,
            FABRIC_PROPERTY_TYPE_WSTRING = 4,
            FABRIC_PROPERTY_TYPE_GUID    = 5
        };

        enum FABRIC_PROTECTION_LEVEL
        {
            FABRIC_PROTECTION_LEVEL_NONE           = 0,
            FABRIC_PROTECTION_LEVEL_SIGN           = 1,
            FABRIC_PROTECTION_LEVEL_ENCRYPTANDSIGN = 2
        };

        enum FABRIC_PROVISION_APPLICATION_TYPE_KIND
        {
            FABRIC_PROVISION_APPLICATION_TYPE_KIND_INVALID          = 0,
            FABRIC_PROVISION_APPLICATION_TYPE_KIND_IMAGE_STORE_PATH = 1,
            FABRIC_PROVISION_APPLICATION_TYPE_KIND_EXTERNAL_STORE   = 2
        };

        enum FABRIC_QUERY_NODE_STATUS
        {
            FABRIC_QUERY_NODE_STATUS_INVALID   = 0,
            FABRIC_QUERY_NODE_STATUS_UP        = 1,
            FABRIC_QUERY_NODE_STATUS_DOWN      = 2,
            FABRIC_QUERY_NODE_STATUS_ENABLING  = 3,
            FABRIC_QUERY_NODE_STATUS_DISABLING = 4,
            FABRIC_QUERY_NODE_STATUS_DISABLED  = 5,
            FABRIC_QUERY_NODE_STATUS_UNKNOWN   = 6,
            FABRIC_QUERY_NODE_STATUS_REMOVED   = 7
        };

        enum FABRIC_QUERY_NODE_STATUS_FILTER
        {
            FABRIC_QUERY_NODE_STATUS_FILTER_DEFAULT   = 0,
            FABRIC_QUERY_NODE_STATUS_FILTER_ALL       = 65535,
            FABRIC_QUERY_NODE_STATUS_FILTER_UP        = 1,
            FABRIC_QUERY_NODE_STATUS_FILTER_DOWN      = 2,
            FABRIC_QUERY_NODE_STATUS_FILTER_ENABLING  = 4,
            FABRIC_QUERY_NODE_STATUS_FILTER_DISABLING = 8,
            FABRIC_QUERY_NODE_STATUS_FILTER_DISABLED  = 16,
            FABRIC_QUERY_NODE_STATUS_FILTER_UNKNOWN   = 32,
            FABRIC_QUERY_NODE_STATUS_FILTER_REMOVED   = 64
        };

        enum FABRIC_QUERY_REPLICATOR_OPERATION_NAME
        {
            FABRIC_QUERY_REPLICATOR_OPERATION_NAME_INVALID        = 0,
            FABRIC_QUERY_REPLICATOR_OPERATION_NAME_NONE           = 1,
            FABRIC_QUERY_REPLICATOR_OPERATION_NAME_OPEN           = 2,
            FABRIC_QUERY_REPLICATOR_OPERATION_NAME_CHANGEROLE     = 4,
            FABRIC_QUERY_REPLICATOR_OPERATION_NAME_UPDATEEPOCH    = 8,
            FABRIC_QUERY_REPLICATOR_OPERATION_NAME_CLOSE          = 16,
            FABRIC_QUERY_REPLICATOR_OPERATION_NAME_ABORT          = 32,
            FABRIC_QUERY_REPLICATOR_OPERATION_NAME_ONDATALOSS     = 64,
            FABRIC_QUERY_REPLICATOR_OPERATION_NAME_WAITFORCATCHUP = 128,
            FABRIC_QUERY_REPLICATOR_OPERATION_NAME_BUILD          = 256
        };

        enum FABRIC_QUERY_SERVICE_OPERATION_NAME
        {
            FABRIC_QUERY_SERVICE_OPERATION_NAME_INVALID    = 0,
            FABRIC_QUERY_SERVICE_OPERATION_NAME_NONE       = 1,
            FABRIC_QUERY_SERVICE_OPERATION_NAME_OPEN       = 2,
            FABRIC_QUERY_SERVICE_OPERATION_NAME_CHANGEROLE = 4,
            FABRIC_QUERY_SERVICE_OPERATION_NAME_CLOSE      = 8,
            FABRIC_QUERY_SERVICE_OPERATION_NAME_ABORT      = 16
        };

        enum FABRIC_QUERY_SERVICE_PARTITION_STATUS
        {
            FABRIC_QUERY_SERVICE_PARTITION_STATUS_INVALID        = 0,
            FABRIC_QUERY_SERVICE_PARTITION_STATUS_READY          = 1,
            FABRIC_QUERY_SERVICE_PARTITION_STATUS_NOT_READY      = 2,
            FABRIC_QUERY_SERVICE_PARTITION_STATUS_IN_QUORUM_LOSS = 3,
            FABRIC_QUERY_SERVICE_PARTITION_STATUS_RECONFIGURING  = 4,
            FABRIC_QUERY_SERVICE_PARTITION_STATUS_DELETING       = 5
        };

        enum FABRIC_QUERY_SERVICE_REPLICA_STATUS
        {
            FABRIC_QUERY_SERVICE_REPLICA_STATUS_INVALID = 0,
            FABRIC_QUERY_SERVICE_REPLICA_STATUS_INBUILD = 1,
            FABRIC_QUERY_SERVICE_REPLICA_STATUS_STANDBY = 2,
            FABRIC_QUERY_SERVICE_REPLICA_STATUS_READY   = 3,
            FABRIC_QUERY_SERVICE_REPLICA_STATUS_DOWN    = 4,
            FABRIC_QUERY_SERVICE_REPLICA_STATUS_DROPPED = 5
        };

        enum FABRIC_QUERY_SERVICE_REPLICA_STATUS_FILTER
        {
            FABRIC_QUERY_SERVICE_REPLICA_STATUS_FILTER_DEFAULT = 0,
            FABRIC_QUERY_SERVICE_REPLICA_STATUS_FILTER_ALL     = 65535,
            FABRIC_QUERY_SERVICE_REPLICA_STATUS_FILTER_INBUILD = 1,
            FABRIC_QUERY_SERVICE_REPLICA_STATUS_FILTER_STANDBY = 2,
            FABRIC_QUERY_SERVICE_REPLICA_STATUS_FILTER_READY   = 4,
            FABRIC_QUERY_SERVICE_REPLICA_STATUS_FILTER_DOWN    = 8,
            FABRIC_QUERY_SERVICE_REPLICA_STATUS_FILTER_DROPPED = 16
        };

        enum FABRIC_QUERY_SERVICE_STATUS
        {
            FABRIC_QUERY_SERVICE_STATUS_UNKNOWN   = 0,
            FABRIC_QUERY_SERVICE_STATUS_ACTIVE    = 1,
            FABRIC_QUERY_SERVICE_STATUS_UPGRADING = 2,
            FABRIC_QUERY_SERVICE_STATUS_DELETING  = 3,
            FABRIC_QUERY_SERVICE_STATUS_CREATING  = 4,
            FABRIC_QUERY_SERVICE_STATUS_FAILED    = 5
        };

        enum FABRIC_QUORUM_LOSS_MODE
        {
            FABRIC_QUORUM_LOSS_MODE_INVALID         = 0,
            FABRIC_QUORUM_LOSS_MODE_QUORUM_REPLICAS = 1,
            FABRIC_QUORUM_LOSS_MODE_ALL_REPLICAS    = 2
        };

        enum FABRIC_RECONFIGURATION_PHASE
        {
            FABRIC_RECONFIGURATION_PHASE_INVALID    = 0,
            FABRIC_RECONFIGURATION_PHASE_NONE       = 1,
            FABRIC_RECONFIGURATION_PHASE_ZERO       = 2,
            FABRIC_RECONFIGURATION_PHASE_ONE        = 3,
            FABRIC_RECONFIGURATION_PHASE_TWO        = 4,
            FABRIC_RECONFIGURATION_PHASE_THREE      = 5,
            FABRIC_RECONFIGURATION_PHASE_FOUR       = 6,
            FABRIC_RECONFIGURATION_ABORT_PHASE_ZERO = 7
        };

        enum FABRIC_RECONFIGURATION_TYPE
        {
            FABRIC_RECONFIGURATION_TYPE_INVALID     = 0,
            FABRIC_RECONFIGURATION_TYPE_SWAPPRIMARY = 1,
            FABRIC_RECONFIGURATION_TYPE_FAILOVER    = 2,
            FABRIC_RECONFIGURATION_TYPE_OTHER       = 3,
            FABRIC_RECONFIGURATION_TYPE_NONE        = 4
        };

        enum FABRIC_REPAIR_IMPACT_KIND
        {
            FABRIC_REPAIR_IMPACT_KIND_INVALID = 0,
            FABRIC_REPAIR_IMPACT_KIND_NODE    = 1
        };

        enum FABRIC_REPAIR_NODE_IMPACT_LEVEL
        {
            FABRIC_REPAIR_NODE_IMPACT_LEVEL_INVALID     = 0,
            FABRIC_REPAIR_NODE_IMPACT_LEVEL_NONE        = 1,
            FABRIC_REPAIR_NODE_IMPACT_LEVEL_RESTART     = 2,
            FABRIC_REPAIR_NODE_IMPACT_LEVEL_REMOVE_DATA = 3,
            FABRIC_REPAIR_NODE_IMPACT_LEVEL_REMOVE_NODE = 4
        };

        enum FABRIC_REPAIR_SCOPE_IDENTIFIER_KIND
        {
            FABRIC_REPAIR_SCOPE_IDENTIFIER_KIND_INVALID = 0,
            FABRIC_REPAIR_SCOPE_IDENTIFIER_KIND_CLUSTER = 1
        };

        enum FABRIC_REPAIR_TARGET_KIND
        {
            FABRIC_REPAIR_TARGET_KIND_INVALID = 0,
            FABRIC_REPAIR_TARGET_KIND_NODE    = 1
        };

        enum FABRIC_REPAIR_TASK_FLAGS
        {
            FABRIC_REPAIR_TASK_FLAGS_NONE             = 0,
            FABRIC_REPAIR_TASK_FLAGS_CANCEL_REQUESTED = 1,
            FABRIC_REPAIR_TASK_FLAGS_ABORT_REQUESTED  = 2,
            FABRIC_REPAIR_TASK_FLAGS_FORCED_APPROVAL  = 4,
            FABRIC_REPAIR_TASK_FLAGS_VALID_MASK       = 7
        };

        enum FABRIC_REPAIR_TASK_HEALTH_CHECK_STATE
        {
            FABRIC_REPAIR_TASK_HEALTH_CHECK_STATE_NOT_STARTED = 0,
            FABRIC_REPAIR_TASK_HEALTH_CHECK_STATE_IN_PROGRESS = 1,
            FABRIC_REPAIR_TASK_HEALTH_CHECK_STATE_SUCCEEDED   = 2,
            FABRIC_REPAIR_TASK_HEALTH_CHECK_STATE_SKIPPED     = 3,
            FABRIC_REPAIR_TASK_HEALTH_CHECK_STATE_TIMEDOUT    = 4
        };

        enum FABRIC_REPAIR_TASK_HEALTH_POLICY_UPDATE_SETTINGS_FLAGS
        {
            FABRIC_REPAIR_TASK_HEALTH_POLICY_UPDATE_SETTINGS_NONE                                 = 0,
            FABRIC_REPAIR_TASK_HEALTH_POLICY_UPDATE_SETTINGS_HONOR_PERFORM_PREPARING_HEALTH_CHECK = 1,
            FABRIC_REPAIR_TASK_HEALTH_POLICY_UPDATE_SETTINGS_HONOR_PERFORM_RESTORING_HEALTH_CHECK = 2
        };

        enum FABRIC_REPAIR_TASK_RESULT
        {
            FABRIC_REPAIR_TASK_RESULT_INVALID     = 0,
            FABRIC_REPAIR_TASK_RESULT_SUCCEEDED   = 1,
            FABRIC_REPAIR_TASK_RESULT_CANCELLED   = 2,
            FABRIC_REPAIR_TASK_RESULT_INTERRUPTED = 4,
            FABRIC_REPAIR_TASK_RESULT_FAILED      = 8,
            FABRIC_REPAIR_TASK_RESULT_PENDING     = 16
        };

        enum FABRIC_REPAIR_TASK_STATE
        {
            FABRIC_REPAIR_TASK_STATE_INVALID   = 0,
            FABRIC_REPAIR_TASK_STATE_CREATED   = 1,
            FABRIC_REPAIR_TASK_STATE_CLAIMED   = 2,
            FABRIC_REPAIR_TASK_STATE_PREPARING = 4,
            FABRIC_REPAIR_TASK_STATE_APPROVED  = 8,
            FABRIC_REPAIR_TASK_STATE_EXECUTING = 16,
            FABRIC_REPAIR_TASK_STATE_RESTORING = 32,
            FABRIC_REPAIR_TASK_STATE_COMPLETED = 64
        };

        enum FABRIC_REPAIR_TASK_STATE_FILTER
        {
            FABRIC_REPAIR_TASK_STATE_FILTER_DEFAULT          = 0,
            FABRIC_REPAIR_TASK_STATE_FILTER_CREATED          = 1,
            FABRIC_REPAIR_TASK_STATE_FILTER_CLAIMED          = 2,
            FABRIC_REPAIR_TASK_STATE_FILTER_PREPARING        = 4,
            FABRIC_REPAIR_TASK_STATE_FILTER_APPROVED         = 8,
            FABRIC_REPAIR_TASK_STATE_FILTER_EXECUTING        = 16,
            FABRIC_REPAIR_TASK_STATE_FILTER_RESTORING        = 32,
            FABRIC_REPAIR_TASK_STATE_FILTER_COMPLETED        = 64,
            FABRIC_REPAIR_TASK_STATE_FILTER_READY_TO_EXECUTE = 24,
            FABRIC_REPAIR_TASK_STATE_FILTER_ACTIVE           = 63,
            FABRIC_REPAIR_TASK_STATE_FILTER_ALL              = 127
        };

        enum FABRIC_REPLICATOR_SETTINGS_FLAGS
        {
            FABRIC_REPLICATOR_SETTINGS_NONE                                 = 0,
            FABRIC_REPLICATOR_ADDRESS                                       = 1,
            FABRIC_REPLICATOR_SECURITY                                      = 2,
            FABRIC_REPLICATOR_RETRY_INTERVAL                                = 4,
            FABRIC_REPLICATOR_BATCH_ACKNOWLEDGEMENT_INTERVAL                = 8,
            FABRIC_REPLICATOR_REQUIRE_SERVICE_ACK                           = 16,
            FABRIC_REPLICATOR_REPLICATION_QUEUE_INITIAL_SIZE                = 32,
            FABRIC_REPLICATOR_REPLICATION_QUEUE_MAX_SIZE                    = 64,
            FABRIC_REPLICATOR_COPY_QUEUE_INITIAL_SIZE                       = 128,
            FABRIC_REPLICATOR_COPY_QUEUE_MAX_SIZE                           = 256,
            FABRIC_REPLICATOR_REPLICATION_QUEUE_MAX_MEMORY_SIZE             = 512,
            FABRIC_REPLICATOR_SECONDARY_CLEAR_ACKNOWLEDGED_OPERATIONS       = 1024,
            FABRIC_REPLICATOR_REPLICATION_MESSAGE_MAX_SIZE                  = 2048,
            FABRIC_REPLICATOR_USE_STREAMFAULTS_AND_ENDOFSTREAM_OPERATIONACK = 4096,
            FABRIC_REPLICATOR_SECONDARY_REPLICATION_QUEUE_INITIAL_SIZE      = 8192,
            FABRIC_REPLICATOR_SECONDARY_REPLICATION_QUEUE_MAX_SIZE          = 16384,
            FABRIC_REPLICATOR_SECONDARY_REPLICATION_QUEUE_MAX_MEMORY_SIZE   = 32768,
            FABRIC_REPLICATOR_PRIMARY_REPLICATION_QUEUE_INITIAL_SIZE        = 65536,
            FABRIC_REPLICATOR_PRIMARY_REPLICATION_QUEUE_MAX_SIZE            = 131072,
            FABRIC_REPLICATOR_PRIMARY_REPLICATION_QUEUE_MAX_MEMORY_SIZE     = 262144,
            FABRIC_REPLICATOR_PRIMARY_WAIT_FOR_PENDING_QUORUMS_TIMEOUT      = 524288,
            FABRIC_REPLICATOR_LISTEN_ADDRESS                                = 1048576,
            FABRIC_REPLICATOR_PUBLISH_ADDRESS                               = 2097152
        };

        enum FABRIC_REPLICA_OPEN_MODE
        {
            FABRIC_REPLICA_OPEN_MODE_INVALID  = 0,
            FABRIC_REPLICA_OPEN_MODE_NEW      = 1,
            FABRIC_REPLICA_OPEN_MODE_EXISTING = 2
        };

        enum FABRIC_REPLICA_ROLE
        {
            FABRIC_REPLICA_ROLE_UNKNOWN          = 0,
            FABRIC_REPLICA_ROLE_NONE             = 1,
            FABRIC_REPLICA_ROLE_PRIMARY          = 2,
            FABRIC_REPLICA_ROLE_IDLE_SECONDARY   = 3,
            FABRIC_REPLICA_ROLE_ACTIVE_SECONDARY = 4
        };

        enum FABRIC_REPLICA_SET_QUORUM_MODE
        {
            FABRIC_REPLICA_SET_QUORUM_INVALID = 0,
            FABRIC_REPLICA_SET_WRITE_QUORUM   = 1,
            FABRIC_REPLICA_SET_QUORUM_ALL     = 2
        };

        enum FABRIC_REPLICA_STATUS
        {
            FABRIC_REPLICA_STATUS_INVALID = 0,
            FABRIC_REPLICA_STATUS_DOWN    = 1,
            FABRIC_REPLICA_STATUS_UP      = 2
        };

        enum FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION_KIND
        {
            FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION_KIND_INVALID         = 0,
            FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION_KIND_USING_NODE_NAME = 1
        };

        enum FABRIC_RESTART_NODE_DESCRIPTION_KIND
        {
            FABRIC_RESTART_NODE_DESCRIPTION_KIND_INVALID         = 0,
            FABRIC_RESTART_NODE_DESCRIPTION_KIND_USING_NODE_NAME = 1
        };

        enum FABRIC_RESTART_PARTITION_MODE
        {
            FABRIC_RESTART_PARTITION_MODE_INVALID                   = 0,
            FABRIC_RESTART_PARTITION_MODE_ALL_REPLICAS_OR_INSTANCES = 1,
            FABRIC_RESTART_PARTITION_MODE_ONLY_ACTIVE_SECONDARIES   = 2
        };

        enum FABRIC_ROLLING_UPGRADE_MODE
        {
            FABRIC_ROLLING_UPGRADE_MODE_INVALID            = 0,
            FABRIC_ROLLING_UPGRADE_MODE_UNMONITORED_AUTO   = 1,
            FABRIC_ROLLING_UPGRADE_MODE_UNMONITORED_MANUAL = 2,
            FABRIC_ROLLING_UPGRADE_MODE_MONITORED          = 3
        };

        enum FABRIC_ROLLING_UPGRADE_UPDATE_FLAGS
        {
            FABRIC_ROLLING_UPGRADE_UPDATE_FLAGS_NONE                                  = 0,
            FABRIC_ROLLING_UPGRADE_UPDATE_FLAGS_UPGRADE_MODE                          = 1,
            FABRIC_ROLLING_UPGRADE_UPDATE_FLAGS_FORCE_RESTART                         = 2,
            FABRIC_ROLLING_UPGRADE_UPDATE_FLAGS_REPLICA_SET_CHECK_TIMEOUT             = 4,
            FABRIC_ROLLING_UPGRADE_UPDATE_FLAGS_FAILURE_ACTION                        = 8,
            FABRIC_ROLLING_UPGRADE_UPDATE_FLAGS_HEALTH_CHECK_WAIT                     = 16,
            FABRIC_ROLLING_UPGRADE_UPDATE_FLAGS_HEALTH_CHECK_STABLE                   = 32,
            FABRIC_ROLLING_UPGRADE_UPDATE_FLAGS_HEALTH_CHECK_RETRY                    = 64,
            FABRIC_ROLLING_UPGRADE_UPDATE_FLAGS_UPGRADE_TIMEOUT                       = 128,
            FABRIC_ROLLING_UPGRADE_UPDATE_FLAGS_UPGRADE_DOMAIN_TIMEOUT                = 256,
            FABRIC_ROLLING_UPGRADE_UPDATE_FLAGS_HEALTH_POLICY                         = 512,
            FABRIC_ROLLING_UPGRADE_UPDATE_FLAGS_ENABLE_DELTAS                         = 1024,
            FABRIC_ROLLING_UPGRADE_UPDATE_FLAGS_UPGRADE_HEALTH_POLICY                 = 2048,
            FABRIC_ROLLING_UPGRADE_UPDATE_FLAGS_UPGRADE_APPLICATION_HEALTH_POLICY_MAP = 4096
        };

        enum FABRIC_SAFETY_CHECK_KIND
        {
            FABRIC_SAFETY_CHECK_KIND_INVALID                              = 0,
            FABRIC_SEED_NODE_SAFETY_CHECK_KIND_ENSURE_QUORUM              = 1,
            FABRIC_PARTITION_SAFETY_CHECK_KIND_ENSURE_QUORUM              = 2,
            FABRIC_PARTITION_SAFETY_CHECK_KIND_WAIT_FOR_PRIMARY_PLACEMENT = 3,
            FABRIC_PARTITION_SAFETY_CHECK_KIND_WAIT_FOR_PRIMARY_SWAP      = 4,
            FABRIC_PARTITION_SAFETY_CHECK_KIND_WAIT_FOR_RECONFIGURATION   = 5,
            FABRIC_PARTITION_SAFETY_CHECK_KIND_WAIT_FOR_INBUILD_REPLICA   = 6,
            FABRIC_PARTITION_SAFETY_CHECK_KIND_ENSURE_AVAILABILITY        = 7
        };

        enum FABRIC_SCALING_MECHANISM_KIND
        {
            FABRIC_SCALING_MECHANISM_INVALID                                     = 0,
            FABRIC_SCALING_MECHANISM_KIND_SCALE_PARTITION_INSTANCE_COUNT         = 1,
            FABRIC_SCALING_MECHANISM_KIND_ADD_REMOVE_INCREMENTAL_NAMED_PARTITION = 2
        };

        enum FABRIC_SCALING_TRIGGER_KIND
        {
            FABRIC_SCALING_TRIGGER_KIND_INVALID                = 0,
            FABRIC_SCALING_TRIGGER_KIND_AVERAGE_PARTITION_LOAD = 1,
            FABRIC_SCALING_TRIGGER_KIND_AVERAGE_SERVICE_LOAD   = 2
        };

        enum FABRIC_SECURITY_CREDENTIAL_KIND
        {
            FABRIC_SECURITY_CREDENTIAL_KIND_NONE    = 0,
            FABRIC_SECURITY_CREDENTIAL_KIND_X509    = 1,
            FABRIC_SECURITY_CREDENTIAL_KIND_WINDOWS = 2,
            FABRIC_SECURITY_CREDENTIAL_KIND_CLAIMS  = 3,
            FABRIC_SECURITY_CREDENTIAL_KIND_X509_2  = 4,
            FABRIC_SECURITY_CREDENTIAL_KIND_INVALID = 255
        };

        enum FABRIC_SERVICE_CORRELATION_SCHEME
        {
            FABRIC_SERVICE_CORRELATION_SCHEME_INVALID             = 0,
            FABRIC_SERVICE_CORRELATION_SCHEME_AFFINITY            = 1,
            FABRIC_SERVICE_CORRELATION_SCHEME_ALIGNED_AFFINITY    = 2,
            FABRIC_SERVICE_CORRELATION_SCHEME_NONALIGNED_AFFINITY = 3
        };

        enum FABRIC_SERVICE_DESCRIPTION_KIND
        {
            FABRIC_SERVICE_DESCRIPTION_KIND_INVALID   = 0,
            FABRIC_SERVICE_DESCRIPTION_KIND_STATELESS = 1,
            FABRIC_SERVICE_DESCRIPTION_KIND_STATEFUL  = 2
        };

        enum FABRIC_SERVICE_ENDPOINT_ROLE
        {
            FABRIC_SERVICE_ROLE_INVALID            = 0,
            FABRIC_SERVICE_ROLE_STATELESS          = 1,
            FABRIC_SERVICE_ROLE_STATEFUL_PRIMARY   = 2,
            FABRIC_SERVICE_ROLE_STATEFUL_SECONDARY = 3
        };

        enum FABRIC_SERVICE_KIND
        {
            FABRIC_SERVICE_KIND_INVALID   = 0,
            FABRIC_SERVICE_KIND_STATELESS = 1,
            FABRIC_SERVICE_KIND_STATEFUL  = 2
        };

        enum FABRIC_SERVICE_LOAD_METRIC_WEIGHT
        {
            FABRIC_SERVICE_LOAD_METRIC_WEIGHT_ZERO   = 0,
            FABRIC_SERVICE_LOAD_METRIC_WEIGHT_LOW    = 1,
            FABRIC_SERVICE_LOAD_METRIC_WEIGHT_MEDIUM = 2,
            FABRIC_SERVICE_LOAD_METRIC_WEIGHT_HIGH   = 3
        };

        enum FABRIC_SERVICE_NOTIFICATION_FILTER_FLAGS
        {
            FABRIC_SERVICE_NOTIFICATION_FILTER_FLAGS_NONE         = 0,
            FABRIC_SERVICE_NOTIFICATION_FILTER_FLAGS_NAME_PREFIX  = 1,
            FABRIC_SERVICE_NOTIFICATION_FILTER_FLAGS_PRIMARY_ONLY = 2
        };

        enum FABRIC_SERVICE_PACKAGE_ACTIVATION_MODE
        {
            FABRIC_SERVICE_PACKAGE_ACTIVATION_MODE_SHARED_PROCESS    = 0,
            FABRIC_SERVICE_PACKAGE_ACTIVATION_MODE_EXCLUSIVE_PROCESS = 1
        };

        enum FABRIC_SERVICE_PARTITION_ACCESS_STATUS
        {
            FABRIC_SERVICE_PARTITION_ACCESS_STATUS_INVALID                 = 0,
            FABRIC_SERVICE_PARTITION_ACCESS_STATUS_GRANTED                 = 1,
            FABRIC_SERVICE_PARTITION_ACCESS_STATUS_RECONFIGURATION_PENDING = 2,
            FABRIC_SERVICE_PARTITION_ACCESS_STATUS_NOT_PRIMARY             = 3,
            FABRIC_SERVICE_PARTITION_ACCESS_STATUS_NO_WRITE_QUORUM         = 4
        };

        enum FABRIC_SERVICE_PARTITION_KIND
        {
            FABRIC_SERVICE_PARTITION_KIND_INVALID     = 0,
            FABRIC_SERVICE_PARTITION_KIND_SINGLETON   = 1,
            FABRIC_SERVICE_PARTITION_KIND_INT64_RANGE = 2,
            FABRIC_SERVICE_PARTITION_KIND_NAMED       = 3
        };

        enum FABRIC_SERVICE_REPLICA_KIND
        {
            FABRIC_SERVICE_REPLICA_KIND_INVALID         = 0,
            FABRIC_SERVICE_REPLICA_KIND_KEY_VALUE_STORE = 1
        };

        enum FABRIC_SERVICE_TYPE_REGISTRATION_STATUS
        {
            FABRIC_SERVICE_TYPE_REGISTRATION_STATUS_INVALID        = 0,
            FABRIC_SERVICE_TYPE_REGISTRATION_STATUS_DISABLED       = 1,
            FABRIC_SERVICE_TYPE_REGISTRATION_STATUS_NOT_REGISTERED = 2,
            FABRIC_SERVICE_TYPE_REGISTRATION_STATUS_REGISTERED     = 3
        };

        enum FABRIC_START_NODE_DESCRIPTION_KIND
        {
            FABRIC_START_NODE_DESCRIPTION_KIND_INVALID         = 0,
            FABRIC_START_NODE_DESCRIPTION_KIND_USING_NODE_NAME = 1
        };

        enum FABRIC_STATEFUL_SERVICE_FAILOVER_SETTINGS_FLAGS
        {
            FABRIC_STATEFUL_SERVICE_SETTINGS_NONE                          = 0,
            FABRIC_STATEFUL_SERVICE_SETTINGS_REPLICA_RESTART_WAIT_DURATION = 1,
            FABRIC_STATEFUL_SERVICE_SETTINGS_QUORUM_LOSS_WAIT_DURATION     = 2,
            FABRIC_STATEFUL_SERVICE_SETTINGS_STANDBY_REPLICA_KEEP_DURATION = 4
        };

        enum FABRIC_STATEFUL_SERVICE_UPDATE_DESCRIPTION_FLAGS
        {
            FABRIC_STATEFUL_SERVICE_NONE                          = 0,
            FABRIC_STATEFUL_SERVICE_TARGET_REPLICA_SET_SIZE       = 1,
            FABRIC_STATEFUL_SERVICE_REPLICA_RESTART_WAIT_DURATION = 2,
            FABRIC_STATEFUL_SERVICE_QUORUM_LOSS_WAIT_DURATION     = 4,
            FABRIC_STATEFUL_SERVICE_STANDBY_REPLICA_KEEP_DURATION = 8,
            FABRIC_STATEFUL_SERVICE_MIN_REPLICA_SET_SIZE          = 16,
            FABRIC_STATEFUL_SERVICE_PLACEMENT_CONSTRAINTS         = 32,
            FABRIC_STATEFUL_SERVICE_POLICY_LIST                   = 64,
            FABRIC_STATEFUL_SERVICE_CORRELATIONS                  = 128,
            FABRIC_STATEFUL_SERVICE_METRICS                       = 256,
            FABRIC_STATEFUL_SERVICE_MOVE_COST                     = 512,
            FABRIC_STATEFUL_SERVICE_SCALING_POLICY                = 1024
        };

        enum FABRIC_STATELESS_SERVICE_UPDATE_DESCRIPTION_FLAGS
        {
            FABRIC_STATELESS_SERVICE_NONE                  = 0,
            FABRIC_STATELESS_SERVICE_INSTANCE_COUNT        = 1,
            FABRIC_STATELESS_SERVICE_PLACEMENT_CONSTRAINTS = 2,
            FABRIC_STATELESS_SERVICE_POLICY_LIST           = 4,
            FABRIC_STATELESS_SERVICE_CORRELATIONS          = 8,
            FABRIC_STATELESS_SERVICE_METRICS               = 16,
            FABRIC_STATELESS_SERVICE_MOVE_COST             = 32,
            FABRIC_STATELESS_SERVICE_SCALING_POLICY        = 64
        };

        enum FABRIC_STOP_NODE_DESCRIPTION_KIND
        {
            FABRIC_STOP_NODE_DESCRIPTION_KIND_INVALID         = 0,
            FABRIC_STOP_NODE_DESCRIPTION_KIND_USING_NODE_NAME = 1
        };

        enum FABRIC_STORE_BACKUP_OPTION
        {
            FABRIC_STORE_BACKUP_OPTION_FULL               = 1,
            FABRIC_STORE_BACKUP_OPTION_INCREMENTAL        = 2,
            FABRIC_STORE_BACKUP_OPTION_TRUNCATE_LOGS_ONLY = 3
        };

        enum FABRIC_TEST_COMMAND_PROGRESS_STATE
        {
            FABRIC_TEST_COMMAND_PROGRESS_STATE_INVALID         = 0,
            FABRIC_TEST_COMMAND_PROGRESS_STATE_RUNNING         = 1,
            FABRIC_TEST_COMMAND_PROGRESS_STATE_ROLLING_BACK    = 2,
            FABRIC_TEST_COMMAND_PROGRESS_STATE_COMPLETED       = 3,
            FABRIC_TEST_COMMAND_PROGRESS_STATE_FAULTED         = 4,
            FABRIC_TEST_COMMAND_PROGRESS_STATE_CANCELLED       = 5,
            FABRIC_TEST_COMMAND_PROGRESS_STATE_FORCE_CANCELLED = 6
        };

        enum FABRIC_TEST_COMMAND_STATE_FILTER
        {
            FABRIC_TEST_COMMAND_STATE_FILTER_DEFAULT                = 0,
            FABRIC_TEST_COMMAND_STATE_FILTER_ALL                    = 65535,
            FABRIC_TEST_COMMAND_STATE_FILTER_RUNNING                = 1,
            FABRIC_TEST_COMMAND_STATE_FILTER_ROLLING_BACK           = 2,
            FABRIC_TEST_COMMAND_STATE_FILTER_COMPLETED_SUCCESSFULLY = 8,
            FABRIC_TEST_COMMAND_STATE_FILTER_FAILED                 = 16,
            FABRIC_TEST_COMMAND_STATE_FILTER_CANCELLED              = 32,
            FABRIC_TEST_COMMAND_STATE_FILTER_FORCE_CANCELLED        = 64
        };

        enum FABRIC_TEST_COMMAND_TYPE
        {
            FABRIC_TEST_COMMAND_TYPE_DEFAULT                  = 0,
            FABRIC_TEST_COMMAND_TYPE_INVOKE_DATA_LOSS         = 1,
            FABRIC_TEST_COMMAND_TYPE_INVOKE_QUORUM_LOSS       = 2,
            FABRIC_TEST_COMMAND_TYPE_INVOKE_RESTART_PARTITION = 4,
            FABRIC_TEST_COMMAND_TYPE_START_NODE_TRANSITION    = 8
        };

        enum FABRIC_TEST_COMMAND_TYPE_FILTER
        {
            FABRIC_TEST_COMMAND_TYPE_FILTER_DEFAULT               = 0,
            FABRIC_TEST_COMMAND_TYPE_FILTER_ALL                   = 65535,
            FABRIC_TEST_COMMAND_TYPE_FILTER_PARTITION_DATA_LOSS   = 1,
            FABRIC_TEST_COMMAND_TYPE_FILTER_PARTITION_QUORUM_LOSS = 2,
            FABRIC_TEST_COMMAND_TYPE_FILTER_PARTITION_RESTART     = 4
        };

        enum FABRIC_TRANSACTION_ISOLATION_LEVEL
        {
            FABRIC_TRANSACTION_ISOLATION_LEVEL_DEFAULT          = 0,
            FABRIC_TRANSACTION_ISOLATION_LEVEL_READ_UNCOMMITTED = 1,
            FABRIC_TRANSACTION_ISOLATION_LEVEL_READ_COMMITTED   = 2,
            FABRIC_TRANSACTION_ISOLATION_LEVEL_REPEATABLE_READ  = 3,
            FABRIC_TRANSACTION_ISOLATION_LEVEL_SNAPSHOT         = 4,
            FABRIC_TRANSACTION_ISOLATION_LEVEL_SERIALIZABLE     = 5
        };

        enum FABRIC_UPGRADE_DOMAIN_STATE
        {
            FABRIC_UPGRADE_DOMAIN_STATE_INVALID     = 0,
            FABRIC_UPGRADE_DOMAIN_STATE_PENDING     = 1,
            FABRIC_UPGRADE_DOMAIN_STATE_IN_PROGRESS = 2,
            FABRIC_UPGRADE_DOMAIN_STATE_COMPLETED   = 3
        };

        enum FABRIC_UPGRADE_FAILURE_REASON
        {
            FABRIC_UPGRADE_FAILURE_REASON_NONE                    = 0,
            FABRIC_UPGRADE_FAILURE_REASON_INTERRUPTED             = 1,
            FABRIC_UPGRADE_FAILURE_REASON_HEALTH_CHECK            = 2,
            FABRIC_UPGRADE_FAILURE_REASON_UPGRADE_DOMAIN_TIMEOUT  = 3,
            FABRIC_UPGRADE_FAILURE_REASON_OVERALL_UPGRADE_TIMEOUT = 4,
            FABRIC_UPGRADE_FAILURE_REASON_PROCESSING_FAILURE      = 5
        };

        enum FABRIC_UPGRADE_KIND
        {
            FABRIC_UPGRADE_KIND_INVALID = 0,
            FABRIC_UPGRADE_KIND_ROLLING = 1
        };

        enum FABRIC_UPGRADE_SAFETY_CHECK_KIND
        {
            FABRIC_UPGRADE_SAFETY_CHECK_KIND_INVALID                                  = 0,
            FABRIC_UPGRADE_SEED_NODE_SAFETY_CHECK_KIND_ENSURE_QUORUM                  = 1,
            FABRIC_UPGRADE_PARTITION_SAFETY_CHECK_KIND_ENSURE_QUORUM                  = 2,
            FABRIC_UPGRADE_PARTITION_SAFETY_CHECK_KIND_WAIT_FOR_PRIMARY_PLACEMENT     = 3,
            FABRIC_UPGRADE_PARTITION_SAFETY_CHECK_KIND_WAIT_FOR_PRIMARY_SWAP          = 4,
            FABRIC_UPGRADE_PARTITION_SAFETY_CHECK_KIND_WAIT_FOR_RECONFIGURATION       = 5,
            FABRIC_UPGRADE_PARTITION_SAFETY_CHECK_KIND_WAIT_FOR_INBUILD_REPLICA       = 6,
            FABRIC_UPGRADE_PARTITION_SAFETY_CHECK_KIND_ENSURE_AVAILABILITY            = 7,
            FABRIC_UPGRADE_PARTITION_SAFETY_CHECK_KIND_WAIT_FOR_RESOURCE_AVAILABILITY = 8
        };

        enum FABRIC_UPGRADE_STATE
        {
            FABRIC_UPGRADE_STATE_INVALID                     = 0,
            FABRIC_UPGRADE_STATE_ROLLING_BACK_IN_PROGRESS    = 1,
            FABRIC_UPGRADE_STATE_ROLLING_BACK_COMPLETED      = 2,
            FABRIC_UPGRADE_STATE_ROLLING_FORWARD_PENDING     = 3,
            FABRIC_UPGRADE_STATE_ROLLING_FORWARD_IN_PROGRESS = 4,
            FABRIC_UPGRADE_STATE_ROLLING_FORWARD_COMPLETED   = 5,
            FABRIC_UPGRADE_STATE_FAILED                      = 6,
            FABRIC_UPGRADE_STATE_ROLLING_BACK_PENDING        = 7
        };

        enum FABRIC_X509_FIND_TYPE
        {
            FABRIC_X509_FIND_TYPE_FINDBYTHUMBPRINT  = 0,
            FABRIC_X509_FIND_TYPE_FINDBYSUBJECTNAME = 1,
            FABRIC_X509_FIND_TYPE_FINDBYEXTENSION   = 12
        };

        enum FABRIC_X509_STORE_LOCATION
        {
            FABRIC_X509_STORE_LOCATION_INVALID      = 0,
            FABRIC_X509_STORE_LOCATION_CURRENTUSER  = 1,
            FABRIC_X509_STORE_LOCATION_LOCALMACHINE = 2
        };

        struct FABRIC_AAD_CLAIMS_RETRIEVAL_METADATA
        {
            Windows.Win32.Foundation.PWSTR Authority;
            Windows.Win32.Foundation.PWSTR TenantId;
            Windows.Win32.Foundation.PWSTR ClusterApplication;
            Windows.Win32.Foundation.PWSTR ClientApplication;
            Windows.Win32.Foundation.PWSTR ClientRedirect;
            void* Reserved;
        };

        struct FABRIC_AAD_CLAIMS_RETRIEVAL_METADATA_EX1
        {
            Windows.Win32.Foundation.PWSTR LoginEndpoint;
            void* Reserved;
        };

        struct FABRIC_APPLICATIONS_HEALTH_EVALUATION
        {
            Windows.Win32.Foundation.PWSTR Description;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            UINT32 TotalCount;
            BYTE MaxPercentUnhealthyApplications;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_CAPACITY_DESCRIPTION
        {
            UINT32 MaximumNodes;
            UINT32 MinimumNodes;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_METRIC_LIST* Metrics;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_DESCRIPTION
        {
            UINT16* ApplicationName;
            Windows.Win32.Foundation.PWSTR ApplicationTypeName;
            Windows.Win32.Foundation.PWSTR ApplicationTypeVersion;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_PARAMETER_LIST* ApplicationParameters;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_DESCRIPTION_EX1
        {
            Microsoft.ServiceFabric.FABRIC_APPLICATION_CAPACITY_DESCRIPTION* ApplicationCapacity;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_HEALTH
        {
            UINT16* ApplicationName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVENT_LIST* HealthEvents;
            Microsoft.ServiceFabric.FABRIC_DEPLOYED_APPLICATION_HEALTH_STATE_LIST* DeployedApplicationHealthStates;
            Microsoft.ServiceFabric.FABRIC_SERVICE_HEALTH_STATE_LIST* ServiceHealthStates;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_HEALTH_EVALUATION
        {
            Windows.Win32.Foundation.PWSTR Description;
            UINT16* ApplicationName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_HEALTH_EX1
        {
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_HEALTH_EX2
        {
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATISTICS* HealthStatistics;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_HEALTH_POLICY
        {
            Windows.Win32.Foundation.BOOLEAN ConsiderWarningAsError;
            BYTE MaxPercentUnhealthyDeployedApplications;
            Microsoft.ServiceFabric.FABRIC_SERVICE_TYPE_HEALTH_POLICY* DefaultServiceTypeHealthPolicy;
            Microsoft.ServiceFabric.FABRIC_SERVICE_TYPE_HEALTH_POLICY_MAP* ServiceTypeHealthPolicyMap;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_HEALTH_POLICY_MAP
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_HEALTH_POLICY_MAP_ITEM* Items;
        };

        struct FABRIC_APPLICATION_HEALTH_POLICY_MAP_ITEM
        {
            UINT16* ApplicationName;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_HEALTH_POLICY* HealthPolicy;
        };

        struct FABRIC_APPLICATION_HEALTH_QUERY_DESCRIPTION
        {
            UINT16* ApplicationName;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_HEALTH_POLICY* HealthPolicy;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVENTS_FILTER* EventsFilter;
            Microsoft.ServiceFabric.FABRIC_SERVICE_HEALTH_STATES_FILTER* ServicesFilter;
            Microsoft.ServiceFabric.FABRIC_DEPLOYED_APPLICATION_HEALTH_STATES_FILTER* DeployedApplicationsFilter;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_HEALTH_QUERY_DESCRIPTION_EX1
        {
            Microsoft.ServiceFabric.FABRIC_APPLICATION_HEALTH_STATISTICS_FILTER* HealthStatisticsFilter;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_HEALTH_REPORT
        {
            UINT16* ApplicationName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_INFORMATION* HealthInformation;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_HEALTH_STATE
        {
            UINT16* ApplicationName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_HEALTH_STATES_FILTER
        {
            UINT32 HealthStateFilter;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_HEALTH_STATE_CHUNK
        {
            UINT16* ApplicationName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE HealthState;
            Microsoft.ServiceFabric.FABRIC_SERVICE_HEALTH_STATE_CHUNK_LIST* ServiceHealthStateChunks;
            Microsoft.ServiceFabric.FABRIC_DEPLOYED_APPLICATION_HEALTH_STATE_CHUNK_LIST* DeployedApplicationHealthStateChunks;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_HEALTH_STATE_CHUNK_EX1
        {
            UINT16* ApplicationTypeName;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_HEALTH_STATE_CHUNK_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_HEALTH_STATE_CHUNK* Items;
            UINT32 TotalCount;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_HEALTH_STATE_FILTER
        {
            UINT32 HealthStateFilter;
            UINT16* ApplicationNameFilter;
            Microsoft.ServiceFabric.FABRIC_SERVICE_HEALTH_STATE_FILTER_LIST* ServiceFilters;
            Microsoft.ServiceFabric.FABRIC_DEPLOYED_APPLICATION_HEALTH_STATE_FILTER_LIST* DeployedApplicationFilters;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_HEALTH_STATE_FILTER_EX1
        {
            Windows.Win32.Foundation.PWSTR ApplicationTypeNameFilter;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_HEALTH_STATE_FILTER_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_HEALTH_STATE_FILTER* Items;
        };

        struct FABRIC_APPLICATION_HEALTH_STATE_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_HEALTH_STATE* Items;
        };

        struct FABRIC_APPLICATION_HEALTH_STATISTICS_FILTER
        {
            Windows.Win32.Foundation.BOOLEAN ExcludeHealthStatistics;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_LOAD_INFORMATION
        {
            Windows.Win32.Foundation.PWSTR Name;
            UINT32 MinimumNodes;
            UINT32 MaximumNodes;
            UINT32 NodeCount;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_LOAD_METRIC_INFORMATION_LIST* ApplicationLoadMetricInformation;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_LOAD_INFORMATION_QUERY_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR ApplicationName;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_LOAD_METRIC_INFORMATION
        {
            Windows.Win32.Foundation.PWSTR Name;
            INT64 ReservationCapacity;
            INT64 ApplicationCapacity;
            INT64 ApplicationLoad;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_LOAD_METRIC_INFORMATION_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_LOAD_METRIC_INFORMATION* LoadMetrics;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_METRIC_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR Name;
            UINT32 NodeReservationCapacity;
            UINT32 MaximumNodeCapacity;
            UINT32 TotalApplicationCapacity;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_METRIC_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_METRIC_DESCRIPTION* Capacities;
        };

        struct FABRIC_APPLICATION_NAME_QUERY_DESCRIPTION
        {
            UINT16* ServiceName;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_NAME_QUERY_RESULT
        {
            UINT16* ApplicationName;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_NETWORK_QUERY_DESCRIPTION
        {
            UINT16* ApplicationName;
            Microsoft.ServiceFabric.FABRIC_QUERY_PAGING_DESCRIPTION* PagingDescription;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_NETWORK_QUERY_RESULT_ITEM
        {
            Windows.Win32.Foundation.PWSTR NetworkName;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_NETWORK_QUERY_RESULT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_NETWORK_QUERY_RESULT_ITEM* Items;
        };

        struct FABRIC_APPLICATION_PARAMETER
        {
            Windows.Win32.Foundation.PWSTR Name;
            Windows.Win32.Foundation.PWSTR Value;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_PARAMETER_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_PARAMETER* Items;
        };

        struct FABRIC_APPLICATION_PRINCIPALS_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_SECURITY_USER_DESCRIPTION_LIST* Users;
            Microsoft.ServiceFabric.FABRIC_SECURITY_GROUP_DESCRIPTION_LIST* Groups;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_QUERY_DESCRIPTION
        {
            UINT16* ApplicationNameFilter;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_QUERY_DESCRIPTION_EX1
        {
            Windows.Win32.Foundation.PWSTR ContinuationToken;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_QUERY_DESCRIPTION_EX2
        {
            Windows.Win32.Foundation.PWSTR ApplicationTypeNameFilter;
            Windows.Win32.Foundation.BOOLEAN ExcludeApplicationParameters;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_QUERY_DESCRIPTION_EX3
        {
            UINT32 ApplicationDefinitionKindFilter;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_QUERY_DESCRIPTION_EX4
        {
            INT32 MaxResults;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_QUERY_RESULT_ITEM
        {
            UINT16* ApplicationName;
            Windows.Win32.Foundation.PWSTR ApplicationTypeName;
            Windows.Win32.Foundation.PWSTR ApplicationTypeVersion;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_STATUS Status;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE HealthState;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_PARAMETER_LIST* ApplicationParameters;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_QUERY_RESULT_ITEM_EX1
        {
            Windows.Win32.Foundation.PWSTR UpgradeTypeVersion;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_PARAMETER_LIST* UpgradeParameters;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_QUERY_RESULT_ITEM_EX2
        {
            Microsoft.ServiceFabric.FABRIC_APPLICATION_DEFINITION_KIND ApplicationDefinitionKind;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_QUERY_RESULT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_QUERY_RESULT_ITEM* Items;
        };

        struct FABRIC_APPLICATION_TYPE_APPLICATIONS_HEALTH_EVALUATION
        {
            Windows.Win32.Foundation.PWSTR Description;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Windows.Win32.Foundation.PWSTR ApplicationTypeName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            UINT32 TotalCount;
            BYTE MaxPercentUnhealthyApplications;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_TYPE_HEALTH_POLICY_MAP
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_TYPE_HEALTH_POLICY_MAP_ITEM* Items;
        };

        struct FABRIC_APPLICATION_TYPE_HEALTH_POLICY_MAP_ITEM
        {
            Windows.Win32.Foundation.PWSTR ApplicationTypeName;
            BYTE MaxPercentUnhealthyApplications;
        };

        struct FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR ApplicationTypeNameFilter;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_TYPE_QUERY_RESULT_ITEM
        {
            Windows.Win32.Foundation.PWSTR ApplicationTypeName;
            Windows.Win32.Foundation.PWSTR ApplicationTypeVersion;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_PARAMETER_LIST* DefaultParameters;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_TYPE_QUERY_RESULT_ITEM_EX1
        {
            Microsoft.ServiceFabric.FABRIC_APPLICATION_TYPE_STATUS Status;
            Windows.Win32.Foundation.PWSTR StatusDetails;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_TYPE_QUERY_RESULT_ITEM_EX2
        {
            Microsoft.ServiceFabric.FABRIC_APPLICATION_TYPE_DEFINITION_KIND ApplicationTypeDefinitionKind;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_TYPE_QUERY_RESULT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_TYPE_QUERY_RESULT_ITEM* Items;
        };

        struct FABRIC_APPLICATION_UPDATE_DESCRIPTION
        {
            UINT32 Flags;
            UINT16* ApplicationName;
            Windows.Win32.Foundation.BOOLEAN RemoveApplicationCapacity;
            UINT32 MaximumNodes;
            UINT32 MinimumNodes;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_METRIC_LIST* Metrics;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_UPGRADE_DESCRIPTION
        {
            UINT16* ApplicationName;
            Windows.Win32.Foundation.PWSTR TargetApplicationTypeVersion;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_PARAMETER_LIST* ApplicationParameters;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_UPGRADE_KIND UpgradeKind;
            void* UpgradePolicyDescription;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_UPGRADE_PROGRESS
        {
            Microsoft.ServiceFabric.FABRIC_APPLICATION_UPGRADE_DESCRIPTION* UpgradeDescription;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_UPGRADE_STATE UpgradeState;
            Microsoft.ServiceFabric.FABRIC_ROLLING_UPGRADE_MODE UpgradeMode;
            Windows.Win32.Foundation.PWSTR NextUpgradeDomain;
            Microsoft.ServiceFabric.FABRIC_UPGRADE_DOMAIN_STATUS_DESCRIPTION_LIST* UpgradeDomains;
            UINT32 UpgradeDurationInSeconds;
            UINT32 CurrentUpgradeDomainDurationInSeconds;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            Microsoft.ServiceFabric.FABRIC_UPGRADE_DOMAIN_PROGRESS* CurrentUpgradeDomainProgress;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_UPGRADE_PROGRESS_EX1
        {
            Windows.Win32.Foundation.FILETIME StartTimestampUtc;
            Windows.Win32.Foundation.FILETIME FailureTimestampUtc;
            Microsoft.ServiceFabric.FABRIC_UPGRADE_FAILURE_REASON FailureReason;
            Microsoft.ServiceFabric.FABRIC_UPGRADE_DOMAIN_PROGRESS* UpgradeDomainProgressAtFailure;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_UPGRADE_PROGRESS_EX2
        {
            Windows.Win32.Foundation.PWSTR UpgradeStatusDetails;
            void* Reserved;
        };

        struct FABRIC_APPLICATION_UPGRADE_UPDATE_DESCRIPTION
        {
            UINT16* ApplicationName;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_UPGRADE_KIND UpgradeKind;
            UINT32 UpdateFlags;
            void* UpgradePolicyDescription;
            void* Reserved;
        };

        struct FABRIC_CANCEL_TEST_COMMAND_DESCRIPTION
        {
            GUID OperationId;
            Windows.Win32.Foundation.BOOLEAN Force;
            void* Reserved;
        };

        struct FABRIC_CHAOS_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_CHAOS_PARAMETERS* ChaosParameters;
            Microsoft.ServiceFabric.FABRIC_CHAOS_STATUS Status;
            Microsoft.ServiceFabric.FABRIC_CHAOS_SCHEDULE_STATUS ScheduleStatus;
            void* Reserved;
        };

        struct FABRIC_CHAOS_EVENT
        {
            Microsoft.ServiceFabric.FABRIC_CHAOS_EVENT_KIND Kind;
            void* Value;
        };

        struct FABRIC_CHAOS_EVENTS_SEGMENT
        {
            Windows.Win32.Foundation.PWSTR ContinuationToken;
            Microsoft.ServiceFabric.FABRIC_CHAOS_EVENT_LIST* History;
            void* Reserved;
        };

        struct FABRIC_CHAOS_EVENTS_SEGMENT_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_CHAOS_EVENTS_SEGMENT_FILTER* Filter;
            Microsoft.ServiceFabric.FABRIC_QUERY_PAGING_DESCRIPTION* PagingDescription;
            void* Reserved;
        };

        struct FABRIC_CHAOS_EVENTS_SEGMENT_FILTER
        {
            Windows.Win32.Foundation.FILETIME StartTimeUtc;
            Windows.Win32.Foundation.FILETIME EndTimeUtc;
            void* Reserved;
        };

        struct FABRIC_CHAOS_EVENT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_CHAOS_EVENT* Items;
        };

        struct FABRIC_CHAOS_PARAMETERS
        {
            UINT32 MaxClusterStabilizationTimeoutInSeconds;
            UINT32 MaxConcurrentFaults;
            Windows.Win32.Foundation.BOOLEAN EnableMoveReplicaFaults;
            UINT64 TimeToRunInSeconds;
            UINT32 WaitTimeBetweenIterationsInSeconds;
            UINT32 WaitTimeBetweenFaultsInSeconds;
            Microsoft.ServiceFabric.FABRIC_EVENT_CONTEXT_MAP* Context;
            void* Reserved;
        };

        struct FABRIC_CHAOS_PARAMETERS_EX1
        {
            Microsoft.ServiceFabric.FABRIC_CLUSTER_HEALTH_POLICY* ClusterHealthPolicy;
            void* Reserved;
        };

        struct FABRIC_CHAOS_PARAMETERS_EX2
        {
            Microsoft.ServiceFabric.FABRIC_CHAOS_TARGET_FILTER* ChaosTargetFilter;
            void* Reserved;
        };

        struct FABRIC_CHAOS_REPORT
        {
            Microsoft.ServiceFabric.FABRIC_CHAOS_PARAMETERS* ChaosParameters;
            Microsoft.ServiceFabric.FABRIC_CHAOS_STATUS Status;
            Windows.Win32.Foundation.PWSTR ContinuationToken;
            Microsoft.ServiceFabric.FABRIC_CHAOS_EVENT_LIST* History;
            void* Reserved;
        };

        struct FABRIC_CHAOS_REPORT_FILTER
        {
            Windows.Win32.Foundation.FILETIME StartTimeUtc;
            Windows.Win32.Foundation.FILETIME EndTimeUtc;
            void* Reserved;
        };

        struct FABRIC_CHAOS_SCHEDULE
        {
            Windows.Win32.Foundation.FILETIME StartDate;
            Windows.Win32.Foundation.FILETIME ExpiryDate;
            Microsoft.ServiceFabric.FABRIC_CHAOS_SCHEDULE_CHAOS_PARAMETERS_MAP* ChaosParametersMap;
            Microsoft.ServiceFabric.FABRIC_CHAOS_SCHEDULE_JOB_LIST* Jobs;
            void* Reserved;
        };

        struct FABRIC_CHAOS_SCHEDULE_CHAOS_PARAMETERS_MAP
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_CHAOS_SCHEDULE_CHAOS_PARAMETERS_MAP_ITEM* Items;
        };

        struct FABRIC_CHAOS_SCHEDULE_CHAOS_PARAMETERS_MAP_ITEM
        {
            Windows.Win32.Foundation.PWSTR Name;
            Microsoft.ServiceFabric.FABRIC_CHAOS_PARAMETERS* Parameters;
        };

        struct FABRIC_CHAOS_SCHEDULE_DESCRIPTION
        {
            UINT32 Version;
            Microsoft.ServiceFabric.FABRIC_CHAOS_SCHEDULE* Schedule;
            void* Reserved;
        };

        struct FABRIC_CHAOS_SCHEDULE_JOB
        {
            Windows.Win32.Foundation.PWSTR ChaosParameters;
            Microsoft.ServiceFabric.FABRIC_CHAOS_SCHEDULE_JOB_ACTIVE_DAYS* Days;
            Microsoft.ServiceFabric.FABRIC_CHAOS_SCHEDULE_TIME_RANGE_UTC_LIST* Times;
            void* Reserved;
        };

        struct FABRIC_CHAOS_SCHEDULE_JOB_ACTIVE_DAYS
        {
            Windows.Win32.Foundation.BOOLEAN Sunday;
            Windows.Win32.Foundation.BOOLEAN Monday;
            Windows.Win32.Foundation.BOOLEAN Tuesday;
            Windows.Win32.Foundation.BOOLEAN Wednesday;
            Windows.Win32.Foundation.BOOLEAN Thursday;
            Windows.Win32.Foundation.BOOLEAN Friday;
            Windows.Win32.Foundation.BOOLEAN Saturday;
            void* Reserved;
        };

        struct FABRIC_CHAOS_SCHEDULE_JOB_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_CHAOS_SCHEDULE_JOB* Items;
        };

        struct FABRIC_CHAOS_SCHEDULE_TIME_RANGE_UTC
        {
            Microsoft.ServiceFabric.FABRIC_CHAOS_SCHEDULE_TIME_UTC* StartTime;
            Microsoft.ServiceFabric.FABRIC_CHAOS_SCHEDULE_TIME_UTC* EndTime;
            void* Reserved;
        };

        struct FABRIC_CHAOS_SCHEDULE_TIME_RANGE_UTC_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_CHAOS_SCHEDULE_TIME_RANGE_UTC* Items;
        };

        struct FABRIC_CHAOS_SCHEDULE_TIME_UTC
        {
            UINT32 Hour;
            UINT32 Minute;
            void* Reserved;
        };

        struct FABRIC_CHAOS_SERVICE_SCHEDULE_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_CHAOS_SCHEDULE_DESCRIPTION* ChaosScheduleDescription;
            void* Reserved;
        };

        struct FABRIC_CHAOS_TARGET_FILTER
        {
            Microsoft.ServiceFabric.FABRIC_STRING_LIST* NodeTypeInclusionList;
            Microsoft.ServiceFabric.FABRIC_STRING_LIST* ApplicationInclusionList;
            void* Reserved;
        };

        struct FABRIC_CHECK_EXISTS_PROPERTY_OPERATION
        {
            Windows.Win32.Foundation.PWSTR PropertyName;
            Windows.Win32.Foundation.BOOLEAN ExistenceCheck;
            void* Reserved;
        };

        struct FABRIC_CHECK_SEQUENCE_PROPERTY_OPERATION
        {
            Windows.Win32.Foundation.PWSTR PropertyName;
            INT64 SequenceNumber;
            void* Reserved;
        };

        struct FABRIC_CHECK_VALUE_PROPERTY_OPERATION
        {
            Windows.Win32.Foundation.PWSTR PropertyName;
            Microsoft.ServiceFabric.FABRIC_PROPERTY_TYPE_ID PropertyTypeId;
            void* PropertyValue;
            void* Reserved;
        };

        struct FABRIC_CLAIMS_CREDENTIALS
        {
            UINT32 ServerCommonNameCount;
            Windows.Win32.Foundation.PWSTR* ServerCommonNames;
            UINT32 IssuerThumbprintCount;
            Windows.Win32.Foundation.PWSTR* IssuerThumbprints;
            Windows.Win32.Foundation.PWSTR LocalClaims;
            Microsoft.ServiceFabric.FABRIC_PROTECTION_LEVEL ProtectionLevel;
            void* Reserved;
        };

        struct FABRIC_CLAIMS_CREDENTIALS_EX1
        {
            UINT32 ServerThumbprintCount;
            Windows.Win32.Foundation.PWSTR* ServerThumbprints;
            void* Reserved;
        };

        struct FABRIC_CLAIMS_RETRIEVAL_METADATA
        {
            Microsoft.ServiceFabric.FABRIC_CLAIMS_RETRIEVAL_METADATA_KIND Kind;
            void* Value;
        };

        struct FABRIC_CLIENT_SETTINGS
        {
            UINT32 PartitionLocationCacheLimit;
            UINT32 ServiceChangePollIntervalInSeconds;
            UINT32 ConnectionInitializationTimeoutInSeconds;
            UINT32 KeepAliveIntervalInSeconds;
            UINT32 HealthOperationTimeoutInSeconds;
            UINT32 HealthReportSendIntervalInSeconds;
            void* Reserved;
        };

        struct FABRIC_CLIENT_SETTINGS_EX1
        {
            Windows.Win32.Foundation.PWSTR ClientFriendlyName;
            UINT32 PartitionLocationCacheBucketCount;
            UINT32 HealthReportRetrySendIntervalInSeconds;
            void* Reserved;
        };

        struct FABRIC_CLIENT_SETTINGS_EX2
        {
            UINT32 NotificationGatewayConnectionTimeoutInSeconds;
            UINT32 NotificationCacheUpdateTimeoutInSeconds;
            void* Reserved;
        };

        struct FABRIC_CLIENT_SETTINGS_EX3
        {
            UINT32 AuthTokenBufferSize;
            void* Reserved;
        };

        struct FABRIC_CLIENT_SETTINGS_EX4
        {
            UINT32 ConnectionIdleTimeoutInSeconds;
            void* Reserved;
        };

        struct FABRIC_CLUSTER_HEALTH
        {
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            void* Reserved;
        };

        struct FABRIC_CLUSTER_HEALTH_CHUNK
        {
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE HealthState;
            Microsoft.ServiceFabric.FABRIC_NODE_HEALTH_STATE_CHUNK_LIST* NodeHealthStateChunks;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_HEALTH_STATE_CHUNK_LIST* ApplicationHealthStateChunks;
            void* Reserved;
        };

        struct FABRIC_CLUSTER_HEALTH_CHUNK_QUERY_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_CLUSTER_HEALTH_POLICY* ClusterHealthPolicy;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_HEALTH_POLICY_MAP* ApplicationHealthPolicyMap;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_HEALTH_STATE_FILTER_LIST* ApplicationFilters;
            Microsoft.ServiceFabric.FABRIC_NODE_HEALTH_STATE_FILTER_LIST* NodeFilters;
            void* Reserved;
        };

        struct FABRIC_CLUSTER_HEALTH_EX1
        {
            Microsoft.ServiceFabric.FABRIC_NODE_HEALTH_STATE_LIST* NodeHealthStates;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_HEALTH_STATE_LIST* ApplicationHealthStates;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVENT_LIST* HealthEvents;
            void* Reserved;
        };

        struct FABRIC_CLUSTER_HEALTH_EX2
        {
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            void* Reserved;
        };

        struct FABRIC_CLUSTER_HEALTH_EX3
        {
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATISTICS* HealthStatistics;
            void* Reserved;
        };

        struct FABRIC_CLUSTER_HEALTH_POLICY
        {
            Windows.Win32.Foundation.BOOLEAN ConsiderWarningAsError;
            BYTE MaxPercentUnhealthyNodes;
            BYTE MaxPercentUnhealthyApplications;
            void* Reserved;
        };

        struct FABRIC_CLUSTER_HEALTH_POLICY_EX1
        {
            Microsoft.ServiceFabric.FABRIC_APPLICATION_TYPE_HEALTH_POLICY_MAP* ApplicationTypeHealthPolicyMap;
            void* Reserved;
        };

        struct FABRIC_CLUSTER_HEALTH_QUERY_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_CLUSTER_HEALTH_POLICY* HealthPolicy;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_HEALTH_POLICY_MAP* ApplicationHealthPolicyMap;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVENTS_FILTER* EventsFilter;
            Microsoft.ServiceFabric.FABRIC_NODE_HEALTH_STATES_FILTER* NodesFilter;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_HEALTH_STATES_FILTER* ApplicationsFilter;
            void* Reserved;
        };

        struct FABRIC_CLUSTER_HEALTH_QUERY_DESCRIPTION_EX1
        {
            Microsoft.ServiceFabric.FABRIC_CLUSTER_HEALTH_STATISTICS_FILTER* HealthStatisticsFilter;
            void* Reserved;
        };

        struct FABRIC_CLUSTER_HEALTH_REPORT
        {
            Microsoft.ServiceFabric.FABRIC_HEALTH_INFORMATION* HealthInformation;
            void* Reserved;
        };

        struct FABRIC_CLUSTER_HEALTH_STATISTICS_FILTER
        {
            Windows.Win32.Foundation.BOOLEAN ExcludeHealthStatistics;
            Windows.Win32.Foundation.BOOLEAN IncludeSystemApplicationHealthStatistics;
            void* Reserved;
        };

        struct FABRIC_CLUSTER_LOAD_INFORMATION
        {
            Windows.Win32.Foundation.FILETIME LastBalancingStartTimeUtc;
            Windows.Win32.Foundation.FILETIME LastBalancingEndTimeUtc;
            Microsoft.ServiceFabric.FABRIC_LOAD_METRIC_INFORMATION_LIST* LoadMetricInformation;
            void* Reserved;
        };

        struct FABRIC_CLUSTER_MANIFEST_QUERY_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR ClusterManifestVersion;
            void* Reserved;
        };

        struct FABRIC_CLUSTER_UPGRADE_HEALTH_POLICY
        {
            BYTE MaxPercentDeltaUnhealthyNodes;
            BYTE MaxPercentUpgradeDomainDeltaUnhealthyNodes;
            void* Reserved;
        };

        struct FABRIC_CODE_PACKAGE_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR Name;
            Windows.Win32.Foundation.PWSTR Version;
            Windows.Win32.Foundation.PWSTR ServiceManifestName;
            Windows.Win32.Foundation.PWSTR ServiceManifestVersion;
            Windows.Win32.Foundation.BOOLEAN IsShared;
            Microsoft.ServiceFabric.FABRIC_EXEHOST_ENTRY_POINT_DESCRIPTION* SetupEntryPoint;
            Microsoft.ServiceFabric.FABRIC_CODE_PACKAGE_ENTRY_POINT_DESCRIPTION* EntryPoint;
            void* Reserved;
        };

        struct FABRIC_CODE_PACKAGE_DESCRIPTION_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_CODE_PACKAGE_DESCRIPTION* Items;
        };

        struct FABRIC_CODE_PACKAGE_ENTRY_POINT
        {
            Windows.Win32.Foundation.PWSTR EntryPointLocation;
            INT64 ProcessId;
            Windows.Win32.Foundation.PWSTR RunAsUserName;
            Microsoft.ServiceFabric.FABRIC_ENTRY_POINT_STATUS EntryPointStatus;
            Windows.Win32.Foundation.FILETIME NextActivationUtc;
            Microsoft.ServiceFabric.FABRIC_CODE_PACKAGE_ENTRY_POINT_STATISTICS* Statistics;
            void* Reserved;
        };

        struct FABRIC_CODE_PACKAGE_ENTRY_POINT_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_CODE_PACKAGE_ENTRY_POINT_KIND Kind;
            void* Value;
        };

        struct FABRIC_CODE_PACKAGE_ENTRY_POINT_EX1
        {
            INT64 CodePackageInstanceId;
            void* Reserved;
        };

        struct FABRIC_CODE_PACKAGE_ENTRY_POINT_STATISTICS
        {
            UINT32 LastExitCode;
            Windows.Win32.Foundation.FILETIME LastActivationUtc;
            Windows.Win32.Foundation.FILETIME LastExitUtc;
            Windows.Win32.Foundation.FILETIME LastSuccessfulActivationUtc;
            Windows.Win32.Foundation.FILETIME LastSuccessfulExitUtc;
            UINT32 ActivationCount;
            UINT32 ActivationFailureCount;
            UINT32 ContinuousActivationFailureCount;
            UINT32 ExitCount;
            UINT32 ExitFailureCount;
            UINT32 ContinuousExitFailureCount;
            void* Reserved;
        };

        struct FABRIC_CODE_PACKAGE_EVENT_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR CodePackageName;
            Windows.Win32.Foundation.BOOL IsSetupEntryPoint;
            Windows.Win32.Foundation.BOOL IsContainerHost;
            Microsoft.ServiceFabric.FABRIC_CODE_PACKAGE_EVENT_TYPE EventType;
            INT64 TimeStampInTicks;
            INT64 SequenceNumber;
            Microsoft.ServiceFabric.FABRIC_STRING_MAP* Properties;
            void* Reserved;
        };

        struct FABRIC_CONFIGURATION_PACKAGE_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR Name;
            Windows.Win32.Foundation.PWSTR Version;
            Windows.Win32.Foundation.PWSTR ServiceManifestName;
            Windows.Win32.Foundation.PWSTR ServiceManifestVersion;
            void* Reserved;
        };

        struct FABRIC_CONFIGURATION_PACKAGE_DESCRIPTION_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_CONFIGURATION_PACKAGE_DESCRIPTION* Items;
        };

        struct FABRIC_CONFIGURATION_PARAMETER
        {
            Windows.Win32.Foundation.PWSTR Name;
            Windows.Win32.Foundation.PWSTR Value;
            Windows.Win32.Foundation.BOOLEAN MustOverride;
            Windows.Win32.Foundation.BOOLEAN IsEncrypted;
            void* Reserved;
        };

        struct FABRIC_CONFIGURATION_PARAMETER_EX1
        {
            Windows.Win32.Foundation.PWSTR Type;
            void* Reserved;
        };

        struct FABRIC_CONFIGURATION_PARAMETER_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_CONFIGURATION_PARAMETER* Items;
        };

        struct FABRIC_CONFIGURATION_SECTION
        {
            Windows.Win32.Foundation.PWSTR Name;
            Microsoft.ServiceFabric.FABRIC_CONFIGURATION_PARAMETER_LIST* Parameters;
            void* Reserved;
        };

        struct FABRIC_CONFIGURATION_SECTION_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_CONFIGURATION_SECTION* Items;
        };

        struct FABRIC_CONFIGURATION_SETTINGS
        {
            Microsoft.ServiceFabric.FABRIC_CONFIGURATION_SECTION_LIST* Sections;
            void* Reserved;
        };

        struct FABRIC_CONTAINERHOST_ENTRY_POINT_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR ImageName;
            Windows.Win32.Foundation.PWSTR Commands;
            Windows.Win32.Foundation.PWSTR EntryPoint;
            void* Reserved;
        };

        struct FABRIC_DATA_PACKAGE_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR Name;
            Windows.Win32.Foundation.PWSTR Version;
            Windows.Win32.Foundation.PWSTR ServiceManifestName;
            Windows.Win32.Foundation.PWSTR ServiceManifestVersion;
            void* Reserved;
        };

        struct FABRIC_DATA_PACKAGE_DESCRIPTION_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_DATA_PACKAGE_DESCRIPTION* Items;
        };

        struct FABRIC_DELETE_APPLICATION_DESCRIPTION
        {
            UINT16* ApplicationName;
            Windows.Win32.Foundation.BOOLEAN ForceDelete;
            void* Reserved;
        };

        struct FABRIC_DELETE_NETWORK_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR NetworkName;
            void* Reserved;
        };

        struct FABRIC_DELETE_PROPERTY_OPERATION
        {
            Windows.Win32.Foundation.PWSTR PropertyName;
            void* Reserved;
        };

        struct FABRIC_DELETE_SERVICE_DESCRIPTION
        {
            UINT16* ServiceName;
            Windows.Win32.Foundation.BOOLEAN ForceDelete;
            void* Reserved;
        };

        struct FABRIC_DELTA_NODES_CHECK_HEALTH_EVALUATION
        {
            Windows.Win32.Foundation.PWSTR Description;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            UINT32 BaselineErrorCount;
            UINT32 BaselineTotalCount;
            UINT32 TotalCount;
            BYTE MaxPercentDeltaUnhealthyNodes;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_APPLICATIONS_HEALTH_EVALUATION
        {
            Windows.Win32.Foundation.PWSTR Description;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            UINT32 TotalCount;
            BYTE MaxPercentUnhealthyDeployedApplications;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_APPLICATION_HEALTH
        {
            UINT16* ApplicationName;
            Windows.Win32.Foundation.PWSTR NodeName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVENT_LIST* HealthEvents;
            Microsoft.ServiceFabric.FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_LIST* DeployedServicePackageHealthStates;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_APPLICATION_HEALTH_EVALUATION
        {
            Windows.Win32.Foundation.PWSTR Description;
            UINT16* ApplicationName;
            Windows.Win32.Foundation.PWSTR NodeName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_APPLICATION_HEALTH_EX1
        {
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_APPLICATION_HEALTH_EX2
        {
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATISTICS* HealthStatistics;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_APPLICATION_HEALTH_QUERY_DESCRIPTION
        {
            UINT16* ApplicationName;
            Windows.Win32.Foundation.PWSTR NodeName;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_HEALTH_POLICY* HealthPolicy;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVENTS_FILTER* EventsFilter;
            Microsoft.ServiceFabric.FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATES_FILTER* DeployedServicePackagesFilter;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_APPLICATION_HEALTH_QUERY_DESCRIPTION_EX1
        {
            Microsoft.ServiceFabric.FABRIC_DEPLOYED_APPLICATION_HEALTH_STATISTICS_FILTER* HealthStatisticsFilter;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_APPLICATION_HEALTH_REPORT
        {
            UINT16* ApplicationName;
            Windows.Win32.Foundation.PWSTR NodeName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_INFORMATION* HealthInformation;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_APPLICATION_HEALTH_STATE
        {
            UINT16* ApplicationName;
            Windows.Win32.Foundation.PWSTR NodeName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_APPLICATION_HEALTH_STATES_FILTER
        {
            UINT32 HealthStateFilter;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_APPLICATION_HEALTH_STATE_CHUNK
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE HealthState;
            Microsoft.ServiceFabric.FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_CHUNK_LIST* DeployedServicePackageHealthStateChunks;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_APPLICATION_HEALTH_STATE_CHUNK_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_DEPLOYED_APPLICATION_HEALTH_STATE_CHUNK* Items;
            UINT32 TotalCount;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_APPLICATION_HEALTH_STATE_FILTER
        {
            UINT32 HealthStateFilter;
            Windows.Win32.Foundation.PWSTR NodeNameFilter;
            Microsoft.ServiceFabric.FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_FILTER_LIST* DeployedServicePackageFilters;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_APPLICATION_HEALTH_STATE_FILTER_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_DEPLOYED_APPLICATION_HEALTH_STATE_FILTER* Items;
        };

        struct FABRIC_DEPLOYED_APPLICATION_HEALTH_STATE_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_DEPLOYED_APPLICATION_HEALTH_STATE* Items;
        };

        struct FABRIC_DEPLOYED_APPLICATION_HEALTH_STATISTICS_FILTER
        {
            Windows.Win32.Foundation.BOOLEAN ExcludeHealthStatistics;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_APPLICATION_QUERY_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            UINT16* ApplicationNameFilter;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_APPLICATION_QUERY_RESULT_ITEM
        {
            UINT16* ApplicationName;
            Windows.Win32.Foundation.PWSTR ApplicationTypeName;
            Microsoft.ServiceFabric.FABRIC_DEPLOYMENT_STATUS DeployedApplicationStatus;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_APPLICATION_QUERY_RESULT_ITEM_EX
        {
            Windows.Win32.Foundation.PWSTR WorkDirectory;
            Windows.Win32.Foundation.PWSTR LogDirectory;
            Windows.Win32.Foundation.PWSTR TempDirectory;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_APPLICATION_QUERY_RESULT_ITEM_EX2
        {
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE HealthState;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_APPLICATION_QUERY_RESULT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_DEPLOYED_APPLICATION_QUERY_RESULT_ITEM* Items;
        };

        struct FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            UINT16* ApplicationName;
            Windows.Win32.Foundation.PWSTR ServiceManifestNameFilter;
            Windows.Win32.Foundation.PWSTR CodePackageNameFilter;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_RESULT_ITEM
        {
            Windows.Win32.Foundation.PWSTR CodePackageName;
            Windows.Win32.Foundation.PWSTR CodePackageVersion;
            Windows.Win32.Foundation.PWSTR ServiceManifestName;
            UINT32 RunFrequencyInterval;
            Microsoft.ServiceFabric.FABRIC_DEPLOYMENT_STATUS DeployedCodePackageStatus;
            Microsoft.ServiceFabric.FABRIC_CODE_PACKAGE_ENTRY_POINT* SetupEntryPoint;
            Microsoft.ServiceFabric.FABRIC_CODE_PACKAGE_ENTRY_POINT* EntryPoint;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_RESULT_ITEM_EX1
        {
            Windows.Win32.Foundation.PWSTR ServicePackageActivationId;
            Microsoft.ServiceFabric.FABRIC_HOST_TYPE HostType;
            Microsoft.ServiceFabric.FABRIC_HOST_ISOLATION_MODE HostIsolationMode;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_RESULT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_DEPLOYED_CODE_PACKAGE_QUERY_RESULT_ITEM* Items;
        };

        struct FABRIC_DEPLOYED_CODE_PACKAGE_RESULT
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            UINT16* ApplicationName;
            Windows.Win32.Foundation.PWSTR ServiceManifestName;
            Windows.Win32.Foundation.PWSTR CodePackageName;
            INT64 CodePackageInstanceId;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_CODE_PACKAGE_RESULT_EX1
        {
            Windows.Win32.Foundation.PWSTR ServicePackageActivationId;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_NETWORK_CODE_PACKAGE_QUERY_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            Windows.Win32.Foundation.PWSTR NetworkName;
            UINT16* ApplicationNameFilter;
            Windows.Win32.Foundation.PWSTR ServiceManifestNameFilter;
            Windows.Win32.Foundation.PWSTR CodePackageNameFilter;
            Microsoft.ServiceFabric.FABRIC_QUERY_PAGING_DESCRIPTION* PagingDescription;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_NETWORK_CODE_PACKAGE_QUERY_RESULT_ITEM
        {
            UINT16* ApplicationName;
            Windows.Win32.Foundation.PWSTR NetworkName;
            Windows.Win32.Foundation.PWSTR CodePackageName;
            Windows.Win32.Foundation.PWSTR CodePackageVersion;
            Windows.Win32.Foundation.PWSTR ServiceManifestName;
            Windows.Win32.Foundation.PWSTR ServicePackageActivationId;
            Windows.Win32.Foundation.PWSTR ContainerAddress;
            Windows.Win32.Foundation.PWSTR ContainerId;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_NETWORK_CODE_PACKAGE_QUERY_RESULT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_DEPLOYED_NETWORK_CODE_PACKAGE_QUERY_RESULT_ITEM* Items;
        };

        struct FABRIC_DEPLOYED_NETWORK_QUERY_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            Microsoft.ServiceFabric.FABRIC_QUERY_PAGING_DESCRIPTION* PagingDescription;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_NETWORK_QUERY_RESULT_ITEM
        {
            Windows.Win32.Foundation.PWSTR NetworkName;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_NETWORK_QUERY_RESULT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_DEPLOYED_NETWORK_QUERY_RESULT_ITEM* Items;
        };

        struct FABRIC_DEPLOYED_SERVICE_PACKAGES_HEALTH_EVALUATION
        {
            Windows.Win32.Foundation.PWSTR Description;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            UINT32 TotalCount;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH
        {
            UINT16* ApplicationName;
            Windows.Win32.Foundation.PWSTR ServiceManifestName;
            Windows.Win32.Foundation.PWSTR NodeName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVENT_LIST* HealthEvents;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_EVALUATION
        {
            Windows.Win32.Foundation.PWSTR Description;
            UINT16* ApplicationName;
            Windows.Win32.Foundation.PWSTR ServiceManifestName;
            Windows.Win32.Foundation.PWSTR NodeName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_EVALUATION_EX1
        {
            Windows.Win32.Foundation.PWSTR ServicePackageActivationId;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_EX1
        {
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_EX2
        {
            Windows.Win32.Foundation.PWSTR ServicePackageActivationId;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_QUERY_DESCRIPTION
        {
            UINT16* ApplicationName;
            Windows.Win32.Foundation.PWSTR NodeName;
            Windows.Win32.Foundation.PWSTR ServiceManifestName;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_HEALTH_POLICY* HealthPolicy;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVENTS_FILTER* EventsFilter;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_QUERY_DESCRIPTION_EX1
        {
            Windows.Win32.Foundation.PWSTR ServicePackageActivationId;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_REPORT
        {
            UINT16* ApplicationName;
            Windows.Win32.Foundation.PWSTR ServiceManifestName;
            Windows.Win32.Foundation.PWSTR NodeName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_INFORMATION* HealthInformation;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_REPORT_EX1
        {
            Windows.Win32.Foundation.PWSTR ServicePackageActivationId;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE
        {
            UINT16* ApplicationName;
            Windows.Win32.Foundation.PWSTR ServiceManifestName;
            Windows.Win32.Foundation.PWSTR NodeName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATES_FILTER
        {
            UINT32 HealthStateFilter;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_CHUNK
        {
            Windows.Win32.Foundation.PWSTR ServiceManifestName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE HealthState;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_CHUNK_EX1
        {
            Windows.Win32.Foundation.PWSTR ServicePackageActivationId;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_CHUNK_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_CHUNK* Items;
            UINT32 TotalCount;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_EX1
        {
            Windows.Win32.Foundation.PWSTR ServicePackageActivationId;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_FILTER
        {
            UINT32 HealthStateFilter;
            Windows.Win32.Foundation.PWSTR ServiceManifestNameFilter;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_FILTER_EX1
        {
            Windows.Win32.Foundation.PWSTR ServicePackageActivationIdFilter;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_FILTER_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_FILTER* Items;
        };

        struct FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_DEPLOYED_SERVICE_PACKAGE_HEALTH_STATE* Items;
        };

        struct FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            UINT16* ApplicationName;
            Windows.Win32.Foundation.PWSTR ServiceManifestNameFilter;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_RESULT_ITEM
        {
            Windows.Win32.Foundation.PWSTR ServiceManifestName;
            Windows.Win32.Foundation.PWSTR ServiceManifestVersion;
            Microsoft.ServiceFabric.FABRIC_DEPLOYMENT_STATUS DeployedServicePackageStatus;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_RESULT_ITEM_EX1
        {
            Windows.Win32.Foundation.PWSTR ServicePackageActivationId;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_RESULT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_DEPLOYED_SERVICE_PACKAGE_QUERY_RESULT_ITEM* Items;
        };

        struct FABRIC_DEPLOYED_SERVICE_REPLICA_DETAIL_QUERY_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            GUID PartitionId;
            INT64 ReplicaId;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_REPLICA_DETAIL_QUERY_RESULT_ITEM
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_KIND Kind;
            void* Value;
        };

        struct FABRIC_DEPLOYED_SERVICE_REPLICA_QUERY_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            UINT16* ApplicationName;
            Windows.Win32.Foundation.PWSTR ServiceManifestNameFilter;
            GUID PartitionIdFilter;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_REPLICA_QUERY_RESULT_ITEM
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_KIND Kind;
            void* Value;
        };

        struct FABRIC_DEPLOYED_SERVICE_REPLICA_QUERY_RESULT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_DEPLOYED_SERVICE_REPLICA_QUERY_RESULT_ITEM* Items;
        };

        struct FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            UINT16* ApplicationName;
            Windows.Win32.Foundation.PWSTR ServiceManifestNameFilter;
            Windows.Win32.Foundation.PWSTR ServiceTypeNameFilter;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_RESULT_ITEM
        {
            Windows.Win32.Foundation.PWSTR ServiceTypeName;
            Windows.Win32.Foundation.PWSTR CodePackageName;
            Windows.Win32.Foundation.PWSTR ServiceManifestName;
            Microsoft.ServiceFabric.FABRIC_SERVICE_TYPE_REGISTRATION_STATUS Status;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_RESULT_ITEM_EX1
        {
            Windows.Win32.Foundation.PWSTR ServicePackageActivationId;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_RESULT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_DEPLOYED_SERVICE_TYPE_QUERY_RESULT_ITEM* Items;
        };

        struct FABRIC_DEPLOYED_STATEFUL_SERVICE_REPLICA_DETAIL_QUERY_RESULT_ITEM
        {
            UINT16* ServiceName;
            GUID PartitionId;
            INT64 ReplicaId;
            Microsoft.ServiceFabric.FABRIC_QUERY_SERVICE_OPERATION_NAME CurrentServiceOperation;
            Windows.Win32.Foundation.FILETIME CurrentServiceOperationStartTimeUtc;
            Microsoft.ServiceFabric.FABRIC_QUERY_REPLICATOR_OPERATION_NAME CurrentReplicatorOperation;
            Microsoft.ServiceFabric.FABRIC_SERVICE_PARTITION_ACCESS_STATUS ReadStatus;
            Microsoft.ServiceFabric.FABRIC_SERVICE_PARTITION_ACCESS_STATUS WriteStatus;
            Microsoft.ServiceFabric.FABRIC_LOAD_METRIC_REPORT_LIST* ReportedLoad;
            Microsoft.ServiceFabric.FABRIC_REPLICATOR_STATUS_QUERY_RESULT* ReplicatorStatus;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_STATEFUL_SERVICE_REPLICA_DETAIL_QUERY_RESULT_ITEM_EX1
        {
            Microsoft.ServiceFabric.FABRIC_REPLICA_STATUS_QUERY_RESULT* ReplicaStatus;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_STATEFUL_SERVICE_REPLICA_DETAIL_QUERY_RESULT_ITEM_EX2
        {
            Microsoft.ServiceFabric.FABRIC_DEPLOYED_STATEFUL_SERVICE_REPLICA_QUERY_RESULT_ITEM* DeployedServiceReplica;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_STATEFUL_SERVICE_REPLICA_QUERY_RESULT_ITEM
        {
            UINT16* ServiceName;
            Windows.Win32.Foundation.PWSTR ServiceTypeName;
            Windows.Win32.Foundation.PWSTR ServiceManifestVersion;
            Windows.Win32.Foundation.PWSTR CodePackageName;
            GUID PartitionId;
            INT64 ReplicaId;
            Microsoft.ServiceFabric.FABRIC_REPLICA_ROLE ReplicaRole;
            Microsoft.ServiceFabric.FABRIC_QUERY_SERVICE_REPLICA_STATUS ReplicaStatus;
            Windows.Win32.Foundation.PWSTR Address;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_STATEFUL_SERVICE_REPLICA_QUERY_RESULT_ITEM_EX1
        {
            Windows.Win32.Foundation.PWSTR ServiceManifestName;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_STATEFUL_SERVICE_REPLICA_QUERY_RESULT_ITEM_EX2
        {
            Windows.Win32.Foundation.PWSTR ServicePackageActivationId;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_STATEFUL_SERVICE_REPLICA_QUERY_RESULT_ITEM_EX3
        {
            INT64 HostProcessId;
            Microsoft.ServiceFabric.FABRIC_RECONFIGURATION_INFORMATION_QUERY_RESULT* ReconfigurationInformation;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_STATELESS_SERVICE_INSTANCE_DETAIL_QUERY_RESULT_ITEM
        {
            UINT16* ServiceName;
            GUID PartitionId;
            INT64 InstanceId;
            Microsoft.ServiceFabric.FABRIC_QUERY_SERVICE_OPERATION_NAME CurrentServiceOperation;
            Windows.Win32.Foundation.FILETIME CurrentServiceOperationStartTimeUtc;
            Microsoft.ServiceFabric.FABRIC_LOAD_METRIC_REPORT_LIST* ReportedLoad;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_STATELESS_SERVICE_INSTANCE_DETAIL_QUERY_RESULT_ITEM_EX1
        {
            Microsoft.ServiceFabric.FABRIC_DEPLOYED_STATELESS_SERVICE_INSTANCE_QUERY_RESULT_ITEM* DeployedServiceReplica;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_STATELESS_SERVICE_INSTANCE_QUERY_RESULT_ITEM
        {
            UINT16* ServiceName;
            Windows.Win32.Foundation.PWSTR ServiceTypeName;
            Windows.Win32.Foundation.PWSTR ServiceManifestVersion;
            Windows.Win32.Foundation.PWSTR CodePackageName;
            GUID PartitionId;
            INT64 InstanceId;
            Microsoft.ServiceFabric.FABRIC_QUERY_SERVICE_REPLICA_STATUS ReplicaStatus;
            Windows.Win32.Foundation.PWSTR Address;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_STATELESS_SERVICE_INSTANCE_QUERY_RESULT_ITEM_EX1
        {
            Windows.Win32.Foundation.PWSTR ServiceManifestName;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_STATELESS_SERVICE_INSTANCE_QUERY_RESULT_ITEM_EX2
        {
            Windows.Win32.Foundation.PWSTR ServicePackageActivationId;
            void* Reserved;
        };

        struct FABRIC_DEPLOYED_STATELESS_SERVICE_INSTANCE_QUERY_RESULT_ITEM_EX3
        {
            INT64 HostProcessId;
            void* Reserved;
        };

        struct FABRIC_DLLHOST_ENTRY_POINT_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_DLLHOST_ISOLATION_POLICY IsolationPolicyType;
            Microsoft.ServiceFabric.FABRIC_DLLHOST_HOSTED_DLL_DESCRIPTION_LIST* HostedDlls;
            void* Reserved;
        };

        struct FABRIC_DLLHOST_HOSTED_DLL_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_DLLHOST_HOSTED_DLL_KIND Kind;
            void* Value;
        };

        struct FABRIC_DLLHOST_HOSTED_DLL_DESCRIPTION_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_DLLHOST_HOSTED_DLL_DESCRIPTION* Items;
        };

        struct FABRIC_DLLHOST_HOSTED_MANAGED_DLL_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR AssemblyName;
            void* Reserved;
        };

        struct FABRIC_DLLHOST_HOSTED_UNMANAGED_DLL_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR DllName;
            void* Reserved;
        };

        struct FABRIC_ENDPOINT_RESOURCE_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR Name;
            Windows.Win32.Foundation.PWSTR Protocol;
            Windows.Win32.Foundation.PWSTR Type;
            UINT32 Port;
            Windows.Win32.Foundation.PWSTR CertificateName;
            void* Reserved;
        };

        struct FABRIC_ENDPOINT_RESOURCE_DESCRIPTION_EX1
        {
            Windows.Win32.Foundation.PWSTR UriScheme;
            Windows.Win32.Foundation.PWSTR PathSuffix;
            void* Reserved;
        };

        struct FABRIC_ENDPOINT_RESOURCE_DESCRIPTION_EX2
        {
            Windows.Win32.Foundation.PWSTR CodePackageName;
            Windows.Win32.Foundation.PWSTR IpAddressOrFqdn;
            void* Reserved;
        };

        struct FABRIC_ENDPOINT_RESOURCE_DESCRIPTION_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_ENDPOINT_RESOURCE_DESCRIPTION* Items;
        };

        struct FABRIC_ENTITY_KIND_HEALTH_STATE_COUNT
        {
            Microsoft.ServiceFabric.FABRIC_HEALTH_ENTITY_KIND EntityKind;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE_COUNT* HealthStateCount;
            void* Reserved;
        };

        struct FABRIC_EPOCH
        {
            INT64 DataLossNumber;
            INT64 ConfigurationNumber;
            void* Reserved;
        };

        struct FABRIC_ESE_LOCAL_STORE_SETTINGS
        {
            Windows.Win32.Foundation.PWSTR DbFolderPath;
            INT32 LogFileSizeInKB;
            INT32 LogBufferSizeInKB;
            INT32 MaxCursors;
            INT32 MaxVerPages;
            INT32 MaxAsyncCommitDelayInMilliseconds;
            void* Reserved;
        };

        struct FABRIC_ESE_LOCAL_STORE_SETTINGS_EX1
        {
            Windows.Win32.Foundation.BOOLEAN EnableIncrementalBackup;
            void* Reserved;
        };

        struct FABRIC_ESE_LOCAL_STORE_SETTINGS_EX2
        {
            INT32 MaxCacheSizeInMB;
            void* Reserved;
        };

        struct FABRIC_ESE_LOCAL_STORE_SETTINGS_EX3
        {
            INT32 MaxDefragFrequencyInMinutes;
            INT32 DefragThresholdInMB;
            INT32 DatabasePageSizeInKB;
            void* Reserved;
        };

        struct FABRIC_ESE_LOCAL_STORE_SETTINGS_EX4
        {
            INT32 CompactionThresholdInMB;
            void* Reserved;
        };

        struct FABRIC_ESE_LOCAL_STORE_SETTINGS_EX5
        {
            INT32 IntrinsicValueThresholdInBytes;
            void* Reserved;
        };

        struct FABRIC_ESE_LOCAL_STORE_SETTINGS_EX6
        {
            Windows.Win32.Foundation.BOOLEAN EnableOverwriteOnUpdate;
            void* Reserved;
        };

        struct FABRIC_EVENT_CONTEXT_MAP
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_EVENT_CONTEXT_MAP_ITEM* Items;
        };

        struct FABRIC_EVENT_CONTEXT_MAP_ITEM
        {
            Windows.Win32.Foundation.PWSTR Key;
            Windows.Win32.Foundation.PWSTR Value;
        };

        struct FABRIC_EVENT_HEALTH_EVALUATION
        {
            Windows.Win32.Foundation.PWSTR Description;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVENT* UnhealthyEvent;
            Windows.Win32.Foundation.BOOLEAN ConsiderWarningAsError;
            void* Reserved;
        };

        struct FABRIC_EXECUTING_FAULTS_EVENT
        {
            Windows.Win32.Foundation.FILETIME TimeStampUtc;
            Microsoft.ServiceFabric.FABRIC_STRING_LIST* Faults;
            void* Reserved;
        };

        struct FABRIC_EXEHOST_ENTRY_POINT_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR Program;
            Windows.Win32.Foundation.PWSTR Arguments;
            Microsoft.ServiceFabric.FABRIC_EXEHOST_WORKING_FOLDER WorkingFolder;
            void* Reserved;
        };

        struct FABRIC_EXEHOST_ENTRY_POINT_DESCRIPTION_EX1
        {
            UINT32 PeriodicIntervalInSeconds;
            Windows.Win32.Foundation.BOOLEAN ConsoleRedirectionEnabled;
            UINT32 ConsoleRedirectionFileRetentionCount;
            UINT32 ConsoleRedirectionFileMaxSizeInKb;
            void* Reserved;
        };

        struct FABRIC_EXEHOST_ENTRY_POINT_DESCRIPTION_EX2
        {
            Windows.Win32.Foundation.BOOLEAN IsExternalExecutable;
            void* Reserved;
        };

        struct FABRIC_EXTERNAL_STORE_PROVISION_APPLICATION_TYPE_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR ApplicationTypeName;
            Windows.Win32.Foundation.PWSTR ApplicationTypeVersion;
            Windows.Win32.Foundation.PWSTR ApplicationPackageDownloadUri;
            Windows.Win32.Foundation.BOOLEAN Async;
            void* Reserved;
        };

        struct FABRIC_NODE_ID
        {
            UINT64 Low;
            UINT64 High;
            void* Reserved;
        };

        struct FABRIC_GATEWAY_INFORMATION
        {
            Windows.Win32.Foundation.PWSTR NodeAddress;
            Microsoft.ServiceFabric.FABRIC_NODE_ID NodeId;
            UINT64 NodeInstanceId;
            Windows.Win32.Foundation.PWSTR NodeName;
            void* Reserved;
        };

        struct FABRIC_GET_CHAOS_REPORT_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_CHAOS_REPORT_FILTER* Filter;
            Windows.Win32.Foundation.PWSTR ContinuationToken;
            void* Reserved;
        };

        struct FABRIC_GET_PROPERTY_OPERATION
        {
            Windows.Win32.Foundation.PWSTR PropertyName;
            Windows.Win32.Foundation.BOOLEAN IncludeValue;
            void* Reserved;
        };

        struct FABRIC_HEALTH_EVALUATION
        {
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_KIND Kind;
            void* Value;
        };

        struct FABRIC_HEALTH_EVALUATION_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION* Items;
        };

        struct FABRIC_HEALTH_EVENT
        {
            Microsoft.ServiceFabric.FABRIC_HEALTH_INFORMATION* HealthInformation;
            Windows.Win32.Foundation.FILETIME SourceUtcTimestamp;
            Windows.Win32.Foundation.FILETIME LastModifiedUtcTimestamp;
            Windows.Win32.Foundation.BOOLEAN IsExpired;
            void* Reserved;
        };

        struct FABRIC_HEALTH_EVENTS_FILTER
        {
            UINT32 HealthStateFilter;
            void* Reserved;
        };

        struct FABRIC_HEALTH_EVENT_EX1
        {
            Windows.Win32.Foundation.FILETIME LastOkTransitionAt;
            Windows.Win32.Foundation.FILETIME LastWarningTransitionAt;
            Windows.Win32.Foundation.FILETIME LastErrorTransitionAt;
            void* Reserved;
        };

        struct FABRIC_HEALTH_EVENT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVENT* Items;
        };

        struct FABRIC_HEALTH_INFORMATION
        {
            Windows.Win32.Foundation.PWSTR SourceId;
            Windows.Win32.Foundation.PWSTR Property;
            UINT32 TimeToLiveSeconds;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE State;
            Windows.Win32.Foundation.PWSTR Description;
            INT64 SequenceNumber;
            Windows.Win32.Foundation.BOOLEAN RemoveWhenExpired;
            void* Reserved;
        };

        struct FABRIC_HEALTH_REPORT
        {
            Microsoft.ServiceFabric.FABRIC_HEALTH_REPORT_KIND Kind;
            void* Value;
        };

        struct FABRIC_HEALTH_REPORT_SEND_OPTIONS
        {
            Windows.Win32.Foundation.BOOLEAN Immediate;
            void* Reserved;
        };

        struct FABRIC_HEALTH_STATE_COUNT
        {
            UINT32 OkCount;
            UINT32 WarningCount;
            UINT32 ErrorCount;
            void* Reserved;
        };

        struct FABRIC_HEALTH_STATISTICS
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_ENTITY_KIND_HEALTH_STATE_COUNT* Items;
            void* Reserved;
        };

        struct FABRIC_INT64_RANGE_PARTITION_INFORMATION
        {
            GUID Id;
            INT64 LowKey;
            INT64 HighKey;
            void* Reserved;
        };

        struct FABRIC_KEY_VALUE_STORE_ITEM
        {
            Microsoft.ServiceFabric.FABRIC_KEY_VALUE_STORE_ITEM_METADATA* Metadata;
            BYTE* Value;
            void* Reserved;
        };

        struct FABRIC_KEY_VALUE_STORE_ITEM_METADATA
        {
            Windows.Win32.Foundation.PWSTR Key;
            INT32 ValueSizeInBytes;
            INT64 SequenceNumber;
            Windows.Win32.Foundation.FILETIME LastModifiedUtc;
            void* Reserved;
        };

        struct FABRIC_KEY_VALUE_STORE_ITEM_METADATA_EX1
        {
            Windows.Win32.Foundation.FILETIME LastModifiedOnPrimaryUtc;
            void* Reserved;
        };

        struct FABRIC_KEY_VALUE_STORE_MIGRATION_QUERY_RESULT
        {
            Microsoft.ServiceFabric.FABRIC_KEY_VALUE_STORE_MIGRATION_PHASE CurrentPhase;
            Microsoft.ServiceFabric.FABRIC_KEY_VALUE_STORE_MIGRATION_STATE State;
            Microsoft.ServiceFabric.FABRIC_KEY_VALUE_STORE_MIGRATION_PHASE NextPhase;
            void* Reserved;
        };

        struct FABRIC_KEY_VALUE_STORE_REPLICA_SETTINGS
        {
            UINT32 TransactionDrainTimeoutInSeconds;
            Microsoft.ServiceFabric.FABRIC_KEY_VALUE_STORE_NOTIFICATION_MODE SecondaryNotificationMode;
            void* Reserved;
        };

        struct FABRIC_KEY_VALUE_STORE_REPLICA_SETTINGS_EX1
        {
            Windows.Win32.Foundation.BOOLEAN EnableCopyNotificationPrefetch;
            void* Reserved;
        };

        struct FABRIC_KEY_VALUE_STORE_REPLICA_SETTINGS_EX2
        {
            Microsoft.ServiceFabric.FABRIC_KEY_VALUE_STORE_FULL_COPY_MODE FullCopyMode;
            void* Reserved;
        };

        struct FABRIC_KEY_VALUE_STORE_REPLICA_SETTINGS_EX3
        {
            INT32 LogTruncationIntervalInMinutes;
            void* Reserved;
        };

        struct FABRIC_KEY_VALUE_STORE_RESTORE_SETTINGS
        {
            Windows.Win32.Foundation.BOOLEAN InlineReopen;
            void* Reserved;
        };

        struct FABRIC_KEY_VALUE_STORE_RESTORE_SETTINGS_EX1
        {
            Windows.Win32.Foundation.BOOLEAN EnableLsnCheck;
            void* Reserved;
        };

        struct FABRIC_KEY_VALUE_STORE_STATUS_QUERY_RESULT
        {
            INT64 DatabaseRowCountEstimate;
            INT64 DatabaseLogicalSizeEstimate;
            Windows.Win32.Foundation.PWSTR CopyNotificationCurrentKeyFilter;
            INT64 CopyNotificationCurrentProgress;
            Windows.Win32.Foundation.PWSTR StatusDetails;
            void* Reserved;
        };

        struct FABRIC_KEY_VALUE_STORE_STATUS_QUERY_RESULT_EX1
        {
            Microsoft.ServiceFabric.FABRIC_KEY_VALUE_STORE_PROVIDER_KIND ProviderKind;
            Microsoft.ServiceFabric.FABRIC_KEY_VALUE_STORE_MIGRATION_QUERY_RESULT* MigrationStatus;
            void* Reserved;
        };

        struct FABRIC_KEY_VALUE_STORE_TRANSACTION_SETTINGS
        {
            UINT32 SerializationBlockSize;
            void* Reserved;
        };

        struct FABRIC_LOAD_METRIC
        {
            Windows.Win32.Foundation.PWSTR Name;
            UINT32 Value;
            void* Reserved;
        };

        struct FABRIC_LOAD_METRIC_INFORMATION
        {
            Windows.Win32.Foundation.PWSTR Name;
            Windows.Win32.Foundation.BOOLEAN IsBalancedBefore;
            Windows.Win32.Foundation.BOOLEAN IsBalancedAfter;
            DOUBLE DeviationBefore;
            DOUBLE DeviationAfter;
            DOUBLE BalancingThreshold;
            Windows.Win32.Foundation.PWSTR Action;
            void* Reserved;
        };

        struct FABRIC_LOAD_METRIC_INFORMATION_EX1
        {
            UINT32 ActivityThreshold;
            INT64 ClusterCapacity;
            INT64 ClusterLoad;
            void* Reserved;
        };

        struct FABRIC_LOAD_METRIC_INFORMATION_EX2
        {
            INT64 RemainingUnbufferedCapacity;
            DOUBLE NodeBufferPercentage;
            INT64 BufferedCapacity;
            INT64 RemainingBufferedCapacity;
            Windows.Win32.Foundation.BOOLEAN IsClusterCapacityViolation;
            INT64 MinNodeLoadValue;
            Microsoft.ServiceFabric.FABRIC_NODE_ID MinNodeLoadNodeId;
            INT64 MaxNodeLoadValue;
            Microsoft.ServiceFabric.FABRIC_NODE_ID MaxNodeLoadNodeId;
            void* Reserved;
        };

        struct FABRIC_LOAD_METRIC_INFORMATION_EX3
        {
            DOUBLE CurrentClusterLoad;
            DOUBLE BufferedClusterCapacityRemaining;
            DOUBLE ClusterCapacityRemaining;
            DOUBLE MaximumNodeLoad;
            DOUBLE MinimumNodeLoad;
            void* Reserved;
        };

        struct FABRIC_LOAD_METRIC_INFORMATION_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_LOAD_METRIC_INFORMATION* Items;
        };

        struct FABRIC_LOAD_METRIC_REPORT
        {
            Windows.Win32.Foundation.PWSTR Name;
            UINT32 Value;
            Windows.Win32.Foundation.FILETIME LastReportedUtc;
            void* Reserved;
        };

        struct FABRIC_LOAD_METRIC_REPORT_EX1
        {
            DOUBLE CurrentValue;
            void* Reserved;
        };

        struct FABRIC_LOAD_METRIC_REPORT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_LOAD_METRIC_REPORT* Items;
        };

        struct FABRIC_LOCAL_NETWORK_CONFIGURATION_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR NetworkAddressPrefix;
            void* Reserved;
        };

        struct FABRIC_LOCAL_NETWORK_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_LOCAL_NETWORK_CONFIGURATION_DESCRIPTION* NetworkConfiguration;
            void* Reserved;
        };

        struct FABRIC_LOCAL_NETWORK_INFORMATION
        {
            Windows.Win32.Foundation.PWSTR NetworkName;
            Microsoft.ServiceFabric.FABRIC_LOCAL_NETWORK_CONFIGURATION_DESCRIPTION* NetworkConfiguration;
            Microsoft.ServiceFabric.FABRIC_NETWORK_STATUS NetworkStatus;
            void* Reserved;
        };

        struct FABRIC_MOVE_PRIMARY_DESCRIPTION2
        {
            Microsoft.ServiceFabric.FABRIC_MOVE_PRIMARY_DESCRIPTION_KIND Kind;
            void* Value;
        };

        struct FABRIC_MOVE_PRIMARY_DESCRIPTION_USING_NODE_NAME
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            UINT16* ServiceName;
            GUID PartitionId;
            Windows.Win32.Foundation.BOOLEAN IgnoreConstraints;
            void* Reserved;
        };

        struct FABRIC_MOVE_PRIMARY_RESULT
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            UINT16* ServiceName;
            GUID PartitionId;
            void* Reserved;
        };

        struct FABRIC_MOVE_SECONDARY_DESCRIPTION2
        {
            Microsoft.ServiceFabric.FABRIC_MOVE_SECONDARY_DESCRIPTION_KIND Kind;
            void* Value;
        };

        struct FABRIC_MOVE_SECONDARY_DESCRIPTION_USING_NODE_NAME
        {
            Windows.Win32.Foundation.PWSTR CurrentNodeName;
            Windows.Win32.Foundation.PWSTR NewNodeName;
            UINT16* ServiceName;
            GUID PartitionId;
            Windows.Win32.Foundation.BOOLEAN IgnoreConstraints;
            void* Reserved;
        };

        struct FABRIC_MOVE_SECONDARY_RESULT
        {
            Windows.Win32.Foundation.PWSTR CurrentNodeName;
            Windows.Win32.Foundation.PWSTR NewNodeName;
            UINT16* ServiceName;
            GUID PartitionId;
            void* Reserved;
        };

        struct FABRIC_NAMED_PARTITION_INFORMATION
        {
            GUID Id;
            Windows.Win32.Foundation.PWSTR Name;
            void* Reserved;
        };

        struct FABRIC_NAMED_PARTITION_SCHEME_DESCRIPTION
        {
            INT32 PartitionCount;
            Windows.Win32.Foundation.PWSTR* Names;
            void* Reserved;
        };

        struct FABRIC_NAMED_PROPERTY
        {
            Microsoft.ServiceFabric.FABRIC_NAMED_PROPERTY_METADATA* Metadata;
            BYTE* Value;
            void* Reserved;
        };

        struct FABRIC_NAMED_PROPERTY_METADATA
        {
            Windows.Win32.Foundation.PWSTR PropertyName;
            Microsoft.ServiceFabric.FABRIC_PROPERTY_TYPE_ID TypeId;
            INT32 ValueSize;
            INT64 SequenceNumber;
            Windows.Win32.Foundation.FILETIME LastModifiedUtc;
            UINT16* Name;
            void* Reserved;
        };

        struct FABRIC_NAMED_PROPERTY_METADATA_EX1
        {
            Windows.Win32.Foundation.PWSTR CustomTypeId;
            void* Reserved;
        };

        struct FABRIC_NAMED_REPARTITION_DESCRIPTION
        {
            UINT32 NamesToAddCount;
            Windows.Win32.Foundation.PWSTR* NamesToAdd;
            UINT32 NamesToRemoveCount;
            Windows.Win32.Foundation.PWSTR* NamesToRemove;
            void* Reserved;
        };

        struct FABRIC_NETWORK_APPLICATION_QUERY_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR NetworkName;
            UINT16* ApplicationNameFilter;
            Microsoft.ServiceFabric.FABRIC_QUERY_PAGING_DESCRIPTION* PagingDescription;
            void* Reserved;
        };

        struct FABRIC_NETWORK_APPLICATION_QUERY_RESULT_ITEM
        {
            Windows.Win32.Foundation.PWSTR ApplicationName;
            void* Reserved;
        };

        struct FABRIC_NETWORK_APPLICATION_QUERY_RESULT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_NETWORK_APPLICATION_QUERY_RESULT_ITEM* Items;
        };

        struct FABRIC_NETWORK_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_NETWORK_TYPE NetworkType;
            void* Value;
        };

        struct FABRIC_NETWORK_INFORMATION
        {
            Microsoft.ServiceFabric.FABRIC_NETWORK_TYPE NetworkType;
            void* Value;
        };

        struct FABRIC_NETWORK_NODE_QUERY_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR NetworkName;
            Windows.Win32.Foundation.PWSTR NodeNameFilter;
            Microsoft.ServiceFabric.FABRIC_QUERY_PAGING_DESCRIPTION* PagingDescription;
            void* Reserved;
        };

        struct FABRIC_NETWORK_NODE_QUERY_RESULT_ITEM
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            void* Reserved;
        };

        struct FABRIC_NETWORK_NODE_QUERY_RESULT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_NETWORK_NODE_QUERY_RESULT_ITEM* Items;
        };

        struct FABRIC_NETWORK_QUERY_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR NetworkNameFilter;
            UINT32 NetworkStatusFilter;
            Microsoft.ServiceFabric.FABRIC_QUERY_PAGING_DESCRIPTION* PagingDescription;
            void* Reserved;
        };

        struct FABRIC_NETWORK_QUERY_RESULT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_NETWORK_INFORMATION* Items;
        };

        struct FABRIC_NODES_HEALTH_EVALUATION
        {
            Windows.Win32.Foundation.PWSTR Description;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            UINT32 TotalCount;
            BYTE MaxPercentUnhealthyNodes;
            void* Reserved;
        };

        struct FABRIC_NODE_CONTEXT
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            Windows.Win32.Foundation.PWSTR NodeType;
            Windows.Win32.Foundation.PWSTR IPAddressOrFQDN;
            UINT64 NodeInstanceId;
            Microsoft.ServiceFabric.FABRIC_NODE_ID NodeId;
            void* Reserved;
        };

        struct FABRIC_NODE_DEACTIVATION_QUERY_RESULT_ITEM
        {
            Microsoft.ServiceFabric.FABRIC_NODE_DEACTIVATION_INTENT EffectiveIntent;
            Microsoft.ServiceFabric.FABRIC_NODE_DEACTIVATION_STATUS Status;
            Microsoft.ServiceFabric.FABRIC_NODE_DEACTIVATION_TASK_LIST* Tasks;
            void* Reserved;
        };

        struct FABRIC_NODE_DEACTIVATION_QUERY_RESULT_ITEM_EX1
        {
            Microsoft.ServiceFabric.FABRIC_SAFETY_CHECK_LIST* PendingSafetyChecks;
            void* Reserved;
        };

        struct FABRIC_NODE_DEACTIVATION_TASK
        {
            Microsoft.ServiceFabric.FABRIC_NODE_DEACTIVATION_TASK_ID* TaskId;
            Microsoft.ServiceFabric.FABRIC_NODE_DEACTIVATION_INTENT Intent;
            void* Reserved;
        };

        struct FABRIC_NODE_DEACTIVATION_TASK_ID
        {
            Windows.Win32.Foundation.PWSTR Id;
            Microsoft.ServiceFabric.FABRIC_NODE_DEACTIVATION_TASK_TYPE Type;
            void* Reserved;
        };

        struct FABRIC_NODE_DEACTIVATION_TASK_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_NODE_DEACTIVATION_TASK* Items;
        };

        struct FABRIC_NODE_HEALTH
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVENT_LIST* HealthEvents;
            void* Reserved;
        };

        struct FABRIC_NODE_HEALTH_EVALUATION
        {
            Windows.Win32.Foundation.PWSTR Description;
            Windows.Win32.Foundation.PWSTR NodeName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            void* Reserved;
        };

        struct FABRIC_NODE_HEALTH_EX1
        {
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            void* Reserved;
        };

        struct FABRIC_NODE_HEALTH_QUERY_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            Microsoft.ServiceFabric.FABRIC_CLUSTER_HEALTH_POLICY* HealthPolicy;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVENTS_FILTER* EventsFilter;
            void* Reserved;
        };

        struct FABRIC_NODE_HEALTH_REPORT
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_INFORMATION* HealthInformation;
            void* Reserved;
        };

        struct FABRIC_NODE_HEALTH_STATE
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            void* Reserved;
        };

        struct FABRIC_NODE_HEALTH_STATES_FILTER
        {
            UINT32 HealthStateFilter;
            void* Reserved;
        };

        struct FABRIC_NODE_HEALTH_STATE_CHUNK
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE HealthState;
            void* Reserved;
        };

        struct FABRIC_NODE_HEALTH_STATE_CHUNK_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_NODE_HEALTH_STATE_CHUNK* Items;
            UINT32 TotalCount;
            void* Reserved;
        };

        struct FABRIC_NODE_HEALTH_STATE_FILTER
        {
            UINT32 HealthStateFilter;
            Windows.Win32.Foundation.PWSTR NodeNameFilter;
            void* Reserved;
        };

        struct FABRIC_NODE_HEALTH_STATE_FILTER_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_NODE_HEALTH_STATE_FILTER* Items;
        };

        struct FABRIC_NODE_HEALTH_STATE_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_NODE_HEALTH_STATE* Items;
        };


        struct FABRIC_NODE_LOAD_INFORMATION
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            Microsoft.ServiceFabric.FABRIC_NODE_LOAD_METRIC_INFORMATION_LIST* NodeLoadMetricInformation;
            void* Reserved;
        };

        struct FABRIC_NODE_LOAD_INFORMATION_QUERY_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            void* Reserved;
        };

        struct FABRIC_NODE_LOAD_METRIC_INFORMATION
        {
            Windows.Win32.Foundation.PWSTR Name;
            INT64 NodeCapacity;
            INT64 NodeLoad;
            INT64 NodeRemainingCapacity;
            Windows.Win32.Foundation.BOOLEAN IsCapacityViolation;
            void* Reserved;
        };

        struct FABRIC_NODE_LOAD_METRIC_INFORMATION_EX1
        {
            INT64 NodeBufferedCapacity;
            INT64 NodeRemainingBufferedCapacity;
            void* Reserved;
        };

        struct FABRIC_NODE_LOAD_METRIC_INFORMATION_EX2
        {
            DOUBLE CurrentNodeLoad;
            DOUBLE NodeCapacityRemaining;
            DOUBLE BufferedNodeCapacityRemaining;
            void* Reserved;
        };

        struct FABRIC_NODE_LOAD_METRIC_INFORMATION_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_NODE_LOAD_METRIC_INFORMATION* Items;
        };

        struct FABRIC_NODE_QUERY_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR NodeNameFilter;
            void* Reserved;
        };

        struct FABRIC_NODE_QUERY_DESCRIPTION_EX1
        {
            Windows.Win32.Foundation.PWSTR ContinuationToken;
            void* Reserved;
        };

        struct FABRIC_NODE_QUERY_DESCRIPTION_EX2
        {
            UINT32 NodeStatusFilter;
            void* Reserved;
        };

        struct FABRIC_NODE_QUERY_DESCRIPTION_EX3
        {
            INT32 MaxResults;
            void* Reserved;
        };

        struct FABRIC_NODE_QUERY_RESULT_ITEM
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            Windows.Win32.Foundation.PWSTR IpAddressOrFQDN;
            Windows.Win32.Foundation.PWSTR NodeType;
            Windows.Win32.Foundation.PWSTR CodeVersion;
            Windows.Win32.Foundation.PWSTR ConfigVersion;
            Microsoft.ServiceFabric.FABRIC_QUERY_NODE_STATUS NodeStatus;
            INT64 NodeUpTimeInSeconds;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Windows.Win32.Foundation.BOOLEAN IsSeedNode;
            Windows.Win32.Foundation.PWSTR UpgradeDomain;
            UINT16* FaultDomain;
            void* Reserved;
        };

        struct FABRIC_NODE_QUERY_RESULT_ITEM_EX1
        {
            Microsoft.ServiceFabric.FABRIC_NODE_ID NodeId;
            void* Reserved;
        };

        struct FABRIC_NODE_QUERY_RESULT_ITEM_EX2
        {
            UINT64 NodeInstanceId;
            void* Reserved;
        };

        struct FABRIC_NODE_QUERY_RESULT_ITEM_EX3
        {
            Microsoft.ServiceFabric.FABRIC_NODE_DEACTIVATION_QUERY_RESULT_ITEM* NodeDeactivationInfo;
            void* Reserved;
        };

        struct FABRIC_NODE_QUERY_RESULT_ITEM_EX4
        {
            Windows.Win32.Foundation.BOOLEAN IsStopped;
            void* Reserved;
        };

        struct FABRIC_NODE_QUERY_RESULT_ITEM_EX5
        {
            INT64 NodeDownTimeInSeconds;
            void* Reserved;
        };

        struct FABRIC_NODE_QUERY_RESULT_ITEM_EX6
        {
            Windows.Win32.Foundation.FILETIME NodeUpAt;
            Windows.Win32.Foundation.FILETIME NodeDownAt;
            void* Reserved;
        };

        struct FABRIC_NODE_QUERY_RESULT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_NODE_QUERY_RESULT_ITEM* Items;
        };

        struct FABRIC_NODE_RESULT
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            UINT64 NodeInstance;
            void* Reserved;
        };

        struct FABRIC_NODE_START_DESCRIPTION
        {
            GUID OperationId;
            Windows.Win32.Foundation.PWSTR NodeName;
            UINT64 NodeInstanceId;
            void* Reserved;
        };

        struct FABRIC_NODE_STOP_DESCRIPTION
        {
            GUID OperationId;
            Windows.Win32.Foundation.PWSTR NodeName;
            UINT64 NodeInstanceId;
            UINT32 StopDurationInSeconds;
            void* Reserved;
        };

        struct FABRIC_NODE_TRANSITION_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_NODE_TRANSITION_TYPE NodeTransitionType;
            void* Value;
        };

        struct FABRIC_NODE_TRANSITION_PROGRESS
        {
            Microsoft.ServiceFabric.FABRIC_TEST_COMMAND_PROGRESS_STATE State;
            Microsoft.ServiceFabric.FABRIC_NODE_TRANSITION_RESULT* Result;
            void* Reserved;
        };

        struct FABRIC_NODE_TRANSITION_RESULT
        {
            Windows.Win32.Foundation.HRESULT ErrorCode;
            Microsoft.ServiceFabric.FABRIC_NODE_RESULT* NodeResult;
            void* Reserved;
        };

        struct FABRIC_NODE_UPGRADE_PROGRESS
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            Microsoft.ServiceFabric.FABRIC_NODE_UPGRADE_PHASE UpgradePhase;
            Microsoft.ServiceFabric.FABRIC_UPGRADE_SAFETY_CHECK_LIST* PendingSafetyChecks;
            void* Reserved;
        };

        struct FABRIC_NODE_UPGRADE_PROGRESS_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_NODE_UPGRADE_PROGRESS* Items;
        };

        struct FABRIC_OPERATION_DATA_BUFFER
        {
            UINT32 BufferSize;
            BYTE* Buffer;
        };

        struct FABRIC_OPERATION_ID
        {
            GUID PartitionId;
            void* Reserved;
        };

        struct FABRIC_OPERATION_METADATA
        {
            Microsoft.ServiceFabric.FABRIC_OPERATION_TYPE Type;
            INT64 SequenceNumber;
            INT64 AtomicGroupId;
            void* Reserved;
        };

        struct FABRIC_ORCHESTRATION_UPGRADE_PROGRESS
        {
            Microsoft.ServiceFabric.FABRIC_UPGRADE_STATE UpgradeState;
            UINT32 ProgressStatus;
            void* Reserved;
        };

        struct FABRIC_ORCHESTRATION_UPGRADE_PROGRESS_EX1
        {
            Windows.Win32.Foundation.PWSTR ConfigVersion;
            void* Reserved;
        };

        struct FABRIC_ORCHESTRATION_UPGRADE_PROGRESS_EX2
        {
            Windows.Win32.Foundation.PWSTR Details;
            void* Reserved;
        };

        struct FABRIC_PACKAGE_SHARING_POLICY
        {
            Windows.Win32.Foundation.PWSTR PackageName;
            Microsoft.ServiceFabric.FABRIC_PACKAGE_SHARING_POLICY_SCOPE Scope;
            void* Reserved;
        };

        struct FABRIC_PACKAGE_SHARING_POLICY_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_PACKAGE_SHARING_POLICY* Items;
        };

        struct FABRIC_PAGED_DEPLOYED_APPLICATION_QUERY_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            UINT16* ApplicationNameFilter;
            Windows.Win32.Foundation.BOOLEAN IncludeHealthState;
            Microsoft.ServiceFabric.FABRIC_QUERY_PAGING_DESCRIPTION* PagingDescription;
            void* Reserved;
        };

        struct FABRIC_PAGING_STATUS
        {
            Windows.Win32.Foundation.PWSTR ContinuationToken;
            void* Reserved;
        };

        struct FABRIC_PARTITIONS_HEALTH_EVALUATION
        {
            Windows.Win32.Foundation.PWSTR Description;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            UINT32 TotalCount;
            BYTE MaxPercentUnhealthyPartitionsPerService;
            void* Reserved;
        };

        struct FABRIC_PARTITION_DATA_LOSS_PROGRESS
        {
            Microsoft.ServiceFabric.FABRIC_TEST_COMMAND_PROGRESS_STATE State;
            Microsoft.ServiceFabric.FABRIC_PARTITION_DATA_LOSS_RESULT* Result;
            void* Reserved;
        };

        struct FABRIC_PARTITION_DATA_LOSS_RESULT
        {
            Microsoft.ServiceFabric.FABRIC_SELECTED_PARTITION* SelectedPartition;
            Windows.Win32.Foundation.HRESULT ErrorCode;
            void* Reserved;
        };

        struct FABRIC_PARTITION_HEALTH
        {
            GUID PartitionId;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVENT_LIST* HealthEvents;
            Microsoft.ServiceFabric.FABRIC_REPLICA_HEALTH_STATE_LIST* ReplicaHealthStates;
            void* Reserved;
        };

        struct FABRIC_PARTITION_HEALTH_EVALUATION
        {
            Windows.Win32.Foundation.PWSTR Description;
            GUID PartitionId;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            void* Reserved;
        };

        struct FABRIC_PARTITION_HEALTH_EX1
        {
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            void* Reserved;
        };

        struct FABRIC_PARTITION_HEALTH_EX2
        {
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATISTICS* HealthStatistics;
            void* Reserved;
        };

        struct FABRIC_PARTITION_HEALTH_QUERY_DESCRIPTION
        {
            GUID PartitionId;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_HEALTH_POLICY* HealthPolicy;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVENTS_FILTER* EventsFilter;
            Microsoft.ServiceFabric.FABRIC_REPLICA_HEALTH_STATES_FILTER* ReplicasFilter;
            void* Reserved;
        };

        struct FABRIC_PARTITION_HEALTH_QUERY_DESCRIPTION_EX1
        {
            Microsoft.ServiceFabric.FABRIC_PARTITION_HEALTH_STATISTICS_FILTER* HealthStatisticsFilter;
            void* Reserved;
        };

        struct FABRIC_PARTITION_HEALTH_REPORT
        {
            GUID PartitionId;
            Microsoft.ServiceFabric.FABRIC_HEALTH_INFORMATION* HealthInformation;
            void* Reserved;
        };

        struct FABRIC_PARTITION_HEALTH_STATE
        {
            GUID PartitionId;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            void* Reserved;
        };

        struct FABRIC_PARTITION_HEALTH_STATES_FILTER
        {
            UINT32 HealthStateFilter;
            void* Reserved;
        };

        struct FABRIC_PARTITION_HEALTH_STATE_CHUNK
        {
            GUID PartitionId;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE HealthState;
            Microsoft.ServiceFabric.FABRIC_REPLICA_HEALTH_STATE_CHUNK_LIST* ReplicaHealthStateChunks;
            void* Reserved;
        };

        struct FABRIC_PARTITION_HEALTH_STATE_CHUNK_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_PARTITION_HEALTH_STATE_CHUNK* Items;
            UINT32 TotalCount;
            void* Reserved;
        };

        struct FABRIC_PARTITION_HEALTH_STATE_FILTER
        {
            UINT32 HealthStateFilter;
            GUID PartitionIdFilter;
            Microsoft.ServiceFabric.FABRIC_REPLICA_HEALTH_STATE_FILTER_LIST* ReplicaFilters;
            void* Reserved;
        };

        struct FABRIC_PARTITION_HEALTH_STATE_FILTER_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_PARTITION_HEALTH_STATE_FILTER* Items;
        };

        struct FABRIC_PARTITION_HEALTH_STATE_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_PARTITION_HEALTH_STATE* Items;
        };

        struct FABRIC_PARTITION_HEALTH_STATISTICS_FILTER
        {
            Windows.Win32.Foundation.BOOLEAN ExcludeHealthStatistics;
            void* Reserved;
        };

        struct FABRIC_PARTITION_LOAD_INFORMATION
        {
            GUID PartitionId;
            Microsoft.ServiceFabric.FABRIC_LOAD_METRIC_REPORT_LIST* PrimaryLoadMetricReports;
            Microsoft.ServiceFabric.FABRIC_LOAD_METRIC_REPORT_LIST* SecondaryLoadMetricReports;
            void* Reserved;
        };

        struct FABRIC_PARTITION_LOAD_INFORMATION_QUERY_DESCRIPTION
        {
            GUID PartitionId;
            void* Reserved;
        };

        struct FABRIC_PARTITION_QUORUM_LOSS_PROGRESS
        {
            Microsoft.ServiceFabric.FABRIC_TEST_COMMAND_PROGRESS_STATE State;
            Microsoft.ServiceFabric.FABRIC_PARTITION_QUORUM_LOSS_RESULT* Result;
            void* Reserved;
        };

        struct FABRIC_PARTITION_QUORUM_LOSS_RESULT
        {
            Microsoft.ServiceFabric.FABRIC_SELECTED_PARTITION* SelectedPartition;
            Windows.Win32.Foundation.HRESULT ErrorCode;
            void* Reserved;
        };

        struct FABRIC_PARTITION_RESTART_PROGRESS
        {
            Microsoft.ServiceFabric.FABRIC_TEST_COMMAND_PROGRESS_STATE State;
            Microsoft.ServiceFabric.FABRIC_PARTITION_RESTART_RESULT* Result;
            void* Reserved;
        };

        struct FABRIC_PARTITION_RESTART_RESULT
        {
            Microsoft.ServiceFabric.FABRIC_SELECTED_PARTITION* SelectedPartition;
            Windows.Win32.Foundation.HRESULT ErrorCode;
            void* Reserved;
        };

        struct FABRIC_PARTITION_SAFETY_CHECK
        {
            GUID PartitionId;
            void* Reserved;
        };

        struct FABRIC_PARTITION_SELECTOR
        {
            UINT16* ServiceName;
            Microsoft.ServiceFabric.FABRIC_PARTITION_SELECTOR_TYPE PartitionSelectorType;
            Windows.Win32.Foundation.PWSTR PartitionKey;
            void* Reserved;
        };

        struct FABRIC_PLACEMENT_POLICY_INVALID_DOMAIN_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR InvalidFaultDomain;
            void* Reserved;
        };

        struct FABRIC_PLACEMENT_POLICY_NONPARTIALLY_PLACE_SERVICE_DESCRIPTION
        {
            void* Reserved;
        };

        struct FABRIC_PLACEMENT_POLICY_PREFERRED_PRIMARY_DOMAIN_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR PreferredPrimaryFaultDomain;
            void* Reserved;
        };

        struct FABRIC_PLACEMENT_POLICY_REQUIRED_DOMAIN_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR RequiredFaultDomain;
            void* Reserved;
        };

        struct FABRIC_PLACEMENT_POLICY_REQUIRED_DOMAIN_DISTRIBUTION_DESCRIPTION
        {
            void* Reserved;
        };

        struct FABRIC_PRIMARY_REPLICATOR_STATUS_QUERY_RESULT
        {
            Microsoft.ServiceFabric.FABRIC_REPLICATOR_QUEUE_STATUS* ReplicationQueueStatus;
            Microsoft.ServiceFabric.FABRIC_REMOTE_REPLICATOR_STATUS_LIST* RemoteReplicators;
            void* Reserved;
        };

        struct FABRIC_PROPERTY_BATCH_OPERATION
        {
            Microsoft.ServiceFabric.FABRIC_PROPERTY_BATCH_OPERATION_KIND Kind;
            void* Value;
        };

        struct FABRIC_PROVISIONED_CODE_VERSION_QUERY_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR CodeVersionFilter;
            void* Reserved;
        };

        struct FABRIC_PROVISIONED_CODE_VERSION_QUERY_RESULT_ITEM
        {
            Windows.Win32.Foundation.PWSTR CodeVersion;
            void* Reserved;
        };

        struct FABRIC_PROVISIONED_CODE_VERSION_QUERY_RESULT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_PROVISIONED_CODE_VERSION_QUERY_RESULT_ITEM* Items;
        };

        struct FABRIC_PROVISIONED_CONFIG_VERSION_QUERY_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR ConfigVersionFilter;
            void* Reserved;
        };

        struct FABRIC_PROVISIONED_CONFIG_VERSION_QUERY_RESULT_ITEM
        {
            Windows.Win32.Foundation.PWSTR ConfigVersion;
            void* Reserved;
        };

        struct FABRIC_PROVISIONED_CONFIG_VERSION_QUERY_RESULT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_PROVISIONED_CONFIG_VERSION_QUERY_RESULT_ITEM* Items;
        };

        struct FABRIC_PROVISION_APPLICATION_TYPE_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR BuildPath;
            Windows.Win32.Foundation.BOOLEAN Async;
            void* Reserved;
        };

        struct FABRIC_PROVISION_APPLICATION_TYPE_DESCRIPTION_BASE
        {
            Microsoft.ServiceFabric.FABRIC_PROVISION_APPLICATION_TYPE_KIND Kind;
            void* Value;
        };

        struct FABRIC_PROVISION_APPLICATION_TYPE_DESCRIPTION_EX1
        {
            Microsoft.ServiceFabric.FABRIC_APPLICATION_PACKAGE_CLEANUP_POLICY ApplicationPackageCleanupPolicy;
            void* Reserved;
        };

        struct FABRIC_PUT_CUSTOM_PROPERTY_OPERATION
        {
            Windows.Win32.Foundation.PWSTR PropertyName;
            Microsoft.ServiceFabric.FABRIC_PROPERTY_TYPE_ID PropertyTypeId;
            void* PropertyValue;
            Windows.Win32.Foundation.PWSTR PropertyCustomTypeId;
            void* Reserved;
        };

        struct FABRIC_PUT_PROPERTY_OPERATION
        {
            Windows.Win32.Foundation.PWSTR PropertyName;
            Microsoft.ServiceFabric.FABRIC_PROPERTY_TYPE_ID PropertyTypeId;
            void* PropertyValue;
            void* Reserved;
        };

        struct FABRIC_QUERY_PAGING_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR ContinuationToken;
            INT32 MaxResults;
            void* Reserved;
        };

        struct FABRIC_RECONFIGURATION_INFORMATION_QUERY_RESULT
        {
            Microsoft.ServiceFabric.FABRIC_REPLICA_ROLE PreviousConfigurationRole;
            Microsoft.ServiceFabric.FABRIC_RECONFIGURATION_PHASE ReconfigurationPhase;
            Microsoft.ServiceFabric.FABRIC_RECONFIGURATION_TYPE ReconfigurationType;
            Windows.Win32.Foundation.FILETIME ReconfigurationStartTimeUtc;
            void* Reserved;
        };

        struct FABRIC_REMOTE_REPLICATOR_ACKNOWLEDGEMENT_DETAIL
        {
            INT64 AverageReceiveDurationMilliseconds;
            INT64 AverageApplyDurationMilliseconds;
            INT64 NotReceivedCount;
            INT64 ReceivedAndNotAppliedCount;
            void* Reserved;
        };

        struct FABRIC_REMOTE_REPLICATOR_ACKNOWLEDGEMENT_STATUS
        {
            Microsoft.ServiceFabric.FABRIC_REMOTE_REPLICATOR_ACKNOWLEDGEMENT_DETAIL* CopyStreamAcknowledgementDetails;
            Microsoft.ServiceFabric.FABRIC_REMOTE_REPLICATOR_ACKNOWLEDGEMENT_DETAIL* ReplicationStreamAcknowledgementDetails;
            void* Reserved;
        };

        struct FABRIC_REMOTE_REPLICATOR_STATUS
        {
            INT64 ReplicaId;
            Windows.Win32.Foundation.FILETIME LastAcknowledgementProcessedTimeUtc;
            INT64 LastReceivedReplicationSequenceNumber;
            INT64 LastAppliedReplicationSequenceNumber;
            Windows.Win32.Foundation.BOOLEAN IsInBuild;
            INT64 LastReceivedCopySequenceNumber;
            INT64 LastAppliedCopySequenceNumber;
            void* Reserved;
        };

        struct FABRIC_REMOTE_REPLICATOR_STATUS_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_REMOTE_REPLICATOR_STATUS* Items;
        };

        struct FABRIC_REMOVE_REPLICA_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            GUID PartitionId;
            INT64 ReplicaOrInstanceId;
            void* Reserved;
        };

        struct FABRIC_REMOVE_REPLICA_DESCRIPTION_EX1
        {
            Windows.Win32.Foundation.BOOLEAN ForceRemove;
            void* Reserved;
        };

        struct FABRIC_REPAIR_APPROVE_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_REPAIR_SCOPE_IDENTIFIER* Scope;
            Windows.Win32.Foundation.PWSTR RepairTaskId;
            INT64 Version;
            void* Reserved;
        };

        struct FABRIC_REPAIR_CANCEL_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_REPAIR_SCOPE_IDENTIFIER* Scope;
            Windows.Win32.Foundation.PWSTR RepairTaskId;
            INT64 Version;
            Windows.Win32.Foundation.BOOLEAN RequestAbort;
            void* Reserved;
        };

        struct FABRIC_REPAIR_DELETE_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_REPAIR_SCOPE_IDENTIFIER* Scope;
            Windows.Win32.Foundation.PWSTR RepairTaskId;
            INT64 Version;
            void* Reserved;
        };

        struct FABRIC_REPAIR_EXECUTOR_STATE
        {
            Windows.Win32.Foundation.PWSTR Executor;
            Windows.Win32.Foundation.PWSTR ExecutorData;
            void* Reserved;
        };

        struct FABRIC_REPAIR_IMPACT_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_REPAIR_IMPACT_KIND Kind;
            void* Value;
        };

        struct FABRIC_REPAIR_NODE_IMPACT
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            Microsoft.ServiceFabric.FABRIC_REPAIR_NODE_IMPACT_LEVEL ImpactLevel;
            void* Reserved;
        };

        struct FABRIC_REPAIR_NODE_IMPACT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_REPAIR_NODE_IMPACT* Items;
        };

        struct FABRIC_REPAIR_RESULT_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_REPAIR_TASK_RESULT ResultStatus;
            Windows.Win32.Foundation.HRESULT ResultCode;
            Windows.Win32.Foundation.PWSTR ResultDetails;
            void* Reserved;
        };

        struct FABRIC_REPAIR_SCOPE_IDENTIFIER
        {
            Microsoft.ServiceFabric.FABRIC_REPAIR_SCOPE_IDENTIFIER_KIND Kind;
            void* Value;
        };

        struct FABRIC_REPAIR_TARGET_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_REPAIR_TARGET_KIND Kind;
            void* Value;
        };

        struct FABRIC_REPAIR_TASK
        {
            Microsoft.ServiceFabric.FABRIC_REPAIR_SCOPE_IDENTIFIER* Scope;
            Windows.Win32.Foundation.PWSTR TaskId;
            INT64 Version;
            Windows.Win32.Foundation.PWSTR Description;
            Microsoft.ServiceFabric.FABRIC_REPAIR_TASK_STATE State;
            UINT32 Flags;
            Windows.Win32.Foundation.PWSTR Action;
            Microsoft.ServiceFabric.FABRIC_REPAIR_TARGET_DESCRIPTION* Target;
            Microsoft.ServiceFabric.FABRIC_REPAIR_EXECUTOR_STATE* ExecutorState;
            Microsoft.ServiceFabric.FABRIC_REPAIR_IMPACT_DESCRIPTION* Impact;
            Microsoft.ServiceFabric.FABRIC_REPAIR_RESULT_DESCRIPTION* Result;
            Microsoft.ServiceFabric.FABRIC_REPAIR_TASK_HISTORY* History;
            void* Reserved;
        };

        struct FABRIC_REPAIR_TASK_EX1
        {
            Windows.Win32.Foundation.BOOLEAN PerformPreparingHealthCheck;
            Windows.Win32.Foundation.BOOLEAN PerformRestoringHealthCheck;
            Microsoft.ServiceFabric.FABRIC_REPAIR_TASK_HEALTH_CHECK_STATE PreparingHealthCheckState;
            Microsoft.ServiceFabric.FABRIC_REPAIR_TASK_HEALTH_CHECK_STATE RestoringHealthCheckState;
            void* Reserved;
        };

        struct FABRIC_REPAIR_TASK_HEALTH_POLICY_UPDATE_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_REPAIR_SCOPE_IDENTIFIER* Scope;
            Windows.Win32.Foundation.PWSTR RepairTaskId;
            INT64 Version;
            UINT32 Flags;
            Windows.Win32.Foundation.BOOLEAN PerformPreparingHealthCheck;
            Windows.Win32.Foundation.BOOLEAN PerformRestoringHealthCheck;
            void* Reserved;
        };

        struct FABRIC_REPAIR_TASK_HISTORY
        {
            Windows.Win32.Foundation.FILETIME CreatedUtcTimestamp;
            Windows.Win32.Foundation.FILETIME ClaimedUtcTimestamp;
            Windows.Win32.Foundation.FILETIME PreparingUtcTimestamp;
            Windows.Win32.Foundation.FILETIME ApprovedUtcTimestamp;
            Windows.Win32.Foundation.FILETIME ExecutingUtcTimestamp;
            Windows.Win32.Foundation.FILETIME RestoringUtcTimestamp;
            Windows.Win32.Foundation.FILETIME CompletedUtcTimestamp;
            void* Reserved;
        };

        struct FABRIC_REPAIR_TASK_HISTORY_EX1
        {
            Windows.Win32.Foundation.FILETIME PreparingHealthCheckStartUtcTimestamp;
            Windows.Win32.Foundation.FILETIME PreparingHealthCheckEndUtcTimestamp;
            Windows.Win32.Foundation.FILETIME RestoringHealthCheckStartUtcTimestamp;
            Windows.Win32.Foundation.FILETIME RestoringHealthCheckEndUtcTimestamp;
            void* Reserved;
        };

        struct FABRIC_REPAIR_TASK_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_REPAIR_TASK* Items;
        };

        struct FABRIC_REPAIR_TASK_QUERY_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_REPAIR_SCOPE_IDENTIFIER* Scope;
            Windows.Win32.Foundation.PWSTR TaskIdFilter;
            UINT32 StateFilter;
            Windows.Win32.Foundation.PWSTR ExecutorFilter;
            void* Reserved;
        };

        struct FABRIC_REPLICAS_HEALTH_EVALUATION
        {
            Windows.Win32.Foundation.PWSTR Description;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            UINT32 TotalCount;
            BYTE MaxPercentUnhealthyReplicasPerPartition;
            void* Reserved;
        };

        struct FABRIC_REPLICATOR_QUEUE_STATUS
        {
            UINT32 QueueUtilizationPercentage;
            INT64 QueueMemorySize;
            INT64 FirstSequenceNumber;
            INT64 CompletedSequenceNumber;
            INT64 CommittedSequenceNumber;
            INT64 LastSequenceNumber;
            void* Reserved;
        };

        struct FABRIC_REPLICATOR_SETTINGS
        {
            UINT32 Flags;
            UINT32 RetryIntervalMilliseconds;
            UINT32 BatchAcknowledgementIntervalMilliseconds;
            Windows.Win32.Foundation.PWSTR ReplicatorAddress;
            Windows.Win32.Foundation.BOOLEAN RequireServiceAck;
            UINT32 InitialReplicationQueueSize;
            UINT32 MaxReplicationQueueSize;
            UINT32 InitialCopyQueueSize;
            UINT32 MaxCopyQueueSize;
            Microsoft.ServiceFabric.FABRIC_SECURITY_CREDENTIALS* SecurityCredentials;
            void* Reserved;
        };

        struct FABRIC_REPLICATOR_SETTINGS_EX1
        {
            UINT32 MaxReplicationQueueMemorySize;
            Windows.Win32.Foundation.BOOLEAN SecondaryClearAcknowledgedOperations;
            UINT32 MaxReplicationMessageSize;
            void* Reserved;
        };

        struct FABRIC_REPLICATOR_SETTINGS_EX2
        {
            Windows.Win32.Foundation.BOOLEAN UseStreamFaultsAndEndOfStreamOperationAck;
            void* Reserved;
        };

        struct FABRIC_REPLICATOR_SETTINGS_EX3
        {
            UINT32 InitialPrimaryReplicationQueueSize;
            UINT32 MaxPrimaryReplicationQueueSize;
            UINT32 MaxPrimaryReplicationQueueMemorySize;
            UINT32 InitialSecondaryReplicationQueueSize;
            UINT32 MaxSecondaryReplicationQueueSize;
            UINT32 MaxSecondaryReplicationQueueMemorySize;
            UINT32 PrimaryWaitForPendingQuorumsTimeoutMilliseconds;
            void* Reserved;
        };

        struct FABRIC_REPLICATOR_SETTINGS_EX4
        {
            Windows.Win32.Foundation.PWSTR ReplicatorListenAddress;
            Windows.Win32.Foundation.PWSTR ReplicatorPublishAddress;
            void* Reserved;
        };

        struct FABRIC_REPLICATOR_STATUS_QUERY_RESULT
        {
            Microsoft.ServiceFabric.FABRIC_REPLICA_ROLE Role;
            void* Value;
        };

        struct FABRIC_REPLICA_HEALTH
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_KIND Kind;
            void* Value;
        };

        struct FABRIC_REPLICA_HEALTH_EVALUATION
        {
            Windows.Win32.Foundation.PWSTR Description;
            GUID PartitionId;
            INT64 ReplicaOrInstanceId;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            void* Reserved;
        };

        struct FABRIC_REPLICA_HEALTH_QUERY_DESCRIPTION
        {
            GUID PartitionId;
            INT64 ReplicaOrInstanceId;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_HEALTH_POLICY* HealthPolicy;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVENTS_FILTER* EventsFilter;
            void* Reserved;
        };

        struct FABRIC_REPLICA_HEALTH_STATE
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_KIND Kind;
            void* Value;
        };

        struct FABRIC_REPLICA_HEALTH_STATES_FILTER
        {
            UINT32 HealthStateFilter;
            void* Reserved;
        };

        struct FABRIC_REPLICA_HEALTH_STATE_CHUNK
        {
            INT64 ReplicaOrInstanceId;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE HealthState;
            void* Reserved;
        };

        struct FABRIC_REPLICA_HEALTH_STATE_CHUNK_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_REPLICA_HEALTH_STATE_CHUNK* Items;
            UINT32 TotalCount;
            void* Reserved;
        };

        struct FABRIC_REPLICA_HEALTH_STATE_FILTER
        {
            UINT32 HealthStateFilter;
            INT64 ReplicaOrInstanceIdFilter;
            void* Reserved;
        };

        struct FABRIC_REPLICA_HEALTH_STATE_FILTER_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_REPLICA_HEALTH_STATE_FILTER* Items;
        };

        struct FABRIC_REPLICA_HEALTH_STATE_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_REPLICA_HEALTH_STATE* Items;
        };

        struct FABRIC_REPLICA_INFORMATION
        {
            INT64 Id;
            Microsoft.ServiceFabric.FABRIC_REPLICA_ROLE Role;
            Microsoft.ServiceFabric.FABRIC_REPLICA_STATUS Status;
            Windows.Win32.Foundation.PWSTR ReplicatorAddress;
            INT64 CurrentProgress;
            INT64 CatchUpCapability;
            void* Reserved;
        };

        struct FABRIC_REPLICA_INFORMATION_EX1
        {
            Windows.Win32.Foundation.BOOLEAN MustCatchup;
            void* Reserved;
        };

        struct FABRIC_REPLICA_LOAD_INFORMATION
        {
            GUID PartitionId;
            INT64 ReplicaOrInstanceId;
            Microsoft.ServiceFabric.FABRIC_LOAD_METRIC_REPORT_LIST* LoadMetricReports;
            void* Reserved;
        };

        struct FABRIC_REPLICA_LOAD_INFORMATION_QUERY_DESCRIPTION
        {
            GUID PartitionId;
            INT64 ReplicaOrInstanceId;
            void* Reserved;
        };

        struct FABRIC_REPLICA_SET_CONFIGURATION
        {
            UINT32 ReplicaCount;
            Microsoft.ServiceFabric.FABRIC_REPLICA_INFORMATION* Replicas;
            UINT32 WriteQuorum;
            void* Reserved;
        };

        struct FABRIC_REPLICA_STATUS_QUERY_RESULT
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_REPLICA_KIND Kind;
            void* Value;
            void* Reserved;
        };

        struct FABRIC_RESOLVED_SERVICE_ENDPOINT
        {
            Windows.Win32.Foundation.PWSTR Address;
            Microsoft.ServiceFabric.FABRIC_SERVICE_ENDPOINT_ROLE Role;
            void* Reserved;
        };

        struct FABRIC_SERVICE_PARTITION_INFORMATION
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_PARTITION_KIND Kind;
            void* Value;
        };

        struct FABRIC_RESOLVED_SERVICE_PARTITION
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_PARTITION_INFORMATION Info;
            UINT32 EndpointCount;
            Microsoft.ServiceFabric.FABRIC_RESOLVED_SERVICE_ENDPOINT* Endpoints;
            UINT16* ServiceName;
            void* Reserved;
        };

        struct FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            UINT16* ApplicationName;
            Windows.Win32.Foundation.PWSTR ServiceManifestName;
            Windows.Win32.Foundation.PWSTR CodePackageName;
            INT64 CodePackageInstanceId;
            void* Reserved;
        };

        struct FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION2
        {
            Microsoft.ServiceFabric.FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION_KIND Kind;
            void* Value;
        };

        struct FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION_USING_NODE_NAME
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            UINT16* ApplicationName;
            Windows.Win32.Foundation.PWSTR ServiceManifestName;
            Windows.Win32.Foundation.PWSTR CodePackageName;
            INT64 CodePackageInstanceId;
            void* Reserved;
        };

        struct FABRIC_RESTART_DEPLOYED_CODE_PACKAGE_DESCRIPTION_USING_NODE_NAME_EX1
        {
            Windows.Win32.Foundation.PWSTR ServicePackageActivationId;
            void* Reserved;
        };

        struct FABRIC_RESTART_NODE_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            UINT64 NodeInstanceId;
            void* Reserved;
        };

        struct FABRIC_RESTART_NODE_DESCRIPTION2
        {
            Microsoft.ServiceFabric.FABRIC_RESTART_NODE_DESCRIPTION_KIND Kind;
            void* Value;
        };

        struct FABRIC_RESTART_NODE_DESCRIPTION_EX1
        {
            Windows.Win32.Foundation.BOOLEAN CreateFabricDump;
            void* Reserved;
        };

        struct FABRIC_RESTART_NODE_DESCRIPTION_USING_NODE_NAME
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            UINT64 NodeInstanceId;
            Windows.Win32.Foundation.BOOLEAN ShouldCreateFabricDump;
            void* Reserved;
        };

        struct FABRIC_RESTART_NODE_STATUS
        {
            Microsoft.ServiceFabric.FABRIC_NODE_RESULT* NodeResult;
            void* Reserved;
        };

        struct FABRIC_RESTART_REPLICA_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            GUID PartitionId;
            INT64 ReplicaOrInstanceId;
            void* Reserved;
        };

        struct FABRIC_ROLLING_UPGRADE_MONITORING_POLICY
        {
            Microsoft.ServiceFabric.FABRIC_MONITORED_UPGRADE_FAILURE_ACTION FailureAction;
            UINT32 HealthCheckWaitDurationInSeconds;
            UINT32 HealthCheckRetryTimeoutInSeconds;
            UINT32 UpgradeTimeoutInSeconds;
            UINT32 UpgradeDomainTimeoutInSeconds;
            void* Reserved;
        };

        struct FABRIC_ROLLING_UPGRADE_MONITORING_POLICY_EX1
        {
            UINT32 HealthCheckStableDurationInSeconds;
            void* Reserved;
        };

        struct FABRIC_ROLLING_UPGRADE_POLICY_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_ROLLING_UPGRADE_MODE RollingUpgradeMode;
            Windows.Win32.Foundation.BOOLEAN ForceRestart;
            UINT32 UpgradeReplicaSetCheckTimeoutInSeconds;
            void* Reserved;
        };

        struct FABRIC_ROLLING_UPGRADE_POLICY_DESCRIPTION_EX1
        {
            Microsoft.ServiceFabric.FABRIC_ROLLING_UPGRADE_MONITORING_POLICY* MonitoringPolicy;
            void* HealthPolicy;
            void* Reserved;
        };

        struct FABRIC_ROLLING_UPGRADE_POLICY_DESCRIPTION_EX2
        {
            Windows.Win32.Foundation.BOOLEAN EnableDeltaHealthEvaluation;
            void* UpgradeHealthPolicy;
            void* Reserved;
        };

        struct FABRIC_ROLLING_UPGRADE_POLICY_DESCRIPTION_EX3
        {
            Microsoft.ServiceFabric.FABRIC_APPLICATION_HEALTH_POLICY_MAP* ApplicationHealthPolicyMap;
            void* Reserved;
        };

        struct FABRIC_RUNAS_POLICY_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR UserName;
            void* Reserved;
        };

        struct FABRIC_SAFETY_CHECK
        {
            Microsoft.ServiceFabric.FABRIC_SAFETY_CHECK_KIND Kind;
            void* Value;
        };

        struct FABRIC_SAFETY_CHECK_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_SAFETY_CHECK* Items;
        };

        struct FABRIC_SCALING_MECHANISM
        {
            Microsoft.ServiceFabric.FABRIC_SCALING_MECHANISM_KIND ScalingMechanismKind;
            void* ScalingMechanismDescription;
        };

        struct FABRIC_SCALING_MECHANISM_ADD_REMOVE_INCREMENTAL_NAMED_PARTITION
        {
            INT32 MaximumPartitionCount;
            INT32 MinimumPartitionCount;
            INT32 ScaleIncrement;
            void* Reserved;
        };

        struct FABRIC_SCALING_MECHANISM_PARTITION_INSTANCE_COUNT
        {
            INT32 MaximumInstanceCount;
            INT32 MinimumInstanceCount;
            INT32 ScaleIncrement;
            void* Reserved;
        };

        struct FABRIC_SCALING_TRIGGER
        {
            Microsoft.ServiceFabric.FABRIC_SCALING_TRIGGER_KIND ScalingTriggerKind;
            void* ScalingTriggerDescription;
        };

        struct FABRIC_SCALING_TRIGGER_AVERAGE_PARTITION_LOAD
        {
            Windows.Win32.Foundation.PWSTR MetricName;
            DOUBLE LowerLoadThreshold;
            DOUBLE UpperLoadThreshold;
            UINT32 ScaleIntervalInSeconds;
            void* Reserved;
        };

        struct FABRIC_SCALING_TRIGGER_AVERAGE_SERVICE_LOAD
        {
            Windows.Win32.Foundation.PWSTR MetricName;
            DOUBLE LowerLoadThreshold;
            DOUBLE UpperLoadThreshold;
            UINT32 ScaleIntervalInSeconds;
            void* Reserved;
        };

        struct FABRIC_SCALING_TRIGGER_AVERAGE_SERVICE_LOAD_EX1
        {
            Windows.Win32.Foundation.BOOLEAN UseOnlyPrimaryLoad;
            void* Reserved;
        };

        struct FABRIC_SECONDARY_REPLICATOR_STATUS_QUERY_RESULT
        {
            Microsoft.ServiceFabric.FABRIC_REPLICATOR_QUEUE_STATUS* ReplicationQueueStatus;
            Windows.Win32.Foundation.FILETIME LastReplicationOperationReceivedTimeUtc;
            Windows.Win32.Foundation.BOOLEAN IsInBuild;
            Microsoft.ServiceFabric.FABRIC_REPLICATOR_QUEUE_STATUS* CopyQueueStatus;
            Windows.Win32.Foundation.FILETIME LastCopyOperationReceivedTimeUtc;
            Windows.Win32.Foundation.FILETIME LastAcknowledgementSentTimeUtc;
            void* Reserved;
        };

        struct FABRIC_SECRET
        {
            Windows.Win32.Foundation.PWSTR Name;
            Windows.Win32.Foundation.PWSTR Version;
            Windows.Win32.Foundation.PWSTR Value;
            Windows.Win32.Foundation.PWSTR Kind;
            Windows.Win32.Foundation.PWSTR ContentType;
        };

        struct FABRIC_SECRET_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_SECRET* Items;
        };

        struct FABRIC_SECRET_REFERENCE
        {
            Windows.Win32.Foundation.PWSTR Name;
            Windows.Win32.Foundation.PWSTR Version;
        };

        struct FABRIC_SECRET_REFERENCE_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_SECRET_REFERENCE* Items;
        };

        struct FABRIC_SECURITY_CREDENTIALS
        {
            Microsoft.ServiceFabric.FABRIC_SECURITY_CREDENTIAL_KIND Kind;
            void* Value;
        };

        struct FABRIC_SECURITY_GROUP_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR Name;
            Windows.Win32.Foundation.PWSTR Sid;
            Microsoft.ServiceFabric.FABRIC_STRING_LIST* DomainGroupMembers;
            Microsoft.ServiceFabric.FABRIC_STRING_LIST* SystemGroupMembers;
            Microsoft.ServiceFabric.FABRIC_STRING_LIST* DomainUserMembers;
            void* Reserved;
        };

        struct FABRIC_SECURITY_GROUP_DESCRIPTION_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_SECURITY_GROUP_DESCRIPTION* Items;
        };

        struct FABRIC_SECURITY_USER_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR Name;
            Windows.Win32.Foundation.PWSTR Sid;
            Microsoft.ServiceFabric.FABRIC_STRING_LIST* ParentSystemGroups;
            Microsoft.ServiceFabric.FABRIC_STRING_LIST* ParentApplicationGroups;
            void* Reserved;
        };

        struct FABRIC_SECURITY_USER_DESCRIPTION_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_SECURITY_USER_DESCRIPTION* Items;
        };

        struct FABRIC_SEED_NODE_SAFETY_CHECK
        {
            void* Reserved;
        };

        struct FABRIC_SELECTED_PARTITION
        {
            UINT16* ServiceName;
            GUID PartitionId;
            void* Reserved;
        };

        struct FABRIC_SERVICES_HEALTH_EVALUATION
        {
            Windows.Win32.Foundation.PWSTR Description;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Windows.Win32.Foundation.PWSTR ServiceTypeName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            UINT32 TotalCount;
            BYTE MaxPercentUnhealthyServices;
            void* Reserved;
        };

        struct FABRIC_SERVICE_CORRELATION_DESCRIPTION
        {
            UINT16* ServiceName;
            Microsoft.ServiceFabric.FABRIC_SERVICE_CORRELATION_SCHEME Scheme;
            void* Reserved;
        };

        struct FABRIC_SERVICE_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_DESCRIPTION_KIND Kind;
            void* Value;
        };

        struct FABRIC_SERVICE_FROM_TEMPLATE_DESCRIPTION
        {
            UINT16* ApplicationName;
            UINT16* ServiceName;
            Windows.Win32.Foundation.PWSTR ServiceDnsName;
            Windows.Win32.Foundation.PWSTR ServiceTypeName;
            Microsoft.ServiceFabric.FABRIC_SERVICE_PACKAGE_ACTIVATION_MODE ServicePackageActivationMode;
            UINT32 InitializationDataSize;
            BYTE* InitializationData;
            void* Reserved;
        };

        struct FABRIC_SERVICE_GROUP_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_DESCRIPTION* Description;
            UINT32 MemberCount;
            Microsoft.ServiceFabric.FABRIC_SERVICE_GROUP_MEMBER_DESCRIPTION* MemberDescriptions;
            void* Reserved;
        };

        struct FABRIC_SERVICE_GROUP_FROM_TEMPLATE_DESCRIPTION
        {
            UINT16* ApplicationName;
            UINT16* ServiceName;
            Windows.Win32.Foundation.PWSTR ServiceTypeName;
            Microsoft.ServiceFabric.FABRIC_SERVICE_PACKAGE_ACTIVATION_MODE ServicePackageActivationMode;
            UINT32 InitializationDataSize;
            BYTE* InitializationData;
            void* Reserved;
        };

        struct FABRIC_SERVICE_GROUP_MEMBER_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR ServiceType;
            UINT16* ServiceName;
            UINT32 InitializationDataSize;
            BYTE* InitializationData;
            UINT32 MetricCount;
            Microsoft.ServiceFabric.FABRIC_SERVICE_LOAD_METRIC_DESCRIPTION* Metrics;
            void* Reserved;
        };

        struct FABRIC_SERVICE_GROUP_MEMBER_MEMBER_QUERY_RESULT_ITEM
        {
            Windows.Win32.Foundation.PWSTR ServiceType;
            UINT16* ServiceName;
            void* Reserved;
        };

        struct FABRIC_SERVICE_GROUP_MEMBER_MEMBER_QUERY_RESULT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_SERVICE_GROUP_MEMBER_MEMBER_QUERY_RESULT_ITEM* Items;
        };

        struct FABRIC_SERVICE_GROUP_MEMBER_QUERY_DESCRIPTION
        {
            UINT16* ApplicationName;
            UINT16* ServiceNameFilter;
            void* Reserved;
        };

        struct FABRIC_SERVICE_GROUP_MEMBER_QUERY_RESULT_ITEM
        {
            UINT16* ServiceName;
            Microsoft.ServiceFabric.FABRIC_SERVICE_GROUP_MEMBER_MEMBER_QUERY_RESULT_LIST* Members;
            void* Reserved;
        };

        struct FABRIC_SERVICE_GROUP_MEMBER_QUERY_RESULT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_SERVICE_GROUP_MEMBER_QUERY_RESULT_ITEM* Items;
        };

        struct FABRIC_SERVICE_GROUP_MEMBER_TYPE_QUERY_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR ApplicationTypeName;
            Windows.Win32.Foundation.PWSTR ApplicationTypeVersion;
            Windows.Win32.Foundation.PWSTR ServiceGroupTypeNameFilter;
            void* Reserved;
        };

        struct FABRIC_SERVICE_GROUP_MEMBER_TYPE_QUERY_RESULT_ITEM
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_GROUP_TYPE_MEMBER_DESCRIPTION_LIST* ServiceGroupMemberTypeDescription;
            Windows.Win32.Foundation.PWSTR ServiceManifestVersion;
            Windows.Win32.Foundation.PWSTR ServiceManifestName;
            void* Reserved;
        };

        struct FABRIC_SERVICE_GROUP_MEMBER_TYPE_QUERY_RESULT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_SERVICE_GROUP_MEMBER_TYPE_QUERY_RESULT_ITEM* Items;
        };

        struct FABRIC_SERVICE_GROUP_TYPE_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_TYPE_DESCRIPTION* Description;
            Microsoft.ServiceFabric.FABRIC_SERVICE_GROUP_TYPE_MEMBER_DESCRIPTION_LIST* Members;
            Windows.Win32.Foundation.BOOLEAN UseImplicitFactory;
            void* Reserved;
        };

        struct FABRIC_SERVICE_GROUP_TYPE_DESCRIPTION_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_SERVICE_GROUP_TYPE_DESCRIPTION* Items;
        };

        struct FABRIC_SERVICE_GROUP_TYPE_MEMBER_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR ServiceTypeName;
            Microsoft.ServiceFabric.FABRIC_SERVICE_LOAD_METRIC_DESCRIPTION_LIST* LoadMetrics;
            void* Reserved;
        };

        struct FABRIC_SERVICE_GROUP_TYPE_MEMBER_DESCRIPTION_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_SERVICE_GROUP_TYPE_MEMBER_DESCRIPTION* Items;
        };

        struct FABRIC_SERVICE_GROUP_UPDATE_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_UPDATE_DESCRIPTION* Description;
            void* Reserved;
        };

        struct FABRIC_SERVICE_HEALTH
        {
            UINT16* ServiceName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVENT_LIST* HealthEvents;
            Microsoft.ServiceFabric.FABRIC_PARTITION_HEALTH_STATE_LIST* PartitionHealthStates;
            void* Reserved;
        };

        struct FABRIC_SERVICE_HEALTH_EVALUATION
        {
            Windows.Win32.Foundation.PWSTR Description;
            UINT16* ServiceName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            void* Reserved;
        };

        struct FABRIC_SERVICE_HEALTH_EX1
        {
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            void* Reserved;
        };

        struct FABRIC_SERVICE_HEALTH_EX2
        {
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATISTICS* HealthStatistics;
            void* Reserved;
        };

        struct FABRIC_SERVICE_HEALTH_QUERY_DESCRIPTION
        {
            UINT16* ServiceName;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_HEALTH_POLICY* HealthPolicy;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVENTS_FILTER* EventsFilter;
            Microsoft.ServiceFabric.FABRIC_PARTITION_HEALTH_STATES_FILTER* PartitionsFilter;
            void* Reserved;
        };

        struct FABRIC_SERVICE_HEALTH_QUERY_DESCRIPTION_EX1
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_HEALTH_STATISTICS_FILTER* HealthStatisticsFilter;
            void* Reserved;
        };

        struct FABRIC_SERVICE_HEALTH_REPORT
        {
            UINT16* ServiceName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_INFORMATION* HealthInformation;
            void* Reserved;
        };

        struct FABRIC_SERVICE_HEALTH_STATE
        {
            UINT16* ServiceName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            void* Reserved;
        };

        struct FABRIC_SERVICE_HEALTH_STATES_FILTER
        {
            UINT32 HealthStateFilter;
            void* Reserved;
        };

        struct FABRIC_SERVICE_HEALTH_STATE_CHUNK
        {
            UINT16* ServiceName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE HealthState;
            Microsoft.ServiceFabric.FABRIC_PARTITION_HEALTH_STATE_CHUNK_LIST* PartitionHealthStateChunks;
            void* Reserved;
        };

        struct FABRIC_SERVICE_HEALTH_STATE_CHUNK_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_SERVICE_HEALTH_STATE_CHUNK* Items;
            UINT32 TotalCount;
            void* Reserved;
        };

        struct FABRIC_SERVICE_HEALTH_STATE_FILTER
        {
            UINT32 HealthStateFilter;
            UINT16* ServiceNameFilter;
            Microsoft.ServiceFabric.FABRIC_PARTITION_HEALTH_STATE_FILTER_LIST* PartitionFilters;
            void* Reserved;
        };

        struct FABRIC_SERVICE_HEALTH_STATE_FILTER_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_SERVICE_HEALTH_STATE_FILTER* Items;
        };

        struct FABRIC_SERVICE_HEALTH_STATE_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_SERVICE_HEALTH_STATE* Items;
        };

        struct FABRIC_SERVICE_HEALTH_STATISTICS_FILTER
        {
            Windows.Win32.Foundation.BOOLEAN ExcludeHealthStatistics;
            void* Reserved;
        };

        struct FABRIC_SERVICE_LOAD_METRIC_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR Name;
            Microsoft.ServiceFabric.FABRIC_SERVICE_LOAD_METRIC_WEIGHT Weight;
            UINT32 PrimaryDefaultLoad;
            UINT32 SecondaryDefaultLoad;
            void* Reserved;
        };

        struct FABRIC_SERVICE_LOAD_METRIC_DESCRIPTION_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_SERVICE_LOAD_METRIC_DESCRIPTION* Items;
        };

        struct FABRIC_SERVICE_NAME_QUERY_DESCRIPTION
        {
            GUID PartitionId;
            void* Reserved;
        };

        struct FABRIC_SERVICE_NAME_QUERY_RESULT
        {
            UINT16* ServiceName;
            void* Reserved;
        };

        struct FABRIC_SERVICE_NOTIFICATION
        {
            UINT16* ServiceName;
            GUID PartitionId;
            UINT32 EndpointCount;
            Microsoft.ServiceFabric.FABRIC_RESOLVED_SERVICE_ENDPOINT* Endpoints;
            Microsoft.ServiceFabric.FABRIC_SERVICE_PARTITION_INFORMATION* PartitionInfo;
            void* Reserved;
        };

        struct FABRIC_SERVICE_NOTIFICATION_FILTER_DESCRIPTION
        {
            UINT16* Name;
            Microsoft.ServiceFabric.FABRIC_SERVICE_NOTIFICATION_FILTER_FLAGS Flags;
            void* Reserved;
        };


        struct FABRIC_SERVICE_PARTITION_QUERY_DESCRIPTION
        {
            UINT16* ServiceName;
            GUID PartitionIdFilter;
            void* Reserved;
        };

        struct FABRIC_SERVICE_PARTITION_QUERY_DESCRIPTION_EX1
        {
            Windows.Win32.Foundation.PWSTR ContinuationToken;
            void* Reserved;
        };

        struct FABRIC_SERVICE_PARTITION_QUERY_RESULT_ITEM
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_KIND Kind;
            void* Value;
        };

        struct FABRIC_SERVICE_PARTITION_QUERY_RESULT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_SERVICE_PARTITION_QUERY_RESULT_ITEM* Items;
        };

        struct FABRIC_SERVICE_PLACEMENT_POLICY_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_PLACEMENT_POLICY_TYPE Type;
            void* Value;
        };

        struct FABRIC_SERVICE_PLACEMENT_POLICY_LIST
        {
            UINT32 PolicyCount;
            Microsoft.ServiceFabric.FABRIC_SERVICE_PLACEMENT_POLICY_DESCRIPTION* Policies;
        };

        struct FABRIC_SERVICE_QUERY_DESCRIPTION
        {
            UINT16* ApplicationName;
            UINT16* ServiceNameFilter;
            void* Reserved;
        };

        struct FABRIC_SERVICE_QUERY_DESCRIPTION_EX1
        {
            Windows.Win32.Foundation.PWSTR ContinuationToken;
            void* Reserved;
        };

        struct FABRIC_SERVICE_QUERY_DESCRIPTION_EX2
        {
            Windows.Win32.Foundation.PWSTR ServiceTypeNameFilter;
            void* Reserved;
        };

        struct FABRIC_SERVICE_QUERY_DESCRIPTION_EX3
        {
            INT32 MaxResults;
            void* Reserved;
        };

        struct FABRIC_SERVICE_QUERY_RESULT_ITEM
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_KIND Kind;
            void* Value;
        };

        struct FABRIC_SERVICE_QUERY_RESULT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_SERVICE_QUERY_RESULT_ITEM* Items;
        };

        struct FABRIC_SERVICE_REPLICA_QUERY_DESCRIPTION
        {
            GUID PartitionId;
            INT64 ReplicaIdOrInstanceIdFilter;
            void* Reserved;
        };

        struct FABRIC_SERVICE_REPLICA_QUERY_DESCRIPTION_EX1
        {
            UINT32 ReplicaStatusFilter;
            void* Reserved;
        };

        struct FABRIC_SERVICE_REPLICA_QUERY_DESCRIPTION_EX2
        {
            Windows.Win32.Foundation.PWSTR ContinuationToken;
            void* Reserved;
        };

        struct FABRIC_SERVICE_REPLICA_QUERY_RESULT_ITEM
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_KIND Kind;
            void* Value;
        };

        struct FABRIC_SERVICE_REPLICA_QUERY_RESULT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_SERVICE_REPLICA_QUERY_RESULT_ITEM* Items;
        };

        struct FABRIC_SERVICE_SCALING_POLICY
        {
            Microsoft.ServiceFabric.FABRIC_SCALING_TRIGGER ServiceScalingPolicyTrigger;
            Microsoft.ServiceFabric.FABRIC_SCALING_MECHANISM ServiceScalingPolicyMechanism;
            void* Reserved;
        };

        struct FABRIC_SERVICE_TYPE_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_KIND Kind;
            void* Value;
        };

        struct FABRIC_SERVICE_TYPE_DESCRIPTION_EXTENSION
        {
            Windows.Win32.Foundation.PWSTR Name;
            Windows.Win32.Foundation.PWSTR Value;
            void* Reserved;
        };

        struct FABRIC_SERVICE_TYPE_DESCRIPTION_EXTENSION_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_SERVICE_TYPE_DESCRIPTION_EXTENSION* Items;
        };

        struct FABRIC_SERVICE_TYPE_DESCRIPTION_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_SERVICE_TYPE_DESCRIPTION* Items;
        };

        struct FABRIC_SERVICE_TYPE_HEALTH_POLICY
        {
            BYTE MaxPercentUnhealthyServices;
            BYTE MaxPercentUnhealthyPartitionsPerService;
            BYTE MaxPercentUnhealthyReplicasPerPartition;
            void* Reserved;
        };

        struct FABRIC_SERVICE_TYPE_HEALTH_POLICY_MAP
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_SERVICE_TYPE_HEALTH_POLICY_MAP_ITEM* Items;
        };

        struct FABRIC_SERVICE_TYPE_HEALTH_POLICY_MAP_ITEM
        {
            Windows.Win32.Foundation.PWSTR ServiceTypeName;
            Microsoft.ServiceFabric.FABRIC_SERVICE_TYPE_HEALTH_POLICY* ServiceTypeHealthPolicy;
        };

        struct FABRIC_SERVICE_TYPE_QUERY_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR ApplicationTypeName;
            Windows.Win32.Foundation.PWSTR ApplicationTypeVersion;
            Windows.Win32.Foundation.PWSTR ServiceTypeNameFilter;
            void* Reserved;
        };

        struct FABRIC_SERVICE_TYPE_QUERY_RESULT_ITEM
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_TYPE_DESCRIPTION* ServiceTypeDescription;
            Windows.Win32.Foundation.PWSTR ServiceManifestVersion;
            void* Reserved;
        };

        struct FABRIC_SERVICE_TYPE_QUERY_RESULT_ITEM_EX1
        {
            Windows.Win32.Foundation.PWSTR ServiceManifestName;
            void* Reserved;
        };

        struct FABRIC_SERVICE_TYPE_QUERY_RESULT_ITEM_EX2
        {
            Windows.Win32.Foundation.BOOLEAN IsServiceGroup;
            void* Reserved;
        };

        struct FABRIC_SERVICE_TYPE_QUERY_RESULT_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_SERVICE_TYPE_QUERY_RESULT_ITEM* Items;
        };

        struct FABRIC_SERVICE_UPDATE_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_DESCRIPTION_KIND Kind;
            void* Value;
        };

        struct FABRIC_SINGLETON_PARTITION_INFORMATION
        {
            GUID Id;
            void* Reserved;
        };

        struct FABRIC_STARTED_EVENT
        {
            Windows.Win32.Foundation.FILETIME TimeStampUtc;
            Microsoft.ServiceFabric.FABRIC_CHAOS_PARAMETERS* ChaosParameters;
            void* Reserved;
        };

        struct FABRIC_START_APPROVED_UPGRADES_DESCRIPTION
        {
            GUID OperationId;
            Windows.Win32.Foundation.PWSTR ClusterConfigPath;
            Windows.Win32.Foundation.BOOLEAN RollbackOnFailure;
            void* Reserved;
        };

        struct FABRIC_START_CHAOS_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_CHAOS_PARAMETERS* ChaosParameters;
            void* Reserved;
        };

        struct FABRIC_START_NODE_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            UINT64 NodeInstanceId;
            Windows.Win32.Foundation.PWSTR IPAddressOrFQDN;
            UINT32 ClusterConnectionPort;
            void* Reserved;
        };

        struct FABRIC_START_NODE_DESCRIPTION2
        {
            Microsoft.ServiceFabric.FABRIC_START_NODE_DESCRIPTION_KIND Kind;
            void* Value;
        };

        struct FABRIC_START_NODE_DESCRIPTION_USING_NODE_NAME
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            UINT64 NodeInstanceId;
            Windows.Win32.Foundation.PWSTR IPAddressOrFQDN;
            UINT32 ClusterConnectionPort;
            void* Reserved;
        };

        struct FABRIC_START_NODE_STATUS
        {
            Microsoft.ServiceFabric.FABRIC_NODE_RESULT* NodeResult;
            void* Reserved;
        };

        struct FABRIC_START_PARTITION_DATA_LOSS_DESCRIPTION
        {
            GUID OperationId;
            Microsoft.ServiceFabric.FABRIC_PARTITION_SELECTOR* PartitionSelector;
            Microsoft.ServiceFabric.FABRIC_DATA_LOSS_MODE DataLossMode;
            void* Reserved;
        };

        struct FABRIC_START_PARTITION_QUORUM_LOSS_DESCRIPTION
        {
            GUID OperationId;
            Microsoft.ServiceFabric.FABRIC_PARTITION_SELECTOR* PartitionSelector;
            Microsoft.ServiceFabric.FABRIC_QUORUM_LOSS_MODE QuorumLossMode;
            INT32 QuorumLossDurationInMilliSeconds;
            void* Reserved;
        };

        struct FABRIC_START_PARTITION_RESTART_DESCRIPTION
        {
            GUID OperationId;
            Microsoft.ServiceFabric.FABRIC_PARTITION_SELECTOR* PartitionSelector;
            Microsoft.ServiceFabric.FABRIC_RESTART_PARTITION_MODE RestartPartitionMode;
            void* Reserved;
        };

        struct FABRIC_START_UPGRADE_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR ClusterConfig;
            UINT32 HealthCheckRetryTimeoutInSeconds;
            UINT32 HealthCheckWaitDurationInSeconds;
            UINT32 HealthCheckStableDurationInSeconds;
            UINT32 UpgradeDomainTimeoutInSeconds;
            UINT32 UpgradeTimeoutInSeconds;
            BYTE MaxPercentUnhealthyApplications;
            BYTE MaxPercentUnhealthyNodes;
            BYTE MaxPercentDeltaUnhealthyNodes;
            BYTE MaxPercentUpgradeDomainDeltaUnhealthyNodes;
            void* Reserved;
        };

        struct FABRIC_START_UPGRADE_DESCRIPTION_EX1
        {
            Microsoft.ServiceFabric.FABRIC_APPLICATION_HEALTH_POLICY_MAP* ApplicationHealthPolicyMap;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_DESCRIPTION
        {
            UINT16* ApplicationName;
            UINT16* ServiceName;
            Windows.Win32.Foundation.PWSTR ServiceTypeName;
            UINT32 InitializationDataSize;
            BYTE* InitializationData;
            Microsoft.ServiceFabric.FABRIC_PARTITION_SCHEME PartitionScheme;
            void* PartitionSchemeDescription;
            INT32 TargetReplicaSetSize;
            INT32 MinReplicaSetSize;
            Windows.Win32.Foundation.PWSTR PlacementConstraints;
            UINT32 CorrelationCount;
            Microsoft.ServiceFabric.FABRIC_SERVICE_CORRELATION_DESCRIPTION* Correlations;
            UINT32 MetricCount;
            Microsoft.ServiceFabric.FABRIC_SERVICE_LOAD_METRIC_DESCRIPTION* Metrics;
            Windows.Win32.Foundation.BOOLEAN HasPersistedState;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_DESCRIPTION_EX1
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_PLACEMENT_POLICY_LIST* PolicyList;
            Microsoft.ServiceFabric.FABRIC_STATEFUL_SERVICE_FAILOVER_SETTINGS* FailoverSettings;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_DESCRIPTION_EX2
        {
            Windows.Win32.Foundation.BOOLEAN IsDefaultMoveCostSpecified;
            Microsoft.ServiceFabric.FABRIC_MOVE_COST DefaultMoveCost;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_DESCRIPTION_EX3
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_PACKAGE_ACTIVATION_MODE ServicePackageActivationMode;
            Windows.Win32.Foundation.PWSTR ServiceDnsName;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_DESCRIPTION_EX4
        {
            UINT32 ScalingPolicyCount;
            Microsoft.ServiceFabric.FABRIC_SERVICE_SCALING_POLICY* ServiceScalingPolicies;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_FAILOVER_SETTINGS
        {
            UINT32 Flags;
            UINT32 ReplicaRestartWaitDurationSeconds;
            UINT32 QuorumLossWaitDurationSeconds;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_FAILOVER_SETTINGS_EX1
        {
            UINT32 StandByReplicaKeepDurationSeconds;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_PARTITION_QUERY_RESULT_ITEM
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_PARTITION_INFORMATION* PartitionInformation;
            UINT32 TargetReplicaSetSize;
            UINT32 MinReplicaSetSize;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE HealthState;
            Microsoft.ServiceFabric.FABRIC_QUERY_SERVICE_PARTITION_STATUS PartitionStatus;
            INT64 LastQuorumLossDurationInSeconds;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_PARTITION_QUERY_RESULT_ITEM_EX1
        {
            Microsoft.ServiceFabric.FABRIC_EPOCH PrimaryEpoch;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_QUERY_RESULT_ITEM
        {
            UINT16* ServiceName;
            Windows.Win32.Foundation.PWSTR ServiceTypeName;
            Windows.Win32.Foundation.PWSTR ServiceManifestVersion;
            Windows.Win32.Foundation.BOOLEAN HasPersistedState;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE HealthState;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_QUERY_RESULT_ITEM_EX1
        {
            Microsoft.ServiceFabric.FABRIC_QUERY_SERVICE_STATUS ServiceStatus;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_QUERY_RESULT_ITEM_EX2
        {
            Windows.Win32.Foundation.BOOLEAN IsServiceGroup;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_REPLICA_HEALTH
        {
            GUID PartitionId;
            INT64 ReplicaId;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVENT_LIST* HealthEvents;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_REPLICA_HEALTH_EX1
        {
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_REPLICA_HEALTH_REPORT
        {
            GUID PartitionId;
            INT64 ReplicaId;
            Microsoft.ServiceFabric.FABRIC_HEALTH_INFORMATION* HealthInformation;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_REPLICA_HEALTH_STATE
        {
            GUID PartitionId;
            INT64 ReplicaId;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_REPLICA_HEALTH_STATE_EX1
        {
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_REPLICA_QUERY_RESULT_ITEM
        {
            INT64 ReplicaId;
            Microsoft.ServiceFabric.FABRIC_REPLICA_ROLE ReplicaRole;
            Microsoft.ServiceFabric.FABRIC_QUERY_SERVICE_REPLICA_STATUS ReplicaStatus;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Windows.Win32.Foundation.PWSTR ReplicaAddress;
            Windows.Win32.Foundation.PWSTR NodeName;
            INT64 LastInBuildDurationInSeconds;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_TYPE_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR ServiceTypeName;
            Windows.Win32.Foundation.PWSTR PlacementConstraints;
            Microsoft.ServiceFabric.FABRIC_SERVICE_LOAD_METRIC_DESCRIPTION_LIST* LoadMetrics;
            Microsoft.ServiceFabric.FABRIC_SERVICE_TYPE_DESCRIPTION_EXTENSION_LIST* Extensions;
            Windows.Win32.Foundation.BOOLEAN HasPersistedState;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_TYPE_DESCRIPTION_EX1
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_PLACEMENT_POLICY_LIST* PolicyList;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_UPDATE_DESCRIPTION
        {
            UINT32 Flags;
            INT32 TargetReplicaSetSize;
            UINT32 ReplicaRestartWaitDurationSeconds;
            UINT32 QuorumLossWaitDurationSeconds;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_UPDATE_DESCRIPTION_EX1
        {
            UINT32 StandByReplicaKeepDurationSeconds;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_UPDATE_DESCRIPTION_EX2
        {
            INT32 MinReplicaSetSize;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_UPDATE_DESCRIPTION_EX3
        {
            Windows.Win32.Foundation.PWSTR PlacementConstraints;
            Microsoft.ServiceFabric.FABRIC_SERVICE_PLACEMENT_POLICY_LIST* PolicyList;
            UINT32 CorrelationCount;
            Microsoft.ServiceFabric.FABRIC_SERVICE_CORRELATION_DESCRIPTION* Correlations;
            UINT32 MetricCount;
            Microsoft.ServiceFabric.FABRIC_SERVICE_LOAD_METRIC_DESCRIPTION* Metrics;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_UPDATE_DESCRIPTION_EX4
        {
            Microsoft.ServiceFabric.FABRIC_MOVE_COST DefaultMoveCost;
            void* Reserved;
        };

        struct FABRIC_STATEFUL_SERVICE_UPDATE_DESCRIPTION_EX5
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_PARTITION_KIND RepartitionKind;
            void* RepartitionDescription;
            UINT32 ScalingPolicyCount;
            Microsoft.ServiceFabric.FABRIC_SERVICE_SCALING_POLICY* ServiceScalingPolicies;
            void* Reserved;
        };

        struct FABRIC_STATELESS_SERVICE_DESCRIPTION
        {
            UINT16* ApplicationName;
            UINT16* ServiceName;
            Windows.Win32.Foundation.PWSTR ServiceTypeName;
            UINT32 InitializationDataSize;
            BYTE* InitializationData;
            Microsoft.ServiceFabric.FABRIC_PARTITION_SCHEME PartitionScheme;
            void* PartitionSchemeDescription;
            INT32 InstanceCount;
            Windows.Win32.Foundation.PWSTR PlacementConstraints;
            UINT32 CorrelationCount;
            Microsoft.ServiceFabric.FABRIC_SERVICE_CORRELATION_DESCRIPTION* Correlations;
            UINT32 MetricCount;
            Microsoft.ServiceFabric.FABRIC_SERVICE_LOAD_METRIC_DESCRIPTION* Metrics;
            void* Reserved;
        };

        struct FABRIC_STATELESS_SERVICE_DESCRIPTION_EX1
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_PLACEMENT_POLICY_LIST* PolicyList;
            void* Reserved;
        };

        struct FABRIC_STATELESS_SERVICE_DESCRIPTION_EX2
        {
            Windows.Win32.Foundation.BOOLEAN IsDefaultMoveCostSpecified;
            Microsoft.ServiceFabric.FABRIC_MOVE_COST DefaultMoveCost;
            void* Reserved;
        };

        struct FABRIC_STATELESS_SERVICE_DESCRIPTION_EX3
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_PACKAGE_ACTIVATION_MODE ServicePackageActivationMode;
            Windows.Win32.Foundation.PWSTR ServiceDnsName;
            void* Reserved;
        };

        struct FABRIC_STATELESS_SERVICE_DESCRIPTION_EX4
        {
            UINT32 ScalingPolicyCount;
            Microsoft.ServiceFabric.FABRIC_SERVICE_SCALING_POLICY* ServiceScalingPolicies;
            void* Reserved;
        };

        struct FABRIC_STATELESS_SERVICE_INSTANCE_HEALTH
        {
            GUID PartitionId;
            INT64 InstanceId;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVENT_LIST* HealthEvents;
            void* Reserved;
        };

        struct FABRIC_STATELESS_SERVICE_INSTANCE_HEALTH_EX1
        {
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            void* Reserved;
        };

        struct FABRIC_STATELESS_SERVICE_INSTANCE_HEALTH_REPORT
        {
            GUID PartitionId;
            INT64 InstanceId;
            Microsoft.ServiceFabric.FABRIC_HEALTH_INFORMATION* HealthInformation;
            void* Reserved;
        };

        struct FABRIC_STATELESS_SERVICE_INSTANCE_HEALTH_STATE
        {
            GUID PartitionId;
            INT64 InstanceId;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            void* Reserved;
        };

        struct FABRIC_STATELESS_SERVICE_INSTANCE_HEALTH_STATE_EX1
        {
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            void* Reserved;
        };

        struct FABRIC_STATELESS_SERVICE_INSTANCE_QUERY_RESULT_ITEM
        {
            INT64 InstanceId;
            Microsoft.ServiceFabric.FABRIC_QUERY_SERVICE_REPLICA_STATUS ReplicaStatus;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Windows.Win32.Foundation.PWSTR ReplicaAddress;
            Windows.Win32.Foundation.PWSTR NodeName;
            INT64 LastInBuildDurationInSeconds;
            void* Reserved;
        };

        struct FABRIC_STATELESS_SERVICE_PARTITION_QUERY_RESULT_ITEM
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_PARTITION_INFORMATION* PartitionInformation;
            UINT32 InstanceCount;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE HealthState;
            Microsoft.ServiceFabric.FABRIC_QUERY_SERVICE_PARTITION_STATUS PartitionStatus;
            void* Reserved;
        };

        struct FABRIC_STATELESS_SERVICE_QUERY_RESULT_ITEM
        {
            UINT16* ServiceName;
            Windows.Win32.Foundation.PWSTR ServiceTypeName;
            Windows.Win32.Foundation.PWSTR ServiceManifestVersion;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE HealthState;
            void* Reserved;
        };

        struct FABRIC_STATELESS_SERVICE_QUERY_RESULT_ITEM_EX1
        {
            Microsoft.ServiceFabric.FABRIC_QUERY_SERVICE_STATUS ServiceStatus;
            void* Reserved;
        };

        struct FABRIC_STATELESS_SERVICE_QUERY_RESULT_ITEM_EX2
        {
            Windows.Win32.Foundation.BOOLEAN IsServiceGroup;
            void* Reserved;
        };

        struct FABRIC_STATELESS_SERVICE_TYPE_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR ServiceTypeName;
            Windows.Win32.Foundation.PWSTR PlacementConstraints;
            Microsoft.ServiceFabric.FABRIC_SERVICE_LOAD_METRIC_DESCRIPTION_LIST* LoadMetrics;
            Microsoft.ServiceFabric.FABRIC_SERVICE_TYPE_DESCRIPTION_EXTENSION_LIST* Extensions;
            Windows.Win32.Foundation.BOOLEAN UseImplicitHost;
            void* Reserved;
        };

        struct FABRIC_STATELESS_SERVICE_TYPE_DESCRIPTION_EX1
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_PLACEMENT_POLICY_LIST* PolicyList;
            void* Reserved;
        };

        struct FABRIC_STATELESS_SERVICE_UPDATE_DESCRIPTION
        {
            UINT32 Flags;
            INT32 InstanceCount;
            void* Reserved;
        };

        struct FABRIC_STATELESS_SERVICE_UPDATE_DESCRIPTION_EX1
        {
            Windows.Win32.Foundation.PWSTR PlacementConstraints;
            Microsoft.ServiceFabric.FABRIC_SERVICE_PLACEMENT_POLICY_LIST* PolicyList;
            UINT32 CorrelationCount;
            Microsoft.ServiceFabric.FABRIC_SERVICE_CORRELATION_DESCRIPTION* Correlations;
            UINT32 MetricCount;
            Microsoft.ServiceFabric.FABRIC_SERVICE_LOAD_METRIC_DESCRIPTION* Metrics;
            void* Reserved;
        };

        struct FABRIC_STATELESS_SERVICE_UPDATE_DESCRIPTION_EX2
        {
            Microsoft.ServiceFabric.FABRIC_MOVE_COST DefaultMoveCost;
            void* Reserved;
        };

        struct FABRIC_STATELESS_SERVICE_UPDATE_DESCRIPTION_EX3
        {
            Microsoft.ServiceFabric.FABRIC_SERVICE_PARTITION_KIND RepartitionKind;
            void* RepartitionDescription;
            UINT32 ScalingPolicyCount;
            Microsoft.ServiceFabric.FABRIC_SERVICE_SCALING_POLICY* ServiceScalingPolicies;
            void* Reserved;
        };

        struct FABRIC_STOPPED_EVENT
        {
            Windows.Win32.Foundation.FILETIME TimeStampUtc;
            Windows.Win32.Foundation.PWSTR Reason;
            void* Reserved;
        };

        struct FABRIC_STOP_NODE_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            UINT64 NodeInstanceId;
            void* Reserved;
        };

        struct FABRIC_STOP_NODE_DESCRIPTION2
        {
            Microsoft.ServiceFabric.FABRIC_STOP_NODE_DESCRIPTION_KIND Kind;
            void* Value;
        };

        struct FABRIC_STOP_NODE_DESCRIPTION_USING_NODE_NAME
        {
            Windows.Win32.Foundation.PWSTR NodeName;
            UINT64 NodeInstanceId;
            void* Reserved;
        };

        struct FABRIC_STOP_NODE_STATUS
        {
            Microsoft.ServiceFabric.FABRIC_NODE_RESULT* NodeResult;
            void* Reserved;
        };

        struct FABRIC_STORE_BACKUP_INFO
        {
            Windows.Win32.Foundation.PWSTR BackupFolder;
            Microsoft.ServiceFabric.FABRIC_STORE_BACKUP_OPTION BackupOption;
            void* Reserved;
        };

        struct FABRIC_STORE_BACKUP_INFO_EX1
        {
            GUID BackupChainId;
            UINT32 BackupIndex;
            void* Reserved;
        };

        struct FABRIC_STRING_LIST
        {
            UINT32 Count;
            Windows.Win32.Foundation.PWSTR* Items;
        };

        struct FABRIC_STRING_MAP
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_APPLICATION_PARAMETER* Items;
        };

        struct FABRIC_SYSTEM_APPLICATION_HEALTH_EVALUATION
        {
            Windows.Win32.Foundation.PWSTR Description;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            void* Reserved;
        };

        struct FABRIC_SYSTEM_SERVICE_QUERY_DESCRIPTION
        {
            UINT16* SystemServiceNameFilter;
            void* Reserved;
        };

        struct FABRIC_TEST_COMMAND_LIST_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_TEST_COMMAND_STATE_FILTER TestCommandStateFilter;
            Microsoft.ServiceFabric.FABRIC_TEST_COMMAND_TYPE_FILTER TestCommandTypeFilter;
            void* Reserved;
        };

        struct FABRIC_TEST_ERROR_EVENT
        {
            Windows.Win32.Foundation.FILETIME TimeStampUtc;
            Windows.Win32.Foundation.PWSTR Reason;
            void* Reserved;
        };

        struct FABRIC_UNIFORM_INT64_RANGE_PARTITION_SCHEME_DESCRIPTION
        {
            INT32 PartitionCount;
            INT64 LowKey;
            INT64 HighKey;
            void* Reserved;
        };

        struct FABRIC_UNPLACED_REPLICA_INFORMATION
        {
            UINT16* ServiceName;
            GUID PartitionId;
            Microsoft.ServiceFabric.FABRIC_STRING_LIST* UnplacedReplicaReasons;
            void* Reserved;
        };

        struct FABRIC_UNPLACED_REPLICA_INFORMATION_LIST
        {
            UINT32 Count;
            Windows.Win32.Foundation.PWSTR* Items;
        };

        struct FABRIC_UNPLACED_REPLICA_INFORMATION_QUERY_DESCRIPTION
        {
            UINT16* ServiceName;
            GUID PartitionId;
            Windows.Win32.Foundation.BOOLEAN OnlyQueryPrimaries;
            void* Reserved;
        };

        struct FABRIC_UNPROVISION_APPLICATION_TYPE_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR ApplicationTypeName;
            Windows.Win32.Foundation.PWSTR ApplicationTypeVersion;
            Windows.Win32.Foundation.BOOLEAN Async;
            void* Reserved;
        };

        struct FABRIC_UPGRADE_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR CodeVersion;
            Windows.Win32.Foundation.PWSTR ConfigVersion;
            Microsoft.ServiceFabric.FABRIC_UPGRADE_KIND UpgradeKind;
            void* UpgradePolicyDescription;
            void* Reserved;
        };

        struct FABRIC_UPGRADE_DOMAIN_DELTA_NODES_CHECK_HEALTH_EVALUATION
        {
            Windows.Win32.Foundation.PWSTR Description;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Windows.Win32.Foundation.PWSTR UpgradeDomainName;
            UINT32 BaselineErrorCount;
            UINT32 BaselineTotalCount;
            UINT32 TotalCount;
            BYTE MaxPercentUpgradeDomainDeltaUnhealthyNodes;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            void* Reserved;
        };

        struct FABRIC_UPGRADE_DOMAIN_DEPLOYED_APPLICATIONS_HEALTH_EVALUATION
        {
            Windows.Win32.Foundation.PWSTR Description;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Windows.Win32.Foundation.PWSTR UpgradeDomainName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            UINT32 TotalCount;
            BYTE MaxPercentUnhealthyDeployedApplications;
            void* Reserved;
        };

        struct FABRIC_UPGRADE_DOMAIN_NODES_HEALTH_EVALUATION
        {
            Windows.Win32.Foundation.PWSTR Description;
            Microsoft.ServiceFabric.FABRIC_HEALTH_STATE AggregatedHealthState;
            Windows.Win32.Foundation.PWSTR UpgradeDomainName;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            UINT32 TotalCount;
            BYTE MaxPercentUnhealthyNodes;
            void* Reserved;
        };

        struct FABRIC_UPGRADE_DOMAIN_PROGRESS
        {
            Windows.Win32.Foundation.PWSTR UpgradeDomainName;
            Microsoft.ServiceFabric.FABRIC_NODE_UPGRADE_PROGRESS_LIST* NodeProgressList;
            void* Reserved;
        };

        struct FABRIC_UPGRADE_DOMAIN_STATUS_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR Name;
            Microsoft.ServiceFabric.FABRIC_UPGRADE_DOMAIN_STATE State;
            void* Reserved;
        };

        struct FABRIC_UPGRADE_DOMAIN_STATUS_DESCRIPTION_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_UPGRADE_DOMAIN_STATUS_DESCRIPTION* Items;
        };

        struct FABRIC_UPGRADE_ORCHESTRATION_SERVICE_STATE
        {
            Windows.Win32.Foundation.PWSTR CurrentCodeVersion;
            Windows.Win32.Foundation.PWSTR CurrentManifestVersion;
            Windows.Win32.Foundation.PWSTR TargetCodeVersion;
            Windows.Win32.Foundation.PWSTR TargetManifestVersion;
            Windows.Win32.Foundation.PWSTR PendingUpgradeType;
            void* Reserved;
        };

        struct FABRIC_UPGRADE_PARTITION_SAFETY_CHECK
        {
            GUID PartitionId;
            void* Reserved;
        };

        struct FABRIC_UPGRADE_PROGRESS
        {
            Microsoft.ServiceFabric.FABRIC_UPGRADE_DESCRIPTION* UpgradeDescription;
            Microsoft.ServiceFabric.FABRIC_UPGRADE_STATE UpgradeState;
            Microsoft.ServiceFabric.FABRIC_ROLLING_UPGRADE_MODE UpgradeMode;
            Windows.Win32.Foundation.PWSTR NextUpgradeDomain;
            Microsoft.ServiceFabric.FABRIC_UPGRADE_DOMAIN_STATUS_DESCRIPTION_LIST* UpgradeDomains;
            UINT32 UpgradeDurationInSeconds;
            UINT32 CurrentUpgradeDomainDurationInSeconds;
            Microsoft.ServiceFabric.FABRIC_HEALTH_EVALUATION_LIST* UnhealthyEvaluations;
            Microsoft.ServiceFabric.FABRIC_UPGRADE_DOMAIN_PROGRESS* CurrentUpgradeDomainProgress;
            void* Reserved;
        };

        struct FABRIC_UPGRADE_PROGRESS_EX1
        {
            Windows.Win32.Foundation.FILETIME StartTimestampUtc;
            Windows.Win32.Foundation.FILETIME FailureTimestampUtc;
            Microsoft.ServiceFabric.FABRIC_UPGRADE_FAILURE_REASON FailureReason;
            Microsoft.ServiceFabric.FABRIC_UPGRADE_DOMAIN_PROGRESS* UpgradeDomainProgressAtFailure;
            void* Reserved;
        };

        struct FABRIC_UPGRADE_SAFETY_CHECK
        {
            Microsoft.ServiceFabric.FABRIC_UPGRADE_SAFETY_CHECK_KIND Kind;
            void* Value;
        };

        struct FABRIC_UPGRADE_SAFETY_CHECK_LIST
        {
            UINT32 Count;
            Microsoft.ServiceFabric.FABRIC_UPGRADE_SAFETY_CHECK* Items;
        };

        struct FABRIC_UPGRADE_SEED_NODE_SAFETY_CHECK
        {
            void* Reserved;
        };

        struct FABRIC_UPGRADE_UPDATE_DESCRIPTION
        {
            Microsoft.ServiceFabric.FABRIC_UPGRADE_KIND UpgradeKind;
            UINT32 UpdateFlags;
            void* UpgradePolicyDescription;
            void* Reserved;
        };

        struct FABRIC_VALIDATION_FAILED_EVENT
        {
            Windows.Win32.Foundation.FILETIME TimeStampUtc;
            Windows.Win32.Foundation.PWSTR Reason;
            void* Reserved;
        };

        struct FABRIC_WAITING_EVENT
        {
            Windows.Win32.Foundation.FILETIME TimeStampUtc;
            Windows.Win32.Foundation.PWSTR Reason;
            void* Reserved;
        };

        struct FABRIC_WINDOWS_CREDENTIALS
        {
            Windows.Win32.Foundation.PWSTR RemoteSpn;
            UINT32 RemoteIdentityCount;
            Windows.Win32.Foundation.PWSTR* RemoteIdentities;
            Microsoft.ServiceFabric.FABRIC_PROTECTION_LEVEL ProtectionLevel;
            void* Reserved;
        };

        struct FABRIC_X509_CREDENTIALS
        {
            UINT32 AllowedCommonNameCount;
            Windows.Win32.Foundation.PWSTR* AllowedCommonNames;
            Microsoft.ServiceFabric.FABRIC_X509_FIND_TYPE FindType;
            void* FindValue;
            Microsoft.ServiceFabric.FABRIC_X509_STORE_LOCATION StoreLocation;
            Windows.Win32.Foundation.PWSTR StoreName;
            Microsoft.ServiceFabric.FABRIC_PROTECTION_LEVEL ProtectionLevel;
            void* Reserved;
        };

        struct FABRIC_X509_CREDENTIALS2
        {
            Windows.Win32.Foundation.PWSTR CertLoadPath;
            UINT32 RemoteCertThumbprintCount;
            Windows.Win32.Foundation.PWSTR* RemoteCertThumbprints;
            UINT32 RemoteX509NameCount;
            Microsoft.ServiceFabric.FABRIC_X509_NAME* RemoteX509Names;
            Microsoft.ServiceFabric.FABRIC_PROTECTION_LEVEL ProtectionLevel;
            void* Reserved;
        };

        struct FABRIC_X509_CREDENTIALS_EX1
        {
            UINT32 IssuerThumbprintCount;
            Windows.Win32.Foundation.PWSTR* IssuerThumbprints;
            void* Reserved;
        };

        struct FABRIC_X509_CREDENTIALS_EX2
        {
            UINT32 RemoteCertThumbprintCount;
            Windows.Win32.Foundation.PWSTR* RemoteCertThumbprints;
            UINT32 RemoteX509NameCount;
            Microsoft.ServiceFabric.FABRIC_X509_NAME* RemoteX509Names;
            void* FindValueSecondary;
            void* Reserved;
        };

        struct FABRIC_X509_CREDENTIALS_EX3
        {
            UINT32 RemoteCertIssuerCount;
            Microsoft.ServiceFabric.FABRIC_X509_ISSUER_NAME* RemoteCertIssuers;
            void* Reserved;
        };

        struct FABRIC_X509_ISSUER_NAME
        {
            Windows.Win32.Foundation.PWSTR Name;
            UINT32 IssuerStoreCount;
            Windows.Win32.Foundation.PWSTR* IssuerStores;
            void* Reserved;
        };

        struct FABRIC_X509_NAME
        {
            Windows.Win32.Foundation.PWSTR Name;
            Windows.Win32.Foundation.PWSTR IssuerCertThumbprint;
            void* Reserved;
        };

        struct PAGED_FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION
        {
            Windows.Win32.Foundation.PWSTR ApplicationTypeNameFilter;
            INT32 MaxResults;
            Windows.Win32.Foundation.PWSTR ContinuationToken;
            Windows.Win32.Foundation.BOOLEAN ExcludeApplicationParameters;
            void* Reserved;
        };

        struct PAGED_FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION_EX1
        {
            Windows.Win32.Foundation.PWSTR ApplicationTypeVersionFilter;
            void* Reserved;
        };

        struct PAGED_FABRIC_APPLICATION_TYPE_QUERY_DESCRIPTION_EX2
        {
            UINT32 ApplicationTypeDefinitionKindFilter;
            void* Reserved;
        };

        struct TEST_COMMAND_QUERY_RESULT_ITEM
        {
            GUID OperationId;
            Microsoft.ServiceFabric.FABRIC_TEST_COMMAND_PROGRESS_STATE TestCommandState;
            Microsoft.ServiceFabric.FABRIC_TEST_COMMAND_TYPE TestCommandType;
            void* Reserved;
        };

        struct TEST_COMMAND_QUERY_RESULT_LIST
        {
            UINT32 Count;
            void* Items;
        };

        runtimeclass Apis
        {
        }
    }
}
