//
// File generated by WinMDIDL version 8.00.0021
//

import "inspectable.idl";
import "AsyncInfo.idl";
import "EventToken.idl";
import "Windows.Foundation.idl";
import "Microsoft.ServiceFabric.idl";
import "Microsoft.ServiceFabric.FabricCommon.idl";
import "Windows.Win32.Foundation.idl";
import "Windows.Win32.System.Com.idl";

// Forward Declare
namespace Microsoft
{
    namespace ServiceFabric
    {
        typedef struct FABRIC_APPLICATION_PRINCIPALS_DESCRIPTION FABRIC_APPLICATION_PRINCIPALS_DESCRIPTION;

        typedef struct FABRIC_CODE_PACKAGE_DESCRIPTION FABRIC_CODE_PACKAGE_DESCRIPTION;

        typedef struct FABRIC_CODE_PACKAGE_EVENT_DESCRIPTION FABRIC_CODE_PACKAGE_EVENT_DESCRIPTION;

        typedef struct FABRIC_CONFIGURATION_PACKAGE_DESCRIPTION FABRIC_CONFIGURATION_PACKAGE_DESCRIPTION;

        typedef struct FABRIC_CONFIGURATION_PARAMETER_LIST FABRIC_CONFIGURATION_PARAMETER_LIST;

        typedef struct FABRIC_CONFIGURATION_SECTION FABRIC_CONFIGURATION_SECTION;

        typedef struct FABRIC_CONFIGURATION_SETTINGS FABRIC_CONFIGURATION_SETTINGS;

        typedef struct FABRIC_DATA_PACKAGE_DESCRIPTION FABRIC_DATA_PACKAGE_DESCRIPTION;

        typedef struct FABRIC_ENDPOINT_RESOURCE_DESCRIPTION FABRIC_ENDPOINT_RESOURCE_DESCRIPTION;

        typedef struct FABRIC_ENDPOINT_RESOURCE_DESCRIPTION_LIST FABRIC_ENDPOINT_RESOURCE_DESCRIPTION_LIST;

        typedef struct FABRIC_EPOCH FABRIC_EPOCH;

        typedef struct FABRIC_ESE_LOCAL_STORE_SETTINGS FABRIC_ESE_LOCAL_STORE_SETTINGS;

        typedef enum FABRIC_FAULT_TYPE FABRIC_FAULT_TYPE;

        typedef struct FABRIC_HEALTH_INFORMATION FABRIC_HEALTH_INFORMATION;

        typedef struct FABRIC_HEALTH_REPORT_SEND_OPTIONS FABRIC_HEALTH_REPORT_SEND_OPTIONS;

        typedef struct FABRIC_KEY_VALUE_STORE_ITEM FABRIC_KEY_VALUE_STORE_ITEM;

        typedef struct FABRIC_KEY_VALUE_STORE_ITEM_METADATA FABRIC_KEY_VALUE_STORE_ITEM_METADATA;

        typedef struct FABRIC_KEY_VALUE_STORE_RESTORE_SETTINGS FABRIC_KEY_VALUE_STORE_RESTORE_SETTINGS;

        typedef struct FABRIC_KEY_VALUE_STORE_TRANSACTION_SETTINGS FABRIC_KEY_VALUE_STORE_TRANSACTION_SETTINGS;

        typedef struct FABRIC_LOAD_METRIC FABRIC_LOAD_METRIC;

        typedef enum FABRIC_MOVE_COST FABRIC_MOVE_COST;

        typedef struct FABRIC_NODE_CONTEXT FABRIC_NODE_CONTEXT;

        typedef struct FABRIC_OPERATION_DATA_BUFFER FABRIC_OPERATION_DATA_BUFFER;

        typedef struct FABRIC_OPERATION_METADATA FABRIC_OPERATION_METADATA;

        typedef struct FABRIC_REPLICATOR_SETTINGS FABRIC_REPLICATOR_SETTINGS;

        typedef struct FABRIC_REPLICA_INFORMATION FABRIC_REPLICA_INFORMATION;

        typedef enum FABRIC_REPLICA_OPEN_MODE FABRIC_REPLICA_OPEN_MODE;

        typedef enum FABRIC_REPLICA_ROLE FABRIC_REPLICA_ROLE;

        typedef struct FABRIC_REPLICA_SET_CONFIGURATION FABRIC_REPLICA_SET_CONFIGURATION;

        typedef enum FABRIC_REPLICA_SET_QUORUM_MODE FABRIC_REPLICA_SET_QUORUM_MODE;

        typedef struct FABRIC_RUNAS_POLICY_DESCRIPTION FABRIC_RUNAS_POLICY_DESCRIPTION;

        typedef struct FABRIC_SECURITY_CREDENTIALS FABRIC_SECURITY_CREDENTIALS;

        typedef struct FABRIC_SERVICE_GROUP_TYPE_DESCRIPTION_LIST FABRIC_SERVICE_GROUP_TYPE_DESCRIPTION_LIST;

        typedef enum FABRIC_SERVICE_PARTITION_ACCESS_STATUS FABRIC_SERVICE_PARTITION_ACCESS_STATUS;

        typedef struct FABRIC_SERVICE_PARTITION_INFORMATION FABRIC_SERVICE_PARTITION_INFORMATION;

        typedef struct FABRIC_SERVICE_TYPE_DESCRIPTION_LIST FABRIC_SERVICE_TYPE_DESCRIPTION_LIST;

        typedef struct FABRIC_STORE_BACKUP_INFO FABRIC_STORE_BACKUP_INFO;

        typedef enum FABRIC_STORE_BACKUP_OPTION FABRIC_STORE_BACKUP_OPTION;

        typedef struct FABRIC_STRING_LIST FABRIC_STRING_LIST;

        typedef struct FABRIC_STRING_MAP FABRIC_STRING_MAP;

        typedef enum FABRIC_TRANSACTION_ISOLATION_LEVEL FABRIC_TRANSACTION_ISOLATION_LEVEL;
    }
}
namespace Microsoft
{
    namespace ServiceFabric
    {
        namespace FabricCommon
        {
            interface IFabricAsyncOperationCallback;

            interface IFabricAsyncOperationContext;

            interface IFabricStringListResult;

            interface IFabricStringResult;
        }
    }
}
namespace Windows
{
    namespace Win32
    {
        namespace Foundation
        {
            typedef struct BOOLEAN BOOLEAN;

            typedef struct HRESULT HRESULT;

            typedef struct PWSTR PWSTR;
        }
    }
}
namespace Windows
{
    namespace Win32
    {
        namespace System
        {
            namespace Com
            {
                interface IUnknown;
            }
        }
    }
}
namespace Microsoft
{
    namespace ServiceFabric
    {
        namespace FabricCommon
        {
            namespace FabricRuntime
            {
                typedef struct FabricRuntime FabricRuntime;

                delegate FnFabricMain;

                interface IFabricAtomicGroupStateProvider;

                interface IFabricAtomicGroupStateReplicator;

                interface IFabricCodePackage;

                interface IFabricCodePackage2;

                interface IFabricCodePackageActivationContext;

                interface IFabricCodePackageActivationContext2;

                interface IFabricCodePackageActivationContext3;

                interface IFabricCodePackageActivationContext4;

                interface IFabricCodePackageActivationContext5;

                interface IFabricCodePackageActivationContext6;

                interface IFabricCodePackageActivator;

                interface IFabricCodePackageChangeHandler;

                interface IFabricCodePackageEventHandler;

                interface IFabricConfigurationPackage;

                interface IFabricConfigurationPackage2;

                interface IFabricConfigurationPackageChangeHandler;

                interface IFabricDataPackage;

                interface IFabricDataPackageChangeHandler;

                interface IFabricEseLocalStoreSettingsResult;

                interface IFabricKeyValueStoreEnumerator;

                interface IFabricKeyValueStoreEnumerator2;

                interface IFabricKeyValueStoreItemEnumerator;

                interface IFabricKeyValueStoreItemEnumerator2;

                interface IFabricKeyValueStoreItemMetadataEnumerator;

                interface IFabricKeyValueStoreItemMetadataEnumerator2;

                interface IFabricKeyValueStoreItemMetadataResult;

                interface IFabricKeyValueStoreItemResult;

                interface IFabricKeyValueStoreNotification;

                interface IFabricKeyValueStoreNotificationEnumerator;

                interface IFabricKeyValueStoreNotificationEnumerator2;

                interface IFabricKeyValueStoreReplica;

                interface IFabricKeyValueStoreReplica2;

                interface IFabricKeyValueStoreReplica3;

                interface IFabricKeyValueStoreReplica4;

                interface IFabricKeyValueStoreReplica5;

                interface IFabricKeyValueStoreReplica6;

                interface IFabricNodeContextResult;

                interface IFabricNodeContextResult2;

                interface IFabricOperation;

                interface IFabricOperationData;

                interface IFabricOperationDataStream;

                interface IFabricOperationStream;

                interface IFabricOperationStream2;

                interface IFabricPrimaryReplicator;

                interface IFabricProcessExitHandler;

                interface IFabricReplicator;

                interface IFabricReplicatorCatchupSpecificQuorum;

                interface IFabricReplicatorSettingsResult;

                interface IFabricRuntime;

                interface IFabricSecondaryEventHandler;

                interface IFabricSecurityCredentialsResult;

                interface IFabricServiceGroupFactory;

                interface IFabricServiceGroupFactoryBuilder;

                interface IFabricServiceGroupPartition;

                interface IFabricStateProvider;

                interface IFabricStateReplicator;

                interface IFabricStateReplicator2;

                interface IFabricStatefulServiceFactory;

                interface IFabricStatefulServicePartition;

                interface IFabricStatefulServicePartition1;

                interface IFabricStatefulServicePartition2;

                interface IFabricStatefulServicePartition3;

                interface IFabricStatefulServiceReplica;

                interface IFabricStatelessServiceFactory;

                interface IFabricStatelessServiceInstance;

                interface IFabricStatelessServicePartition;

                interface IFabricStatelessServicePartition1;

                interface IFabricStatelessServicePartition2;

                interface IFabricStatelessServicePartition3;

                interface IFabricStoreEventHandler;

                interface IFabricStoreEventHandler2;

                interface IFabricStorePostBackupHandler;

                interface IFabricTransaction;

                interface IFabricTransactionBase;

                runtimeclass Apis;
            }
        }
    }
}

// Generic instantiations

// Type definition
namespace Microsoft
{
    namespace ServiceFabric
    {
        namespace FabricCommon
        {
            namespace FabricRuntime
            {
                struct FabricRuntime
                {
                };

                delegate
                    HRESULT FnFabricMain([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricRuntime* runtime, [in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricCodePackageActivationContext* activationContext, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_Invoke__);

                interface IFabricAtomicGroupStateProvider : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT BeginAtomicGroupCommit([in] INT64 atomicGroupId, [in] INT64 commitSequenceNumber, [in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginAtomicGroupCommit__);
                    HRESULT EndAtomicGroupCommit([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndAtomicGroupCommit__);
                    HRESULT BeginAtomicGroupRollback([in] INT64 atomicGroupId, [in] INT64 rollbackequenceNumber, [in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginAtomicGroupRollback__);
                    HRESULT EndAtomicGroupRollback([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndAtomicGroupRollback__);
                    HRESULT BeginUndoProgress([in] INT64 fromCommitSequenceNumber, [in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginUndoProgress__);
                    HRESULT EndUndoProgress([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndUndoProgress__);
                }

                interface IFabricAtomicGroupStateReplicator : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT CreateAtomicGroup([out] INT64* AtomicGroupId, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_CreateAtomicGroup__);
                    HRESULT BeginReplicateAtomicGroupOperation([in] INT64 atomicGroupId, [in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricOperationData* operationData, [in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] INT64* operationSequenceNumber, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginReplicateAtomicGroupOperation__);
                    HRESULT EndReplicateAtomicGroupOperation([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] INT64* operationSequenceNumber, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndReplicateAtomicGroupOperation__);
                    HRESULT BeginReplicateAtomicGroupCommit([in] INT64 atomicGroupId, [in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] INT64* commitSequenceNumber, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginReplicateAtomicGroupCommit__);
                    HRESULT EndReplicateAtomicGroupCommit([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] INT64* commitSequenceNumber, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndReplicateAtomicGroupCommit__);
                    HRESULT BeginReplicateAtomicGroupRollback([in] INT64 atomicGroupId, [in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] INT64* rollbackSequenceNumber, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginReplicateAtomicGroupRollback__);
                    HRESULT EndReplicateAtomicGroupRollback([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] INT64* rollbackSequenceNumber, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndReplicateAtomicGroupRollback__);
                }

                interface IFabricCodePackage : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT get_Description([out] [retval] Microsoft.ServiceFabric.FABRIC_CODE_PACKAGE_DESCRIPTION** __returnValue_get_Description__);
                    HRESULT get_Path([out] [retval] Windows.Win32.Foundation.PWSTR* __returnValue_get_Path__);
                }

                interface IFabricCodePackage2 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricCodePackage
                {
                    HRESULT get_SetupEntryPointRunAsPolicy([out] [retval] Microsoft.ServiceFabric.FABRIC_RUNAS_POLICY_DESCRIPTION** __returnValue_get_SetupEntryPointRunAsPolicy__);
                    HRESULT get_EntryPointRunAsPolicy([out] [retval] Microsoft.ServiceFabric.FABRIC_RUNAS_POLICY_DESCRIPTION** __returnValue_get_EntryPointRunAsPolicy__);
                }

                interface IFabricCodePackageActivationContext : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT get_ContextId([out] [retval] Windows.Win32.Foundation.PWSTR* __returnValue_get_ContextId__);
                    HRESULT get_CodePackageName([out] [retval] Windows.Win32.Foundation.PWSTR* __returnValue_get_CodePackageName__);
                    HRESULT get_CodePackageVersion([out] [retval] Windows.Win32.Foundation.PWSTR* __returnValue_get_CodePackageVersion__);
                    HRESULT get_WorkDirectory([out] [retval] Windows.Win32.Foundation.PWSTR* __returnValue_get_WorkDirectory__);
                    HRESULT get_LogDirectory([out] [retval] Windows.Win32.Foundation.PWSTR* __returnValue_get_LogDirectory__);
                    HRESULT get_TempDirectory([out] [retval] Windows.Win32.Foundation.PWSTR* __returnValue_get_TempDirectory__);
                    HRESULT get_ServiceTypes([out] [retval] Microsoft.ServiceFabric.FABRIC_SERVICE_TYPE_DESCRIPTION_LIST** __returnValue_get_ServiceTypes__);
                    HRESULT get_ServiceGroupTypes([out] [retval] Microsoft.ServiceFabric.FABRIC_SERVICE_GROUP_TYPE_DESCRIPTION_LIST** __returnValue_get_ServiceGroupTypes__);
                    HRESULT get_ApplicationPrincipals([out] [retval] Microsoft.ServiceFabric.FABRIC_APPLICATION_PRINCIPALS_DESCRIPTION** __returnValue_get_ApplicationPrincipals__);
                    HRESULT get_ServiceEndpointResources([out] [retval] Microsoft.ServiceFabric.FABRIC_ENDPOINT_RESOURCE_DESCRIPTION_LIST** __returnValue_get_ServiceEndpointResources__);
                    HRESULT GetServiceEndpointResource([in] Windows.Win32.Foundation.PWSTR serviceEndpointResourceName, [out] Microsoft.ServiceFabric.FABRIC_ENDPOINT_RESOURCE_DESCRIPTION** bufferedValue, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetServiceEndpointResource__);
                    HRESULT GetCodePackageNames([out] Microsoft.ServiceFabric.FabricCommon.IFabricStringListResult** names, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetCodePackageNames__);
                    HRESULT GetConfigurationPackageNames([out] Microsoft.ServiceFabric.FabricCommon.IFabricStringListResult** names, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetConfigurationPackageNames__);
                    HRESULT GetDataPackageNames([out] Microsoft.ServiceFabric.FabricCommon.IFabricStringListResult** names, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetDataPackageNames__);
                    HRESULT GetCodePackage([in] Windows.Win32.Foundation.PWSTR codePackageName, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricCodePackage** codePackage, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetCodePackage__);
                    HRESULT GetConfigurationPackage([in] Windows.Win32.Foundation.PWSTR configPackageName, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricConfigurationPackage** configPackage, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetConfigurationPackage__);
                    HRESULT GetDataPackage([in] Windows.Win32.Foundation.PWSTR dataPackageName, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricDataPackage** dataPackage, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetDataPackage__);
                    HRESULT RegisterCodePackageChangeHandler([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricCodePackageChangeHandler* callback, [out] INT64* callbackHandle, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_RegisterCodePackageChangeHandler__);
                    HRESULT UnregisterCodePackageChangeHandler([in] INT64 callbackHandle, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_UnregisterCodePackageChangeHandler__);
                    HRESULT RegisterConfigurationPackageChangeHandler([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricConfigurationPackageChangeHandler* callback, [out] INT64* callbackHandle, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_RegisterConfigurationPackageChangeHandler__);
                    HRESULT UnregisterConfigurationPackageChangeHandler([in] INT64 callbackHandle, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_UnregisterConfigurationPackageChangeHandler__);
                    HRESULT RegisterDataPackageChangeHandler([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricDataPackageChangeHandler* callback, [out] INT64* callbackHandle, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_RegisterDataPackageChangeHandler__);
                    HRESULT UnregisterDataPackageChangeHandler([in] INT64 callbackHandle, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_UnregisterDataPackageChangeHandler__);
                }

                interface IFabricCodePackageActivationContext2 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricCodePackageActivationContext
                {
                    HRESULT get_ApplicationName([out] [retval] UINT16** __returnValue_get_ApplicationName__);
                    HRESULT get_ApplicationTypeName([out] [retval] Windows.Win32.Foundation.PWSTR* __returnValue_get_ApplicationTypeName__);
                    HRESULT GetServiceManifestName([out] Microsoft.ServiceFabric.FabricCommon.IFabricStringResult** serviceManifestName, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetServiceManifestName__);
                    HRESULT GetServiceManifestVersion([out] Microsoft.ServiceFabric.FabricCommon.IFabricStringResult** serviceManifestVersion, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetServiceManifestVersion__);
                }

                interface IFabricCodePackageActivationContext3 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricCodePackageActivationContext2
                {
                    HRESULT ReportApplicationHealth([in] Microsoft.ServiceFabric.FABRIC_HEALTH_INFORMATION* healthInfo, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_ReportApplicationHealth__);
                    HRESULT ReportDeployedApplicationHealth([in] Microsoft.ServiceFabric.FABRIC_HEALTH_INFORMATION* healthInfo, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_ReportDeployedApplicationHealth__);
                    HRESULT ReportDeployedServicePackageHealth([in] Microsoft.ServiceFabric.FABRIC_HEALTH_INFORMATION* healthInfo, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_ReportDeployedServicePackageHealth__);
                }

                interface IFabricCodePackageActivationContext4 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricCodePackageActivationContext3
                {
                    HRESULT ReportApplicationHealth2([in] Microsoft.ServiceFabric.FABRIC_HEALTH_INFORMATION* healthInfo, [in] Microsoft.ServiceFabric.FABRIC_HEALTH_REPORT_SEND_OPTIONS* sendOptions, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_ReportApplicationHealth2__);
                    HRESULT ReportDeployedApplicationHealth2([in] Microsoft.ServiceFabric.FABRIC_HEALTH_INFORMATION* healthInfo, [in] Microsoft.ServiceFabric.FABRIC_HEALTH_REPORT_SEND_OPTIONS* sendOptions, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_ReportDeployedApplicationHealth2__);
                    HRESULT ReportDeployedServicePackageHealth2([in] Microsoft.ServiceFabric.FABRIC_HEALTH_INFORMATION* healthInfo, [in] Microsoft.ServiceFabric.FABRIC_HEALTH_REPORT_SEND_OPTIONS* sendOptions, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_ReportDeployedServicePackageHealth2__);
                }

                interface IFabricCodePackageActivationContext5 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricCodePackageActivationContext4
                {
                    HRESULT get_ServiceListenAddress([out] [retval] Windows.Win32.Foundation.PWSTR* __returnValue_get_ServiceListenAddress__);
                    HRESULT get_ServicePublishAddress([out] [retval] Windows.Win32.Foundation.PWSTR* __returnValue_get_ServicePublishAddress__);
                }

                interface IFabricCodePackageActivationContext6 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricCodePackageActivationContext5
                {
                    HRESULT GetDirectory([in] Windows.Win32.Foundation.PWSTR logicalDirectoryName, [out] Microsoft.ServiceFabric.FabricCommon.IFabricStringResult** directoryPath, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetDirectory__);
                }

                interface IFabricCodePackageActivator : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT BeginActivateCodePackage([in] Microsoft.ServiceFabric.FABRIC_STRING_LIST* codePackageNames, [in] Microsoft.ServiceFabric.FABRIC_STRING_MAP* environment, [in] UINT32 timeoutMilliseconds, [in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginActivateCodePackage__);
                    HRESULT EndActivateCodePackage([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndActivateCodePackage__);
                    HRESULT BeginDeactivateCodePackage([in] Microsoft.ServiceFabric.FABRIC_STRING_LIST* codePackageNames, [in] UINT32 timeoutMilliseconds, [in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginDeactivateCodePackage__);
                    HRESULT EndDeactivateCodePackage([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndDeactivateCodePackage__);
                    HRESULT AbortCodePackage([in] Microsoft.ServiceFabric.FABRIC_STRING_LIST* codePackageNames, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_AbortCodePackage__);
                    HRESULT RegisterCodePackageEventHandler([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricCodePackageEventHandler* eventHandler, [out] UINT64* callbackHandle, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_RegisterCodePackageEventHandler__);
                    HRESULT UnregisterCodePackageEventHandler([in] UINT64 callbackHandle, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_UnregisterCodePackageEventHandler__);
                }

                interface IFabricCodePackageChangeHandler : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT OnPackageAdded([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricCodePackageActivationContext* source, [in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricCodePackage* codePackage);
                    HRESULT OnPackageRemoved([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricCodePackageActivationContext* source, [in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricCodePackage* codePackage);
                    HRESULT OnPackageModified([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricCodePackageActivationContext* source, [in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricCodePackage* previousCodePackage, [in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricCodePackage* codePackage);
                }

                interface IFabricCodePackageEventHandler : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT OnCodePackageEvent([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricCodePackageActivator* source, [in] Microsoft.ServiceFabric.FABRIC_CODE_PACKAGE_EVENT_DESCRIPTION* eventDesc);
                }

                interface IFabricConfigurationPackage : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT get_Description([out] [retval] Microsoft.ServiceFabric.FABRIC_CONFIGURATION_PACKAGE_DESCRIPTION** __returnValue_get_Description__);
                    HRESULT get_Path([out] [retval] Windows.Win32.Foundation.PWSTR* __returnValue_get_Path__);
                    HRESULT get_Settings([out] [retval] Microsoft.ServiceFabric.FABRIC_CONFIGURATION_SETTINGS** __returnValue_get_Settings__);
                    HRESULT GetSection([in] Windows.Win32.Foundation.PWSTR sectionName, [out] Microsoft.ServiceFabric.FABRIC_CONFIGURATION_SECTION** bufferedValue, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetSection__);
                    HRESULT GetValue([in] Windows.Win32.Foundation.PWSTR sectionName, [in] Windows.Win32.Foundation.PWSTR parameterName, [out] BYTE* isEncrypted, [out] Windows.Win32.Foundation.PWSTR* bufferedValue, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetValue__);
                    HRESULT DecryptValue([in] Windows.Win32.Foundation.PWSTR encryptedValue, [out] Microsoft.ServiceFabric.FabricCommon.IFabricStringResult** decryptedValue, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_DecryptValue__);
                }

                interface IFabricConfigurationPackage2 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricConfigurationPackage
                {
                    HRESULT GetValues([in] Windows.Win32.Foundation.PWSTR sectionName, [in] Windows.Win32.Foundation.PWSTR parameterPrefix, [out] Microsoft.ServiceFabric.FABRIC_CONFIGURATION_PARAMETER_LIST** bufferedValue, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetValues__);
                }

                interface IFabricConfigurationPackageChangeHandler : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT OnPackageAdded([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricCodePackageActivationContext* source, [in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricConfigurationPackage* configPackage);
                    HRESULT OnPackageRemoved([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricCodePackageActivationContext* source, [in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricConfigurationPackage* configPackage);
                    HRESULT OnPackageModified([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricCodePackageActivationContext* source, [in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricConfigurationPackage* previousConfigPackage, [in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricConfigurationPackage* configPackage);
                }

                interface IFabricDataPackage : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT get_Description([out] [retval] Microsoft.ServiceFabric.FABRIC_DATA_PACKAGE_DESCRIPTION** __returnValue_get_Description__);
                    HRESULT get_Path([out] [retval] Windows.Win32.Foundation.PWSTR* __returnValue_get_Path__);
                }

                interface IFabricDataPackageChangeHandler : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT OnPackageAdded([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricCodePackageActivationContext* source, [in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricDataPackage* dataPackage);
                    HRESULT OnPackageRemoved([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricCodePackageActivationContext* source, [in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricDataPackage* dataPackage);
                    HRESULT OnPackageModified([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricCodePackageActivationContext* source, [in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricDataPackage* previousDataPackage, [in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricDataPackage* dataPackage);
                }

                interface IFabricEseLocalStoreSettingsResult : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT get_Settings([out] [retval] Microsoft.ServiceFabric.FABRIC_ESE_LOCAL_STORE_SETTINGS** __returnValue_get_Settings__);
                }

                interface IFabricKeyValueStoreEnumerator : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT EnumerateByKey([in] Windows.Win32.Foundation.PWSTR keyPrefix, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreItemEnumerator** result, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EnumerateByKey__);
                    HRESULT EnumerateMetadataByKey([in] Windows.Win32.Foundation.PWSTR keyPrefix, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreItemMetadataEnumerator** result, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EnumerateMetadataByKey__);
                }

                interface IFabricKeyValueStoreEnumerator2 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreEnumerator
                {
                    HRESULT EnumerateByKey2([in] Windows.Win32.Foundation.PWSTR keyPrefix, [in] Windows.Win32.Foundation.BOOLEAN strictPrefix, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreItemEnumerator** result, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EnumerateByKey2__);
                    HRESULT EnumerateMetadataByKey2([in] Windows.Win32.Foundation.PWSTR keyPrefix, [in] Windows.Win32.Foundation.BOOLEAN strictPrefix, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreItemMetadataEnumerator** result, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EnumerateMetadataByKey2__);
                }

                interface IFabricKeyValueStoreItemEnumerator : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT MoveNext([out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_MoveNext__);
                    HRESULT get_Current([out] [retval] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreItemResult** __returnValue_get_Current__);
                }

                interface IFabricKeyValueStoreItemEnumerator2 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreItemEnumerator
                {
                    HRESULT TryMoveNext([out] BYTE* success, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_TryMoveNext__);
                }

                interface IFabricKeyValueStoreItemMetadataEnumerator : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT MoveNext([out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_MoveNext__);
                    HRESULT get_Current([out] [retval] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreItemMetadataResult** __returnValue_get_Current__);
                }

                interface IFabricKeyValueStoreItemMetadataEnumerator2 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreItemMetadataEnumerator
                {
                    HRESULT TryMoveNext([out] BYTE* success, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_TryMoveNext__);
                }

                interface IFabricKeyValueStoreItemMetadataResult : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT get_Metadata([out] [retval] Microsoft.ServiceFabric.FABRIC_KEY_VALUE_STORE_ITEM_METADATA** __returnValue_get_Metadata__);
                }

                interface IFabricKeyValueStoreItemResult : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT get_Item([out] [retval] Microsoft.ServiceFabric.FABRIC_KEY_VALUE_STORE_ITEM** __returnValue_get_Item__);
                }

                interface IFabricKeyValueStoreNotification : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreItemResult
                {
                    HRESULT IsDelete([out] [retval] Windows.Win32.Foundation.BOOLEAN* __returnValue_IsDelete__);
                }

                interface IFabricKeyValueStoreNotificationEnumerator : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT MoveNext([out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_MoveNext__);
                    HRESULT get_Current([out] [retval] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreNotification** __returnValue_get_Current__);
                    HRESULT Reset();
                }

                interface IFabricKeyValueStoreNotificationEnumerator2 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreNotificationEnumerator
                {
                    HRESULT TryMoveNext([out] BYTE* success, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_TryMoveNext__);
                }

                interface IFabricKeyValueStoreReplica : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricStatefulServiceReplica
                {
                    HRESULT GetCurrentEpoch([out] Microsoft.ServiceFabric.FABRIC_EPOCH* currentEpoch, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetCurrentEpoch__);
                    HRESULT UpdateReplicatorSettings([in] Microsoft.ServiceFabric.FABRIC_REPLICATOR_SETTINGS* replicatorSettings, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_UpdateReplicatorSettings__);
                    HRESULT CreateTransaction([out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricTransaction** transaction, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_CreateTransaction__);
                    HRESULT Add([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricTransactionBase* transaction, [in] Windows.Win32.Foundation.PWSTR key, [in] INT32 valueSizeInBytes, [in] BYTE* value, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_Add__);
                    HRESULT Remove([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricTransactionBase* transaction, [in] Windows.Win32.Foundation.PWSTR key, [in] INT64 checkSequenceNumber, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_Remove__);
                    HRESULT Update([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricTransactionBase* transaction, [in] Windows.Win32.Foundation.PWSTR key, [in] INT32 valueSizeInBytes, [in] BYTE* value, [in] INT64 checkSequenceNumber, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_Update__);
                    HRESULT Get([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricTransactionBase* transaction, [in] Windows.Win32.Foundation.PWSTR key, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreItemResult** result, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_Get__);
                    HRESULT GetMetadata([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricTransactionBase* transaction, [in] Windows.Win32.Foundation.PWSTR key, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreItemMetadataResult** result, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetMetadata__);
                    HRESULT Contains([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricTransactionBase* transaction, [in] Windows.Win32.Foundation.PWSTR key, [out] BYTE* result, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_Contains__);
                    HRESULT Enumerate([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricTransactionBase* transaction, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreItemEnumerator** result, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_Enumerate__);
                    HRESULT EnumerateByKey([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricTransactionBase* transaction, [in] Windows.Win32.Foundation.PWSTR keyPrefix, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreItemEnumerator** result, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EnumerateByKey__);
                    HRESULT EnumerateMetadata([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricTransactionBase* transaction, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreItemMetadataEnumerator** result, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EnumerateMetadata__);
                    HRESULT EnumerateMetadataByKey([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricTransactionBase* transaction, [in] Windows.Win32.Foundation.PWSTR keyPrefix, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreItemMetadataEnumerator** result, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EnumerateMetadataByKey__);
                }

                interface IFabricKeyValueStoreReplica2 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreReplica
                {
                    HRESULT Backup([in] Windows.Win32.Foundation.PWSTR backupDirectory, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_Backup__);
                    HRESULT Restore([in] Windows.Win32.Foundation.PWSTR backupDirectory, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_Restore__);
                    HRESULT CreateTransaction2([in] Microsoft.ServiceFabric.FABRIC_KEY_VALUE_STORE_TRANSACTION_SETTINGS* settings, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricTransaction** transaction, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_CreateTransaction2__);
                }

                interface IFabricKeyValueStoreReplica3 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreReplica2
                {
                    HRESULT BeginBackup([in] Windows.Win32.Foundation.PWSTR backupDirectory, [in] Microsoft.ServiceFabric.FABRIC_STORE_BACKUP_OPTION backupOption, [in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricStorePostBackupHandler* postBackupHandler, [in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginBackup__);
                    HRESULT EndBackup([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndBackup__);
                }

                interface IFabricKeyValueStoreReplica4 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreReplica3
                {
                    HRESULT BeginRestore([in] Windows.Win32.Foundation.PWSTR backupDirectory, [in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginRestore__);
                    HRESULT EndRestore([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndRestore__);
                }

                interface IFabricKeyValueStoreReplica5 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreReplica4
                {
                    HRESULT TryAdd([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricTransactionBase* transaction, [in] Windows.Win32.Foundation.PWSTR key, [in] INT32 valueSizeInBytes, [in] BYTE* value, [out] BYTE* added, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_TryAdd__);
                    HRESULT TryRemove([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricTransactionBase* transaction, [in] Windows.Win32.Foundation.PWSTR key, [in] INT64 checkSequenceNumber, [out] BYTE* exists, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_TryRemove__);
                    HRESULT TryUpdate([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricTransactionBase* transaction, [in] Windows.Win32.Foundation.PWSTR key, [in] INT32 valueSizeInBytes, [in] BYTE* value, [in] INT64 checkSequenceNumber, [out] BYTE* exists, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_TryUpdate__);
                    HRESULT TryGet([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricTransactionBase* transaction, [in] Windows.Win32.Foundation.PWSTR key, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreItemResult** result, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_TryGet__);
                    HRESULT TryGetMetadata([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricTransactionBase* transaction, [in] Windows.Win32.Foundation.PWSTR key, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreItemMetadataResult** result, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_TryGetMetadata__);
                    HRESULT EnumerateByKey2([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricTransactionBase* transaction, [in] Windows.Win32.Foundation.PWSTR keyPrefix, [in] Windows.Win32.Foundation.BOOLEAN strictPrefix, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreItemEnumerator** result, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EnumerateByKey2__);
                    HRESULT EnumerateMetadataByKey2([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricTransactionBase* transaction, [in] Windows.Win32.Foundation.PWSTR keyPrefix, [in] Windows.Win32.Foundation.BOOLEAN strictPrefix, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreItemMetadataEnumerator** result, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EnumerateMetadataByKey2__);
                }

                interface IFabricKeyValueStoreReplica6 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreReplica5
                {
                    HRESULT BeginRestore2([in] Windows.Win32.Foundation.PWSTR backupDirectory, [in] Microsoft.ServiceFabric.FABRIC_KEY_VALUE_STORE_RESTORE_SETTINGS* settings, [in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginRestore2__);
                }

                interface IFabricNodeContextResult : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT get_NodeContext([out] [retval] Microsoft.ServiceFabric.FABRIC_NODE_CONTEXT** __returnValue_get_NodeContext__);
                }

                interface IFabricNodeContextResult2 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricNodeContextResult
                {
                    HRESULT GetDirectory([in] Windows.Win32.Foundation.PWSTR logicalDirectoryName, [out] Microsoft.ServiceFabric.FabricCommon.IFabricStringResult** directoryPath, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetDirectory__);
                }

                interface IFabricOperation : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT get_Metadata([out] [retval] Microsoft.ServiceFabric.FABRIC_OPERATION_METADATA** __returnValue_get_Metadata__);
                    HRESULT GetData([out] UINT32* count, [out] Microsoft.ServiceFabric.FABRIC_OPERATION_DATA_BUFFER** buffers, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetData__);
                    HRESULT Acknowledge([out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_Acknowledge__);
                }

                interface IFabricOperationData : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT GetData([out] UINT32* count, [out] Microsoft.ServiceFabric.FABRIC_OPERATION_DATA_BUFFER** buffers, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetData__);
                }

                interface IFabricOperationDataStream : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT BeginGetNext([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginGetNext__);
                    HRESULT EndGetNext([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricOperationData** operationData, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndGetNext__);
                }

                interface IFabricOperationStream : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT BeginGetOperation([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginGetOperation__);
                    HRESULT EndGetOperation([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricOperation** operation, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndGetOperation__);
                }

                interface IFabricOperationStream2 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricOperationStream
                {
                    HRESULT ReportFault([in] Microsoft.ServiceFabric.FABRIC_FAULT_TYPE faultType, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_ReportFault__);
                }

                interface IFabricPrimaryReplicator : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricReplicator
                {
                    HRESULT BeginOnDataLoss([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginOnDataLoss__);
                    HRESULT EndOnDataLoss([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] BYTE* isStateChanged, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndOnDataLoss__);
                    HRESULT UpdateCatchUpReplicaSetConfiguration([in] Microsoft.ServiceFabric.FABRIC_REPLICA_SET_CONFIGURATION* currentConfiguration, [in] Microsoft.ServiceFabric.FABRIC_REPLICA_SET_CONFIGURATION* previousConfiguration, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_UpdateCatchUpReplicaSetConfiguration__);
                    HRESULT BeginWaitForCatchUpQuorum([in] Microsoft.ServiceFabric.FABRIC_REPLICA_SET_QUORUM_MODE catchUpMode, [in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginWaitForCatchUpQuorum__);
                    HRESULT EndWaitForCatchUpQuorum([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndWaitForCatchUpQuorum__);
                    HRESULT UpdateCurrentReplicaSetConfiguration([in] Microsoft.ServiceFabric.FABRIC_REPLICA_SET_CONFIGURATION* currentConfiguration, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_UpdateCurrentReplicaSetConfiguration__);
                    HRESULT BeginBuildReplica([in] Microsoft.ServiceFabric.FABRIC_REPLICA_INFORMATION* replica, [in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginBuildReplica__);
                    HRESULT EndBuildReplica([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndBuildReplica__);
                    HRESULT RemoveReplica([in] INT64 replicaId, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_RemoveReplica__);
                }

                interface IFabricProcessExitHandler : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT FabricProcessExited();
                }

                interface IFabricReplicator : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT BeginOpen([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginOpen__);
                    HRESULT EndOpen([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] Microsoft.ServiceFabric.FabricCommon.IFabricStringResult** replicationAddress, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndOpen__);
                    HRESULT BeginChangeRole([in] Microsoft.ServiceFabric.FABRIC_EPOCH* epoch, [in] Microsoft.ServiceFabric.FABRIC_REPLICA_ROLE role, [in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginChangeRole__);
                    HRESULT EndChangeRole([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndChangeRole__);
                    HRESULT BeginUpdateEpoch([in] Microsoft.ServiceFabric.FABRIC_EPOCH* epoch, [in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginUpdateEpoch__);
                    HRESULT EndUpdateEpoch([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndUpdateEpoch__);
                    HRESULT BeginClose([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginClose__);
                    HRESULT EndClose([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndClose__);
                    HRESULT Abort();
                    HRESULT GetCurrentProgress([out] INT64* lastSequenceNumber, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetCurrentProgress__);
                    HRESULT GetCatchUpCapability([out] INT64* fromSequenceNumber, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetCatchUpCapability__);
                }

                interface IFabricReplicatorCatchupSpecificQuorum : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                }

                interface IFabricReplicatorSettingsResult : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT get_ReplicatorSettings([out] [retval] Microsoft.ServiceFabric.FABRIC_REPLICATOR_SETTINGS** __returnValue_get_ReplicatorSettings__);
                }

                interface IFabricRuntime : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT BeginRegisterStatelessServiceFactory([in] Windows.Win32.Foundation.PWSTR serviceTypeName, [in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricStatelessServiceFactory* factory, [in] UINT32 timeoutMilliseconds, [in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginRegisterStatelessServiceFactory__);
                    HRESULT EndRegisterStatelessServiceFactory([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndRegisterStatelessServiceFactory__);
                    HRESULT RegisterStatelessServiceFactory([in] Windows.Win32.Foundation.PWSTR serviceTypeName, [in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricStatelessServiceFactory* factory, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_RegisterStatelessServiceFactory__);
                    HRESULT BeginRegisterStatefulServiceFactory([in] Windows.Win32.Foundation.PWSTR serviceTypeName, [in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricStatefulServiceFactory* factory, [in] UINT32 timeoutMilliseconds, [in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginRegisterStatefulServiceFactory__);
                    HRESULT EndRegisterStatefulServiceFactory([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndRegisterStatefulServiceFactory__);
                    HRESULT RegisterStatefulServiceFactory([in] Windows.Win32.Foundation.PWSTR serviceTypeName, [in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricStatefulServiceFactory* factory, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_RegisterStatefulServiceFactory__);
                    HRESULT CreateServiceGroupFactoryBuilder([out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricServiceGroupFactoryBuilder** builder, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_CreateServiceGroupFactoryBuilder__);
                    HRESULT BeginRegisterServiceGroupFactory([in] Windows.Win32.Foundation.PWSTR groupServiceType, [in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricServiceGroupFactory* factory, [in] UINT32 timeoutMilliseconds, [in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginRegisterServiceGroupFactory__);
                    HRESULT EndRegisterServiceGroupFactory([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndRegisterServiceGroupFactory__);
                    HRESULT RegisterServiceGroupFactory([in] Windows.Win32.Foundation.PWSTR groupServiceType, [in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricServiceGroupFactory* factory, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_RegisterServiceGroupFactory__);
                }

                interface IFabricSecondaryEventHandler : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT OnCopyComplete([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreEnumerator* enumerator, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_OnCopyComplete__);
                    HRESULT OnReplicationOperation([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricKeyValueStoreNotificationEnumerator* enumerator, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_OnReplicationOperation__);
                }

                interface IFabricSecurityCredentialsResult : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT get_SecurityCredentials([out] [retval] Microsoft.ServiceFabric.FABRIC_SECURITY_CREDENTIALS** __returnValue_get_SecurityCredentials__);
                }

                interface IFabricServiceGroupFactory : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                }

                interface IFabricServiceGroupFactoryBuilder : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT AddStatelessServiceFactory([in] Windows.Win32.Foundation.PWSTR memberServiceType, [in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricStatelessServiceFactory* factory, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_AddStatelessServiceFactory__);
                    HRESULT AddStatefulServiceFactory([in] Windows.Win32.Foundation.PWSTR memberServiceType, [in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricStatefulServiceFactory* factory, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_AddStatefulServiceFactory__);
                    HRESULT RemoveServiceFactory([in] Windows.Win32.Foundation.PWSTR memberServiceType, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_RemoveServiceFactory__);
                    HRESULT ToServiceGroupFactory([out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricServiceGroupFactory** factory, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_ToServiceGroupFactory__);
                }

                interface IFabricServiceGroupPartition : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT ResolveMember([in] UINT16* name, [in] GUID* riid, [out] void** member, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_ResolveMember__);
                }

                interface IFabricStateProvider : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT BeginUpdateEpoch([in] Microsoft.ServiceFabric.FABRIC_EPOCH* epoch, [in] INT64 previousEpochLastSequenceNumber, [in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginUpdateEpoch__);
                    HRESULT EndUpdateEpoch([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndUpdateEpoch__);
                    HRESULT GetLastCommittedSequenceNumber([out] INT64* sequenceNumber, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetLastCommittedSequenceNumber__);
                    HRESULT BeginOnDataLoss([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginOnDataLoss__);
                    HRESULT EndOnDataLoss([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] BYTE* isStateChanged, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndOnDataLoss__);
                    HRESULT GetCopyContext([out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricOperationDataStream** copyContextStream, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetCopyContext__);
                    HRESULT GetCopyState([in] INT64 uptoSequenceNumber, [in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricOperationDataStream* copyContextStream, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricOperationDataStream** copyStateStream, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetCopyState__);
                }

                interface IFabricStateReplicator : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT BeginReplicate([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricOperationData* operationData, [in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] INT64* sequenceNumber, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginReplicate__);
                    HRESULT EndReplicate([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] INT64* sequenceNumber, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndReplicate__);
                    HRESULT GetReplicationStream([out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricOperationStream** stream, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetReplicationStream__);
                    HRESULT GetCopyStream([out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricOperationStream** stream, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetCopyStream__);
                    HRESULT UpdateReplicatorSettings([in] Microsoft.ServiceFabric.FABRIC_REPLICATOR_SETTINGS* replicatorSettings, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_UpdateReplicatorSettings__);
                }

                interface IFabricStateReplicator2 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricStateReplicator
                {
                    HRESULT GetReplicatorSettings([out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricReplicatorSettingsResult** replicatorSettings, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetReplicatorSettings__);
                }

                interface IFabricStatefulServiceFactory : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT CreateReplica([in] Windows.Win32.Foundation.PWSTR serviceTypeName, [in] UINT16* serviceName, [in] UINT32 initializationDataLength, [in] BYTE* initializationData, [in] GUID partitionId, [in] INT64 replicaId, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricStatefulServiceReplica** serviceReplica, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_CreateReplica__);
                }

                interface IFabricStatefulServicePartition : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT GetPartitionInfo([out] Microsoft.ServiceFabric.FABRIC_SERVICE_PARTITION_INFORMATION** bufferedValue, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetPartitionInfo__);
                    HRESULT GetReadStatus([out] Microsoft.ServiceFabric.FABRIC_SERVICE_PARTITION_ACCESS_STATUS* readStatus, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetReadStatus__);
                    HRESULT GetWriteStatus([out] Microsoft.ServiceFabric.FABRIC_SERVICE_PARTITION_ACCESS_STATUS* writeStatus, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetWriteStatus__);
                    HRESULT CreateReplicator([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricStateProvider* stateProvider, [in] Microsoft.ServiceFabric.FABRIC_REPLICATOR_SETTINGS* replicatorSettings, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricReplicator** replicator, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricStateReplicator** stateReplicator, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_CreateReplicator__);
                    HRESULT ReportLoad([in] UINT32 metricCount, [in] Microsoft.ServiceFabric.FABRIC_LOAD_METRIC* metrics, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_ReportLoad__);
                    HRESULT ReportFault([in] Microsoft.ServiceFabric.FABRIC_FAULT_TYPE faultType, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_ReportFault__);
                }

                interface IFabricStatefulServicePartition1 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricStatefulServicePartition
                {
                    HRESULT ReportMoveCost([in] Microsoft.ServiceFabric.FABRIC_MOVE_COST moveCost, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_ReportMoveCost__);
                }

                interface IFabricStatefulServicePartition2 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricStatefulServicePartition1
                {
                    HRESULT ReportReplicaHealth([in] Microsoft.ServiceFabric.FABRIC_HEALTH_INFORMATION* healthInfo, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_ReportReplicaHealth__);
                    HRESULT ReportPartitionHealth([in] Microsoft.ServiceFabric.FABRIC_HEALTH_INFORMATION* healthInfo, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_ReportPartitionHealth__);
                }

                interface IFabricStatefulServicePartition3 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricStatefulServicePartition2
                {
                    HRESULT ReportReplicaHealth2([in] Microsoft.ServiceFabric.FABRIC_HEALTH_INFORMATION* healthInfo, [in] Microsoft.ServiceFabric.FABRIC_HEALTH_REPORT_SEND_OPTIONS* sendOptions, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_ReportReplicaHealth2__);
                    HRESULT ReportPartitionHealth2([in] Microsoft.ServiceFabric.FABRIC_HEALTH_INFORMATION* healthInfo, [in] Microsoft.ServiceFabric.FABRIC_HEALTH_REPORT_SEND_OPTIONS* sendOptions, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_ReportPartitionHealth2__);
                }

                interface IFabricStatefulServiceReplica : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT BeginOpen([in] Microsoft.ServiceFabric.FABRIC_REPLICA_OPEN_MODE openMode, [in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricStatefulServicePartition* partition, [in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginOpen__);
                    HRESULT EndOpen([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricReplicator** replicator, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndOpen__);
                    HRESULT BeginChangeRole([in] Microsoft.ServiceFabric.FABRIC_REPLICA_ROLE newRole, [in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginChangeRole__);
                    HRESULT EndChangeRole([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] Microsoft.ServiceFabric.FabricCommon.IFabricStringResult** serviceAddress, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndChangeRole__);
                    HRESULT BeginClose([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginClose__);
                    HRESULT EndClose([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndClose__);
                    HRESULT Abort();
                }

                interface IFabricStatelessServiceFactory : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT CreateInstance([in] Windows.Win32.Foundation.PWSTR serviceTypeName, [in] UINT16* serviceName, [in] UINT32 initializationDataLength, [in] BYTE* initializationData, [in] GUID partitionId, [in] INT64 instanceId, [out] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricStatelessServiceInstance** serviceInstance, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_CreateInstance__);
                }

                interface IFabricStatelessServiceInstance : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT BeginOpen([in] Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricStatelessServicePartition* partition, [in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginOpen__);
                    HRESULT EndOpen([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] Microsoft.ServiceFabric.FabricCommon.IFabricStringResult** serviceAddress, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndOpen__);
                    HRESULT BeginClose([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginClose__);
                    HRESULT EndClose([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndClose__);
                    HRESULT Abort();
                }

                interface IFabricStatelessServicePartition : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT GetPartitionInfo([out] Microsoft.ServiceFabric.FABRIC_SERVICE_PARTITION_INFORMATION** bufferedValue, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_GetPartitionInfo__);
                    HRESULT ReportLoad([in] UINT32 metricCount, [in] Microsoft.ServiceFabric.FABRIC_LOAD_METRIC* metrics, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_ReportLoad__);
                    HRESULT ReportFault([in] Microsoft.ServiceFabric.FABRIC_FAULT_TYPE faultType, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_ReportFault__);
                }

                interface IFabricStatelessServicePartition1 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricStatelessServicePartition
                {
                    HRESULT ReportMoveCost([in] Microsoft.ServiceFabric.FABRIC_MOVE_COST moveCost, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_ReportMoveCost__);
                }

                interface IFabricStatelessServicePartition2 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricStatelessServicePartition1
                {
                    HRESULT ReportInstanceHealth([in] Microsoft.ServiceFabric.FABRIC_HEALTH_INFORMATION* healthInfo, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_ReportInstanceHealth__);
                    HRESULT ReportPartitionHealth([in] Microsoft.ServiceFabric.FABRIC_HEALTH_INFORMATION* healthInfo, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_ReportPartitionHealth__);
                }

                interface IFabricStatelessServicePartition3 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricStatelessServicePartition2
                {
                    HRESULT ReportInstanceHealth2([in] Microsoft.ServiceFabric.FABRIC_HEALTH_INFORMATION* healthInfo, [in] Microsoft.ServiceFabric.FABRIC_HEALTH_REPORT_SEND_OPTIONS* sendOptions, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_ReportInstanceHealth2__);
                    HRESULT ReportPartitionHealth2([in] Microsoft.ServiceFabric.FABRIC_HEALTH_INFORMATION* healthInfo, [in] Microsoft.ServiceFabric.FABRIC_HEALTH_REPORT_SEND_OPTIONS* sendOptions, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_ReportPartitionHealth2__);
                }

                interface IFabricStoreEventHandler : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT OnDataLoss();
                }

                interface IFabricStoreEventHandler2 : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricStoreEventHandler
                {
                    HRESULT BeginOnDataLoss([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginOnDataLoss__);
                    HRESULT EndOnDataLoss([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] BYTE* isStateChanged, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndOnDataLoss__);
                }

                interface IFabricStorePostBackupHandler : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT BeginPostBackup([in] Microsoft.ServiceFabric.FABRIC_STORE_BACKUP_INFO* info, [in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginPostBackup__);
                    HRESULT EndPostBackup([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] BYTE* status, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndPostBackup__);
                }

                interface IFabricTransaction : IInspectable
                    requires
                        Microsoft.ServiceFabric.FabricCommon.FabricRuntime.IFabricTransactionBase
                {
                    HRESULT BeginCommit([in] UINT32 timeoutMilliseconds, [in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationCallback* callback, [out] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext** context, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_BeginCommit__);
                    HRESULT EndCommit([in] Microsoft.ServiceFabric.FabricCommon.IFabricAsyncOperationContext* context, [out] INT64* commitSequenceNumber, [out] [retval] Windows.Win32.Foundation.HRESULT* __returnValue_EndCommit__);
                    HRESULT Rollback();
                }

                interface IFabricTransactionBase : IInspectable
                    requires
                        Windows.Win32.System.Com.IUnknown
                {
                    HRESULT get_Id([out] [retval] GUID** __returnValue_get_Id__);
                    HRESULT get_IsolationLevel([out] [retval] Microsoft.ServiceFabric.FABRIC_TRANSACTION_ISOLATION_LEVEL* __returnValue_get_IsolationLevel__);
                }

                runtimeclass Apis
                {
                }
            }
        }
    }
}
