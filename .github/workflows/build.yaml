name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        BUILD_TYPE: ["Debug", "Release"]
        os: [ windows-2022 ] # windows-2022 sf cluster cannot start
        BOOST_VERSION: [ 1.79.0 ]
    steps:
    - name: find latest win sdk
      run: |
          $sdkver = Get-ChildItem "Registry::HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows Kits\Installed Roots\" | Select-Object -Last 1 -ExpandProperty PSChildName
          echo "Using win sdkver $sdkver"
          echo $env:GITHUB_ENV
          echo "sdkver=$sdkver" >> $env:GITHUB_ENV
      shell: pwsh

    - name: check sdkver env is set
      run: |
        echo "sdk ver is ${{ env.sdkver }}"
      shell: pwsh

    - uses: actions/checkout@v2

    - name: Show VC version
      run: |
        & "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe"
      shell: pwsh

    - name: Get MSVC
      uses: ilammy/msvc-dev-cmd@v1

    - name: Get specific version CMake, v3.21.2
      uses: lukka/get-cmake@v3.21.2
    
    - name: Get Boost
      uses: MarkusJx/install-boost@v2.4.1
      id: install-boost
      with:
        # REQUIRED: Specify the required boost version
        # A list of supported versions can be found here: 
        # https://github.com/MarkusJx/prebuilt-boost/blob/main/versions-manifest.json
        boost_version: ${{ matrix.BOOST_VERSION }}
        toolset: msvc
        platform_version: 2022
        link: static

    - name: check sf exist
      run: Powershell.exe -File .\scripts\check_sf_installed.ps1

    # we use winrt with coro support. Use the latest winsdk.
    # github runner has multiple versions of winsdk installed, and we use the latest one.
    - name: run cmake
      env:
        BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
      run: > 
        cmake . -DCMAKE_BUILD_TYPE=${{ matrix.BUILD_TYPE }} -B build -T host=x64 -A x64 -DCMAKE_SYSTEM_VERSION="${{ env.sdkver }}"
    - name: run build
      run: cmake --build build --config ${{ matrix.BUILD_TYPE }}

    # mysql bin has conflicting dlls with fabric than prevents fabric from starting
    - name: Remove conflict dll paths
      shell: powershell
      run: |
        get-command libprotobuf.dll
        Remove-Item -Recurse -Force C:\mysql\bin

    - name: start sf cluster
      shell: powershell
      run: |
        & "C:\Program Files\Microsoft SDKs\Service Fabric\ClusterSetup\DevClusterSetup.ps1" -CreateOneNodeCluster
    
    - name: start connection
      run: Powershell.exe -File .\scripts\check_cluster_online.ps1
    # # TODO: determine if stop cluster is needed

    # tests require cluster to be running are disabled
    - name: run test
      run: ctest -C ${{ matrix.BUILD_TYPE }} --test-dir build --verbose --repeat until-pass:3 --timeout 30

    - name: run example test
      run: Powershell.exe -File .\tests\examples_script_test.ps1 -Mode ${{ matrix.BUILD_TYPE }}

    - name: run echo example app
      run: Powershell.exe -File .\tests\echo_script_test.ps1

